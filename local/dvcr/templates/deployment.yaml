---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dvcr
  labels:
    heritage: storage
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        heritage: storage
        app: {{ .Release.Name }}
      annotations:
        hack/pod-restart: {{ now | date "20060102150405" | quote }}
    spec:
      containers:
      - name: nginx
        image: {{ .Values.images.nginx | quote }}
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command: [ "/usr/sbin/nginx", "-s", "quit" ]
        livenessProbe:
          httpGet:
            path: /healthz
            port: 443
            scheme: HTTPS
        readinessProbe:
          httpGet:
            path: /healthz
            port: 443
            scheme: HTTPS
        ports:
          - containerPort: 443
            name: https
            protocol: TCP
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
          - name: nginx-auth
            mountPath: /etc/nginx/htpasswd/htpasswd
            subPath: htpasswd
            readOnly: true
          - name: nginx-certs
            mountPath: /etc/nginx/certs
            readOnly: true
          - name: tmp
            mountPath: /tmp
      - name: registry
        image: {{ .Values.images.registry | quote }}
        imagePullPolicy: Always
        env:
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        volumeMounts:
          - name: dvcr-storage
            mountPath: "/var/lib/registry"

      #dnsPolicy: ClusterFirst
      # Default
      #   dnsPolicy: ClusterFirstWithHostNet

      serviceAccountName: {{ .Release.Name }}
      volumes:
        - name: dvcr-storage
          persistentVolumeClaim:
            claimName: dvcr
        - name: nginx-config
          configMap:
            name: registry-nginx-config
        - name: nginx-auth
          secret:
            secretName: registry-nginx-auth
        - name: nginx-certs
          secret:
            secretName: registry-nginx-certs
        - name: tmp
          emptyDir: {}
