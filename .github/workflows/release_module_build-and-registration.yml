# Copyright 2024 Flant JSC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and push for prod

env:
  MODULES_REGISTRY: ${{ vars.PROD_REGISTRY }}
  CI_COMMIT_REF_NAME: ${{ github.ref_name }}
  MODULES_MODULE_NAME: ${{ vars.MODULE_NAME }}
  MODULE_SOURCE_NAME: ${{ vars.PROD_MODULE_SOURCE_NAME }}
  MODULES_REGISTRY_LOGIN: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
  MODULES_REGISTRY_PASSWORD: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
  MODULES_MODULE_TAG: ${{ github.ref_name }}
  SOURCE_REPO: "${{ secrets.SOURCE_REPO }}"
  SOURCE_REPO_GIT: "${{secrets.SOURCE_REPO_GIT}}"

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

defaults:
  run:
    shell: bash

concurrency:
  group: "${{ github.workflow }}-${{ github.event.number || github.ref }}"
  cancel-in-progress: true

jobs:
  prod_ce_setup_build:
    runs-on: [self-hosted, large]
    name: Build and Push CE
    steps:
      - name: SET VAR
        id: set_vars
        run: |
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/ce/modules" >> "$GITHUB_ENV"
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/ce/modules" >> "$GITHUB_OUTPUT"
          echo "MODULE_EDITION=CE" >> "$GITHUB_ENV"
          echo "MODULE_EDITION=CE" >> "$GITHUB_OUTPUT"
      - run: |
          echo $MODULES_REGISTRY
          echo $MODULES_MODULE_NAME
          echo $MODULES_MODULE_SOURCE
          echo $MODULES_MODULE_TAG
        shell: bash
        name: Show vars

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to PROD_REGISTRY
        uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.PROD_REGISTRY }}
          registry_login: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
      - name: Login to DEV_REGISTRY
        uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.DEV_REGISTRY }}
          registry_login: ${{ vars.DEV_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.DEV_MODULES_REGISTRY_PASSWORD }}

      - uses: deckhouse/modules-actions/build@v4
        with:
          module_source: ${{ steps.set_vars.outputs.MODULES_MODULE_SOURCE }}
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.ref_name }}
          source_repo: ${{secrets.SOURCE_REPO_GIT}}
          source_repo_ssh_key: ${{ secrets.SOURCE_REPO_SSH_KEY }}
          secondary_repo: "${{ vars.DEV_MODULE_SOURCE }}/${{ vars.MODULE_NAME }}"

  prod_ee_setup_build:
    runs-on: [self-hosted, large]
    name: Build and Push EE
    steps:
      - name: SET VAR
        id: set_vars
        run: |
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/ee/modules" >> "$GITHUB_ENV"
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/ee/modules" >> "$GITHUB_OUTPUT"
          echo "MODULE_EDITION=EE" >> "$GITHUB_ENV"
          echo "MODULE_EDITION=EE" >> "$GITHUB_OUTPUT"
      - run: |
          echo $MODULES_REGISTRY
          echo $MODULES_MODULE_NAME
          echo $MODULES_MODULE_SOURCE
          echo $MODULES_MODULE_TAG
        shell: bash
        name: Show vars

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to PROD_REGISTRY
        uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.PROD_REGISTRY }}
          registry_login: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
      - name: Login to DEV_REGISTRY
        uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.DEV_REGISTRY }}
          registry_login: ${{ vars.DEV_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.DEV_MODULES_REGISTRY_PASSWORD }}

      - uses: deckhouse/modules-actions/build@v4
        with:
          module_source: ${{ steps.set_vars.outputs.MODULES_MODULE_SOURCE }}
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.ref_name }}
          source_repo: ${{secrets.SOURCE_REPO_GIT}}
          source_repo_ssh_key: ${{ secrets.SOURCE_REPO_SSH_KEY }}
          secondary_repo: "${{ vars.DEV_MODULE_SOURCE }}/${{ vars.MODULE_NAME }}"

  prod_se_plus_setup_build:
    runs-on: [self-hosted, large]
    needs: prod_ee_setup_build
    name: Build and Push SE Plus
    steps:
      - name: SET VAR
        id: set_vars
        run: |
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/se-plus/modules" >> "$GITHUB_ENV"
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/se-plus/modules" >> "$GITHUB_OUTPUT"
          echo "MODULE_EDITION=EE" >> "$GITHUB_ENV"
          echo "MODULE_EDITION=EE" >> "$GITHUB_OUTPUT"
      - run: |
          echo $MODULES_REGISTRY
          echo $MODULES_MODULE_NAME
          echo $MODULES_MODULE_SOURCE
          echo $MODULES_MODULE_TAG
        shell: bash
        name: Show vars

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to PROD_REGISTRY
        uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.PROD_REGISTRY }}
          registry_login: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
      - name: Login to DEV_REGISTRY
        uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.DEV_REGISTRY }}
          registry_login: ${{ vars.DEV_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.DEV_MODULES_REGISTRY_PASSWORD }}

      - uses: deckhouse/modules-actions/build@v4
        with:
          module_source: ${{ steps.set_vars.outputs.MODULES_MODULE_SOURCE }}
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.ref_name }}
          source_repo: ${{secrets.SOURCE_REPO_GIT}}
          source_repo_ssh_key: ${{ secrets.SOURCE_REPO_SSH_KEY }}
          secondary_repo: "${{ vars.DEV_MODULE_SOURCE }}/${{ vars.MODULE_NAME }}"

  prod_fe_setup_build:
    runs-on: [self-hosted, large]
    needs: prod_ee_setup_build
    name: Build and Push FE
    steps:
      - name: SET VAR
        id: set_vars
        run: |
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/fe/modules" >> "$GITHUB_ENV"
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/fe/modules" >> "$GITHUB_OUTPUT"
          echo "MODULE_EDITION=EE" >> "$GITHUB_ENV"
          echo "MODULE_EDITION=EE" >> "$GITHUB_OUTPUT"
      - run: |
          echo $MODULES_REGISTRY
          echo $MODULES_MODULE_NAME
          echo $MODULES_MODULE_SOURCE
          echo $MODULES_MODULE_TAG
        shell: bash
        name: Show vars

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to PROD_REGISTRY
        uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.PROD_REGISTRY }}
          registry_login: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
      - name: Login to DEV_REGISTRY
        uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.DEV_REGISTRY }}
          registry_login: ${{ vars.DEV_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.DEV_MODULES_REGISTRY_PASSWORD }}

      - uses: deckhouse/modules-actions/build@v4
        with:
          module_source: ${{ steps.set_vars.outputs.MODULES_MODULE_SOURCE }}
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.ref_name }}
          source_repo: ${{secrets.SOURCE_REPO_GIT}}
          source_repo_ssh_key: ${{ secrets.SOURCE_REPO_SSH_KEY }}
          secondary_repo: "${{ vars.DEV_MODULE_SOURCE }}/${{ vars.MODULE_NAME }}"
