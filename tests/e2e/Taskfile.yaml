version: "3"

silent: true

vars:
  E2E_CLUSTERTRANSPORT_KUBECONFIG: '{{ .E2E_CLUSTERTRANSPORT_KUBECONFIG | default "$HOME/.kube/config" }}'
  GINKGO_VERSION: "2.20.0"
  VERSION: "v1.0.0"

tasks:
  copy:
    cmds:
      - |
        rm --force --recursive /tmp/testdata
        mkdir /tmp/testdata
        cp --archive testdata/virtualization-resources /tmp/testdata/virtualization-resources
  virtctl:
    cmds:
      - |
        case {{OS}} in
          darwin*)      CMD_PATH="/opt/homebrew/bin/virtctl" ;;
          linux*)       CMD_PATH="/usr/local/bin/virtctl"    ;;
          *)            echo "unknown: {{OS}}"; exit 1       ;;
        esac

        URL="https://github.com/kubevirt/kubevirt/releases/download/{{ .VERSION }}/virtctl-{{ .VERSION }}-{{OS}}-{{ARCH}}"
        test -f $CMD_PATH || ( sudo curl -L $URL -o $CMD_PATH && sudo chmod +x $CMD_PATH )
  ginkgo:
    cmds:
      - |
        v=($(ginkgo version 2>/dev/null)) 
        if [ "${v[2]}" != "{{ .GINKGO_VERSION }}" ]; then 
          go install github.com/onsi/ginkgo/v2/ginkgo@v"{{ .GINKGO_VERSION }}" ; 
        fi
  run:
    desc: "Run e2e tests"
    deps:
      - virtctl
      - ginkgo
    cmds:
      - ginkgo --focus "Virtualization resources"

  run_local:
    desc: "Run locally e2e tests"
    deps:
      - copy
      - virtctl
      - ginkgo
    cmds:
      - |
        export E2E_CLUSTERTRANSPORT_KUBECONFIG={{.E2E_CLUSTERTRANSPORT_KUBECONFIG}}
        ginkgo --focus "Virtualization resources"

  run_one:
    desc: "Run one test or group"
    deps:
      - virtctl
      - ginkgo
    cmds:
      - |
        {{if .TEST }}
          export E2E_CLUSTERTRANSPORT_KUBECONFIG={{.E2E_CLUSTERTRANSPORT_KUBECONFIG}}
          ginkgo --focus "{{ .TEST }}" -v
        {{else}}
          echo "Specify test to run"
          echo 'Example: TEST="Label and Annotation" task run_one'
        {{end}}

  fix:ssh_key_perm:
    desc: "Check and fix rights for ssh keys"
    cmds:
      - |
        ID_ED=testdata/vm/sshkeys/id_ed
        case {{OS}} in
          darwin*)      RIGHTS_SSH=$(stat -f %Lp $ID_ED) ;;
          linux*)       RIGHTS_SSH=$(stat -c "%a" $ID_ED) ;;
          *)            echo "unknown: {{OS}}"; exit 1       ;;
        esac

        if [ $RIGHTS_SSH -ne 600 ]; then
          echo "Fix permissions for file $ID_ED"
          chmod 600 $ID_ED
        fi
