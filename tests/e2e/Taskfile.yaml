version: "3"

silent: true

tasks:
  virtctl:
    vars:
      VERSION: "v1.0.0"
    cmds:
      - |
        case {{OS}} in
          darwin*)      CMD_PATH="/opt/homebrew/bin/virtctl" ;;
          linux*)       CMD_PATH="/usr/local/bin/virtctl"    ;;
          *)            echo "unknown: {{OS}}"; exit 1       ;;
        esac
        
        URL="https://github.com/kubevirt/kubevirt/releases/download/{{ .VERSION }}/virtctl-{{ .VERSION }}-{{OS}}-{{ARCH}}"
        test -f $CMD_PATH || ( sudo curl -L $URL -o $CMD_PATH && sudo chmod +x $CMD_PATH )
  ginkgo:
    vars:
      VERSION: "2.13.2"
    cmds:
      - |
        v=($(ginkgo version 2>/dev/null)) 
        if [ "${v[2]}" != "{{ .VERSION }}" ]; then 
          go install github.com/onsi/ginkgo/v2/ginkgo@v"{{ .VERSION }}" ; 
        fi
  run:
    desc: "Run e2e tests"
    deps:
      - virtctl
      - ginkgo
    cmds:
      - ginkgo

  set_local_env:
    cmds:
      - |
        if [ -z "$KUBECONFIG" ]; then export KUBECONFIG=$HOME/.kube/config;else echo $KUBECONFIG - KUBECONFIG;fi;
        if [ -z "$E2E_CLUSTERTRANSPORT_KUBECONFIG" ]; then 
          export E2E_CLUSTERTRANSPORT_KUBECONFIG=$KUBECONFIG
        else 
          echo $E2E_CLUSTERTRANSPORT_KUBECONFIG - E2E_CLUSTERTRANSPORT_KUBECONFIG
        fi

  run_local:
    desc: "Run localy e2e tests"
    deps:
      - set_local_env
      - virtctl
      - ginkgo
    cmds:
      - ginkgo

# ginkgo --focus
# ginkgo --focus "Disks"
