/*
Copyright Flant JSC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	corev1alpha2 "github.com/deckhouse/virtualization/api/core/v1alpha2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// VirtualDiskLister helps list VirtualDisks.
// All objects returned here must be treated as read-only.
type VirtualDiskLister interface {
	// List lists all VirtualDisks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*corev1alpha2.VirtualDisk, err error)
	// VirtualDisks returns an object that can list and get VirtualDisks.
	VirtualDisks(namespace string) VirtualDiskNamespaceLister
	VirtualDiskListerExpansion
}

// virtualDiskLister implements the VirtualDiskLister interface.
type virtualDiskLister struct {
	listers.ResourceIndexer[*corev1alpha2.VirtualDisk]
}

// NewVirtualDiskLister returns a new VirtualDiskLister.
func NewVirtualDiskLister(indexer cache.Indexer) VirtualDiskLister {
	return &virtualDiskLister{listers.New[*corev1alpha2.VirtualDisk](indexer, corev1alpha2.Resource("virtualdisk"))}
}

// VirtualDisks returns an object that can list and get VirtualDisks.
func (s *virtualDiskLister) VirtualDisks(namespace string) VirtualDiskNamespaceLister {
	return virtualDiskNamespaceLister{listers.NewNamespaced[*corev1alpha2.VirtualDisk](s.ResourceIndexer, namespace)}
}

// VirtualDiskNamespaceLister helps list and get VirtualDisks.
// All objects returned here must be treated as read-only.
type VirtualDiskNamespaceLister interface {
	// List lists all VirtualDisks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*corev1alpha2.VirtualDisk, err error)
	// Get retrieves the VirtualDisk from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*corev1alpha2.VirtualDisk, error)
	VirtualDiskNamespaceListerExpansion
}

// virtualDiskNamespaceLister implements the VirtualDiskNamespaceLister
// interface.
type virtualDiskNamespaceLister struct {
	listers.ResourceIndexer[*corev1alpha2.VirtualDisk]
}
