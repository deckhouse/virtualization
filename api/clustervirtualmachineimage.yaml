apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clustervirtualmachineimages.virtualization.deckhouse.io
  labels:
    heritage: deckhouse
    module: virtualization
spec:
  group: virtualization.deckhouse.io
  scope: Cluster
  names:
    plural: clustervirtualmachineimages
    singular: clustervirtualmachineimage
    kind: ClusterVirtualMachineImage
  preserveUnknownFields: false
  versions:
    - name: v2alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          description: |
            Describes a virtual machine disk image which could be used as data source for new VirtualMachineDisks or could be mounted to VirtualMachines as is.
          required:
            - spec
          properties:
            spec:
              type: object
              required:
                - dataSource
              properties:
                dataSource:
                  type: object
                  required:
                    - type
                  properties:
                    type:
                      type: string
                      enum:
                      - 'HTTP'
                      - 'ContainerImage'
                      - 'VirtualMachineImage'
                      - 'ClusterVirtualMachineImage'
                      - 'VirtualMachineDisk'
                      - 'VirtualMachineDiskSnapshot'
                      - 'PersistentVolumeClaim'
                      - 'Upload'
                      description: |
                        The type of an origin of the image. Options are:

                        * `HTTP` — use some external http url.
                        * `ContainerImage` — use an image, stored in container registry image.
                        * `VirtualMachineImage` — use another existing `VirtualMachineImage`.
                        * `ClusterVirtualMachineImage` — use another existing `ClusterVirtualMachineImage`.
                        * `VirtualMachineDisk` — use an existing `VirtualMachineDisk`.
                        * `PersistentVolumeClaim` — use an existing `PersistentVolumeClaim`.
                        * `Upload` — fill the image with data, uploaded by user via the special interface.
                    http:
                      type: object
                      required:
                      - url
                      properties:
                        url:
                          type: string
                          example: 'https://mirror.example.com/images/slackware-15.qcow.gz'
                          description: |
                            The http url with an image. Supported formats are:
                            * qcow2
                            * qcow2.gz
                            * img
                            * img.gz
                        caBundle:
                          type: string
                          description: The CA chain to verify the url.
                          example: |
                            -----BEGIN CERTIFICATE-----
                            MIIFaDC...
                            -----END CERTIFICATE-----
                        insecureSkipVerify:
                          type: boolean
                          default: false
                          description: |
                            If a CA chain isn't provided, this option can be used to turn off TLS certificate checks.
                            As noted, it is insecure and shouldn't be used in production environments.
                        checksum:
                          type: object
                          description: A checksum of the file, provided by the url, to verify if it was downloaded correctly or wasn't changed.
                          properties:
                            md5:
                              type: string
                              minLength: 32
                              maxLength: 32
                              example: f3b59bed9f91e32fac1210184fcff6f5
                            sha256:
                              type: string
                              minLength: 64
                              maxLength: 64
                              example: 78be890d71dde316c412da2ce8332ba47b9ce7a29d573801d2777e01aa20b9b5
                    containerImage:
                      type: object
                      required:
                      - image
                      description:
                      properties:
                        image:
                          type: string
                          description: The container registry address of an image.
                          example: 'registry.example.com/images/slackware:15'
                        imagePullSecret:
                          type: object
                          properties:
                            name:
                              type: string
                              description: A name of the secret containing registry credentials.
                            namespace:
                              type: string
                              description: A namespace where imagePullSecret is located.
                    virtualMachineImage:
                      type: object
                      required:
                        - name
                        - namespace
                      properties:
                        name:
                          type: string
                          description: A name of existing `VirtualMachineImage`.
                        namespace:
                          type: string
                          description: A namespace where `VirtualMachineImage` is located.
                    clusterVirtualMachineImage:
                      type: object
                      required:
                        - name
                      properties:
                        name:
                          type: string
                          description: A name of existing `ClusterVirtualMachineImage`.
                    virtualMachineDisk:
                      type: object
                      required:
                        - name
                        - namespace
                      properties:
                        name:
                          type: string
                          description: A name of existing `VirtualMachineDisk`.
                        namespace:
                          type: string
                          description: A namespace where `VirtualMachineDisk` is located.
                    virtualMachineDiskSnapshot:
                      type: object
                      required:
                        - name
                        - namespace
                      properties:
                        name:
                          type: string
                          description: A name of existing `VirtualMachineDiskSnapshot`.
                        namespace:
                          type: string
                          description: A namespace where `VirtualMachineDiskSnapshot` is located.
                    persistentVolumeClaim:
                      type: object
                      required:
                        - name
                        - namespace
                      properties:
                        name:
                          type: string
                          description: A name of existing `PersistentVolumeClaim`.
                        namespace:
                          type: string
                          description: A namespace where `PersistentVolumeClaim` is located.
                  oneOf:
                  - properties:
                      type:
                        enum: ['HTTP']
                      http: {}
                  - properties:
                      type:
                        enum: ['ContainerImage']
                      containerImage: {}
                  - properties:
                      type:
                        enum: ['VirtualMachineImage']
                      virtualMachineImage: {}
                  - properties:
                      type:
                        enum: ['ClusterVirtualMachineImage']
                      clusterVirtualMachineImage: {}
                  - properties:
                      type:
                        enum: ['VirtualMachineDisk']
                      virtualMachineDisk: {}
                  - properties:
                      type:
                        enum: ['VirtualMachineDiskSnapshot']
                      virtualMachineDiskSnapshot: {}
                  - properties:
                      type:
                        enum: ['PersistentVolumeClaim']
                      persistentVolumeClaim: {}
                  - properties:
                      type:
                        enum: ['Upload']
            status:
              type: object
              properties:
                importDuration:
                  type: string
                  example: 1m44s
                  description: |
                    The duration of the image import (from the moment of creation resource, to the moment of going to the Ready phase).
                downloadSpeed:
                  type: object
                  description: |
                    Image download speed from an external source. Appears only during the `Provisioning' phase.
                  properties:
                    avg:
                      type: string
                      example: 1 Mbps
                      description: Average download speed.
                    current:
                      type: string
                      example: 5 Mbps
                      description: Current download speed.
                size:
                  type: object
                  description: |
                    Discovered sizes of the image.
                  properties:
                    stored:
                      type: string
                      example: 199M
                      description: Image size in DVCR or in PVC in human-readable format.
                    unpacked:
                      type: string
                      example: 1G
                      description: Unpacked image size in human-readable format.
                cdrom:
                  type: boolean
                  description: |
                    Whether the image is a format that is supposed to be mounted as a cdrom, such as iso and so on.
                target:
                  type: object
                  properties:
                    registryURL:
                      type: string
                      example: dvcr.svc.<dvcr-namespace>/cvmi/<image-name>:latest
                      description: |
                        Created image in DVCR.
                phase:
                  type: string
                  enum: ['Pending', 'Provisioning', 'WaitForUserUpload', 'Ready', 'Failed', 'NotReady', 'ImageLost']
                progress:
                  type: string
                  description: |
                    Progress of copying an image from source to DVCR. Appears only during the `Provisioning' phase.
                uploadCommand:
                  type: string
                  description: |
                    Command for uploading a image for the 'Upload' type.
                failureReason:
                  type: string
                  description: |
                    A brief description of the cause of the error.
                failureMessage:
                  type: string
                  description: |
                    Detailed description of the error. human-readable

      additionalPrinterColumns:
        - jsonPath: .status.progress
          name: Progress
          type: string
        - jsonPath: .status.downloadSpeed.avg
          name: Avg speed
          type: string
        - jsonPath: .status.size.stored
          name: Size
          type: string
        - jsonPath: .status.size.unpacked
          name: Size unpacked
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
        - jsonPath: .status.target.registryURL
          name: Registry URL
          type: string
      subresources:
        status: {}
