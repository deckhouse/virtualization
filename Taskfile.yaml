# https://taskfile.dev

version: "3"

silent: true

includes:
  vm-route-forge:
    taskfile: ./images/vm-route-forge
    dir: ./images/vm-route-forge
  virtualization-controller:
    taskfile: ./images/virtualization-artifact
    dir: ./images/virtualization-artifact
  hooks:
    taskfile: ./hooks
    dir: ./hooks
  e2e:
    taskfile: ./tests/e2e
    dir: ./tests/e2e
  perf:
    taskfile: ./tests/performance
    dir: ./tests/performance

vars:
  deckhouse_lib_helm_ver: 1.7.0
  target: ""
  VALIDATION_FILES: "tools/validation/{main,messages,diff,no_cyrillic,doc_changes,copyright}.go"

tasks:
  check-werf:
    cmds:
      - which werf >/dev/null || (echo "werf not found."; exit 1)
    silent: true

  check-yq:
    cmds:
      - which yq >/dev/null || (echo "yq not found."; exit 1)
    silent: true

  check-jq:
    cmds:
      - which jq >/dev/null || (echo "jq not found."; exit 1)
    silent: true

  check-helm:
    cmds:
      - which helm >/dev/null || (echo "helm not found."; exit 1)
    silent: true

  helm-update-subcharts:
    deps:
      - check-helm
    cmds:
      - helm repo add deckhouse https://deckhouse.github.io/lib-helm
      - helm repo update deckhouse
      - helm dep update

  helm-bump-helm-lib:
    deps:
      - check-yq
    cmds:
      - yq -i '.dependencies[] |= select(.name == "deckhouse_lib_helm").version = "{{ .deckhouse_lib_helm_ver }}"' Chart.yaml
      - task: helm-update-subcharts

  build:
    deps:
      - check-werf
    cmds:
      - werf build {{ .target }}

  dev:format:yaml:
    desc: "Format non-templated YAML files, e.g. CRDs"
    cmds:
      - |
        docker run --rm \
          -v ./:/tmp/virt ghcr.io/deckhouse/virtualization/prettier:3.2.5 \
          sh -c "cd /tmp/virt ; prettier -w \"**/*.yaml\" \"**/*.yml\""

  dev:addlicense:
    desc: |-
      Add Flant CE license to files sh,go,py. Default directory is root of project, custom directory path can be passed like: "task dev:addlicense -- <somedir>"
    cmds:
      - |
        {{if .CLI_ARGS}}
          go run tools/addlicense/{main,variables,msg,utils}.go -directory {{ .CLI_ARGS }}
        {{else}}
          go run tools/addlicense/{main,variables,msg,utils}.go -directory ./
        {{end}}

  lint:
    cmds:
      - task: lint:doc-ru
      - task: lint:prettier:yaml
      - task: virtualization-controller:dvcr:_ensure:golangci-lint
      - task: virtualization-controller:dvcr:lint
      - task: virtualization-controller:dvcr:lint:go
      - task: virtualization-controller:lint
      - task: virtualization-controller:lint:go

  lint:doc-ru:
    desc: "Check the correspondence between description fields in the original crd and the Russian language version"
    cmds:
      - |
        docker run \
          --rm -it -v "$PWD:/src" docker.io/fl64/d8-doc-ru-linter:v0.0.1-dev0 \
          sh -c \
            'for crd in /src/crds/*.yaml; do [[ "$(basename "$crd")" =~ ^doc-ru ]] || /d8-doc-ru-linter -s "$crd" -d "/src/crds/doc-ru-$(basename "$crd")" -n /dev/null; done'

  lint:prettier:yaml:
    desc: "Check if yaml files are prettier-formatted."
    cmds:
      - |
        docker run --rm \
          -v ./:/tmp/virt ghcr.io/deckhouse/virtualization/prettier:3.2.5 \
          sh -c "cd /tmp/virt ; prettier -c \"**/*.yaml\" \"**/*.yml\""

  validation:no-cyrillic:
    desc: "No cyrillic"
    cmds:
      - go run {{ .VALIDATION_FILES }} --type no-cyrillic

  validation:doc-changes:
    desc: "Doc-changes"
    cmds:
      - go run {{ .VALIDATION_FILES }} --type doc-changes

  validation:copyright:
    desc: "Check copyright"
    cmds:
      - go run {{ .VALIDATION_FILES }} --type copyright
