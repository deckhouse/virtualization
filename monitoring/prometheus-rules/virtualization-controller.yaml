- name: kubernetes.virtualization.controller_state
  rules:
    - alert: D8VirtualizationControllerTargetDown
      expr: max by (job) (up{job="scrapeconfig/d8-monitoring/virtualization-controller"}) == 0
      for: 1m
      labels:
        severity_level: "6"
        tier: cluster
      annotations:
        plk_markup_format: "markdown"
        plk_protocol_version: "1"
        plk_create_group_if_not_exists__d8_virtualization_health: "D8VirtualizationHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_grouped_by__d8_virtualization_health: "D8VirtualizationHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_ignore_labels: "job"
        summary: Prometheus cannot scrape the virtualization-controller metrics.
        description: |
          The recommended course of action:
          1. Check the Pod status: `kubectl -n d8-virtualization get pod -l app=virtualization-controller`
          2. Or check the Pod logs: `kubectl -n d8-virtualization logs deploy/virtualization-controller`

    - alert: D8VirtualizationControllerTargetAbsent
      expr: absent(up{job="scrapeconfig/d8-monitoring/virtualization-controller"}) == 1
      labels:
        severity_level: "6"
        tier: cluster
      for: 15m
      annotations:
        plk_protocol_version: "1"
        plk_markup_format: "markdown"
        plk_ignore_labels: "job"
        plk_create_group_if_not_exists__d8_virtualization_health: "D8VirtualizationHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_grouped_by__d8_virtualization_health: "D8VirtualizationHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        summary: There is no `virtualization-controller` target in Prometheus.
        description: |
          The recommended course of action:
          1. Check the Pod status: `kubectl -n d8-virtualization get pod -l app=virtualization-controller`
          2. Or check the Pod logs: `kubectl -n d8-virtualization logs deploy/virtualization-controller`

    - alert: D8VirtualizationControllerPodIsNotReady
      expr: |
        (kube_pod_status_ready{condition="true", namespace="d8-virtualization", pod=~"virtualization-controller-.*"} == 0)
        and on (namespace,pod)
        (kube_pod_status_phase{namespace="d8-virtualization", phase=~"Running|Succeeded", pod=~"virtualization-controller-.*"} == 1)
      labels:
        severity_level: "6"
        tier: cluster
      for: 10m
      annotations:
        plk_protocol_version: "1"
        plk_markup_format: "markdown"
        plk_labels_as_annotations: "pod"
        plk_create_group_if_not_exists__d8_virtualization_health: "D8VirtualizationHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_grouped_by__d8_virtualization_health: "D8VirtualizationHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        summary: The virtualization-controller Pod is NOT Ready.
        description: |
          The recommended course of action:
          1. Retrieve details of the Deployment: `kubectl -n d8-virtualization describe deploy virtualization-controller`
          2. View the status of the Pod and try to figure out why it is not running: `kubectl -n d8-virtualization describe pod -l app=virtualization-controller`

    - alert: D8VirtualizationControllerPodIsNotRunning
      expr: absent(kube_pod_status_phase{namespace="d8-virtualization",phase="Running",pod=~"virtualization-controller-.*"})
      labels:
        severity_level: "6"
        tier: cluster
      for: 10m
      annotations:
        plk_protocol_version: "1"
        plk_markup_format: "markdown"
        plk_create_group_if_not_exists__d8_virtualization_health: "D8VirtualizationHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        plk_grouped_by__d8_virtualization_health: "D8VirtualizationHealth,tier=~tier,prometheus=deckhouse,kubernetes=~kubernetes"
        summary: The virtualization-controller Pod is NOT Running.
        description: |
          The recommended course of action:
          1. Retrieve details of the Deployment: `kubectl -n d8-virtualization describe deploy virtualization-controller`
          2. View the status of the Pod and try to figure out why it is not running: `kubectl -n d8-virtualization describe pod -l app=virtualization-controller`
