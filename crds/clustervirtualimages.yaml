---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  labels:
    backup.deckhouse.io/cluster-config: "true"
    heritage: deckhouse
    module: virtualization
  name: clustervirtualimages.virtualization.deckhouse.io
spec:
  group: virtualization.deckhouse.io
  names:
    categories:
      - virtualization
    kind: ClusterVirtualImage
    listKind: ClusterVirtualImageList
    plural: clustervirtualimages
    shortNames:
      - cvi
      - cvis
    singular: clustervirtualimage
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.phase
          name: Phase
          type: string
        - jsonPath: .status.cdrom
          name: CDROM
          type: boolean
        - jsonPath: .status.progress
          name: Progress
          type: string
        - jsonPath: .status.size.stored
          name: StoredSize
          priority: 1
          type: string
        - jsonPath: .status.size.unpacked
          name: UnpackedSize
          priority: 1
          type: string
        - jsonPath: .status.target.registryURL
          name: Registry URL
          priority: 1
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: |-
            Describes a virtual disk image that can be used as a data source for new VirtualDisks or an installation image (iso) to be mounted in VirtualMachines directly. This resource type is available for all namespaces in the cluster.

            > This resource cannot be modified once it has been created.

            With this resource in the cluster, a container image is created and stored in a dedicated Deckhouse Virtualization Container Registry (DVCR).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                dataSource:
                  description: Origin of the image.
                  properties:
                    containerImage:
                      description:
                        Use an image stored in external container registry.
                        Only registries with enabled TLS protocol are supported. To
                        provide a custom Certificate Authority (CA) chain, use the `caBundle`
                        field.
                      properties:
                        caBundle:
                          description:
                            CA chain in Base64 format to verify the container
                            registry.
                          example: YWFhCg==
                          format: byte
                          type: string
                        image:
                          description: Path to the image in the container registry.
                          example: registry.example.com/images/slackware:15
                          pattern: ^(?P<name>(?:(?P<domain>(?:(?:localhost|[\w-]+(?:\.[\w-]+)+)(?::\d+)?)|[\w]+:\d+)/)?(?P<image>[a-z0-9_.-]+(?:/[a-z0-9_.-]+)*))(?::(?P<tag>[\w][\w.-]{0,127}))?(?:@(?P<digest>[A-Za-z][A-Za-z0-9]*(?:[+.-_][A-Za-z][A-Za-z0-9]*)*:[0-9a-fA-F]{32,}))?$
                          type: string
                        imagePullSecret:
                          properties:
                            name:
                              description:
                                Name of the secret keeping container registry
                                credentials.
                              type: string
                            namespace:
                              description: Namespace where `imagePullSecret` is located.
                              type: string
                          type: object
                      required:
                        - image
                      type: object
                    http:
                      description: |-
                        Fill the image with data from an external URL. The following schemas are supported:

                        * HTTP
                        * HTTPS

                        For HTTPS schema, there is an option to skip the TLS verification.
                      properties:
                        caBundle:
                          description: CA chain in Base64 format to verify the URL.
                          example: YWFhCg==
                          format: byte
                          type: string
                        checksum:
                          description:
                            Checksum to verify integrity and consistency
                            of the downloaded file. The file must match all specified
                            checksums.
                          properties:
                            md5:
                              example: f3b59bed9f91e32fac1210184fcff6f5
                              maxLength: 32
                              minLength: 32
                              pattern: ^[0-9a-fA-F]{32}$
                              type: string
                            sha256:
                              example: 78be890d71dde316c412da2ce8332ba47b9ce7a29d573801d2777e01aa20b9b5
                              maxLength: 64
                              minLength: 64
                              pattern: ^[0-9a-fA-F]{64}$
                              type: string
                          type: object
                        url:
                          description: |-
                            URL of the file for creating an image. The following file formats are supported:
                            * qcow2
                            * vmdk
                            * vdi
                            * iso
                            * raw
                            The file can be compressed into an archive in one of the following formats:
                            * gz
                            * xz
                          example: https://mirror.example.com/images/slackware-15.qcow.gz
                          pattern: ^http[s]?:\/\/(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+$
                          type: string
                      required:
                        - url
                      type: object
                    objectRef:
                      description:
                        Use an existing VirtualImage, ClusterVirtualImage,
                        VirtualDisk or VirtualDiskSnapshot resource to create an image.
                      properties:
                        kind:
                          description:
                            Kind of the existing VirtualImage, ClusterVirtualImage,
                            VirtualDisk or VirtualDiskSnapshot resource.
                          enum:
                            - ClusterVirtualImage
                            - VirtualImage
                            - VirtualDisk
                            - VirtualDiskSnapshot
                          type: string
                        name:
                          description:
                            Name of the existing VirtualImage, ClusterVirtualImage,
                            VirtualDisk or VirtualDiskSnapshot resource.
                          type: string
                        namespace:
                          description:
                            Namespace where the VirtualImage, VirtualDisk
                            or VirtualDiskSnapshot resource is located.
                          type: string
                      required:
                        - kind
                        - name
                      type: object
                      x-kubernetes-validations:
                        - message:
                            The namespace is required for VirtualDisk, VirtualImage
                            and VirtualDiskSnapshot
                          rule:
                            "self.kind == 'VirtualImage' || self.kind == 'VirtualDisk'
                            || self.kind == 'VirtualDiskSnapshot' ? has(self.__namespace__)
                            && size(self.__namespace__) > 0 : true"
                        - message: The namespace must be no longer than 63 characters.
                          rule:
                            "self.kind == 'VirtualImage'  || self.kind == 'VirtualDisk'
                            || self.kind == 'VirtualDiskSnapshot' ? has(self.__namespace__)
                            && size(self.__namespace__) < 64 : true"
                    type:
                      description: |-
                        The following image sources are available for creating an image:

                        * `HTTP`: From a file published on an HTTP/HTTPS service at a given URL.
                        * `ContainerImage`: From another image stored in a container registry.
                        * `ObjectRef`: From an existing resource.
                        * `Upload`: From data uploaded by the user via a special interface.
                      enum:
                        - HTTP
                        - ContainerImage
                        - ObjectRef
                        - Upload
                      type: string
                  required:
                    - type
                  type: object
                  x-kubernetes-validations:
                    - message: HTTP requires http and cannot have ContainerImage or ObjectRef.
                      rule:
                        "self.type == 'HTTP' ? has(self.http) && !has(self.containerImage)
                        && !has(self.objectRef) : true"
                    - message:
                        ContainerImage requires containerImage and cannot have
                        HTTP or ObjectRef.
                      rule:
                        "self.type == 'ContainerImage' ? has(self.containerImage)
                        && !has(self.http) && !has(self.objectRef) : true"
                    - message: ObjectRef requires objectRef and cannot have HTTP or ContainerImage.
                      rule:
                        "self.type == 'ObjectRef' ? has(self.objectRef) && !has(self.http)
                        && !has(self.containerImage) : true"
              required:
                - dataSource
              type: object
            status:
              properties:
                cdrom:
                  description:
                    Defines whether the image is in a format that needs to
                    be mounted as a CD-ROM drive, such as iso and so on.
                  type: boolean
                conditions:
                  description:
                    The latest available observations of an object's current
                    state.
                  items:
                    description:
                      Condition contains details for one aspect of the current
                      state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                downloadSpeed:
                  description:
                    Image download speed from an external source. Appears
                    only during the `Provisioning` phase.
                  properties:
                    avg:
                      description: Average download speed.
                      example: 1 Mbps
                      type: string
                    avgBytes:
                      description: Average download speed in bytes per second.
                      example: 1012345
                      type: string
                    current:
                      description: Current download speed.
                      example: 5 Mbps
                      type: string
                    currentBytes:
                      description: Current download speed in bytes per second.
                      example: 5123456
                      type: string
                  type: object
                format:
                  description: Discovered image format.
                  type: string
                imageUploadURLs:
                  properties:
                    external:
                      description:
                        Command to upload the image using `Ingress` from
                        outside the cluster.
                      type: string
                    inCluster:
                      description:
                        Command to upload the image using `Service` within
                        the cluster.
                      type: string
                  type: object
                observedGeneration:
                  description: Resource generation last processed by the controller.
                  format: int64
                  type: integer
                phase:
                  description: |-
                    Current status of the ClusterVirtualImage resource:
                    * `Pending`: The resource has been created and is on a waiting queue.
                    * `Provisioning`: The resource is being created: copying, downloading, or building of the image is in progress.
                    * `WaitForUserUpload`: Waiting for the user to upload the image. The endpoint to upload the image is specified in `.status.uploadCommand`.
                    * `Ready`: The resource has been created and is ready to use.
                    * `Failed`: There was an error when creating the resource.
                    * `Terminating`: The resource is being deleted.
                  enum:
                    - Pending
                    - Provisioning
                    - WaitForUserUpload
                    - Ready
                    - Failed
                    - Terminating
                  type: string
                progress:
                  description:
                    Progress of copying an image from the source to DVCR.
                    Appears only during the `Provisioning' phase.
                  type: string
                size:
                  description: Discovered image size data.
                  properties:
                    stored:
                      description: Image size in human-readable format.
                      example: 199M
                      type: string
                    storedBytes:
                      description: Image size in bytes.
                      example: 199001234
                      type: string
                    unpacked:
                      description: Unpacked image size in human-readable format.
                      example: 1G
                      type: string
                    unpackedBytes:
                      description: Unpacked image size in bytes.
                      example: 1000000234
                      type: string
                  type: object
                sourceUID:
                  description:
                    UID of the source (VirtualImage, ClusterVirtualImage,
                    VirtualDisk or VirtualDiskSnapshot) used when creating the cluster
                    virtual image.
                  type: string
                target:
                  properties:
                    registryURL:
                      description: Created image in DVCR.
                      example: dvcr.<dvcr-namespace>.svc/cvi/<image-name>:latest
                      type: string
                  type: object
                uploadCommand:
                  description: Deprecated. Use `imageUploadURLs` instead.
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
