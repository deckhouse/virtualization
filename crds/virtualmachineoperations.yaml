---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    heritage: deckhouse
    module: virtualization
  name: virtualmachineoperations.virtualization.deckhouse.io
spec:
  group: virtualization.deckhouse.io
  names:
    categories:
      - virtualization
      - all
    kind: VirtualMachineOperation
    listKind: VirtualMachineOperationList
    plural: virtualmachineoperations
    shortNames:
      - vmop
      - vmops
    singular: virtualmachineoperation
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: VirtualMachineOperation phase.
          jsonPath: .status.phase
          name: Phase
          type: string
        - description: VirtualMachineOperation type.
          jsonPath: .spec.type
          name: Type
          type: string
        - description: VirtualMachine name.
          jsonPath: .spec.virtualMachineName
          name: VirtualMachine
          type: string
        - description: Time of creation resource.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description:
            VirtualMachineOperation resource provides the ability to declaratively
            manage state changes of virtual machines.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                force:
                  description:
                    Force the execution of the operation. Applies only for
                    Restart and Stop. In this case, the action on the virtual machine
                    is performed immediately.
                  type: boolean
                type:
                  description: |-
                    Type is operation over the virtualmachine:
                    * Start - start the virtualmachine.
                    * Stop - stop the virtualmachine.
                    * Restart - restart the virtualmachine.
                    * Migrate - migrate the virtualmachine.
                  enum:
                    - Restart
                    - Start
                    - Stop
                    - Migrate
                  type: string
                virtualMachineName:
                  description:
                    The name of the virtual machine for which the operation
                    is performed.
                  type: string
              required:
                - type
                - virtualMachineName
              type: object
              x-kubernetes-validations:
                - message: The `Start` operation cannot be performed forcibly.
                  rule: "self.type == 'Start' ? !has(self.force) || !self.force : true"
                - message: The `Migrate` operation cannot be performed forcibly.
                  rule:
                    "self.type == 'Migrate' ? !has(self.force) || !self.force :
                    true"
            status:
              properties:
                conditions:
                  description:
                    The latest detailed observations of the VirtualMachineOperation
                    resource.
                  items:
                    description:
                      "Condition contains details for one aspect of the current
                      state of this API Resource.\n---\nThis struct is intended for
                      direct use as an array at the field path .status.conditions.  For
                      example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                      observations of a foo's current state.\n\t    // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                      +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                      \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                      \   // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          ---
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict is important.
                          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: " The generation last processed by the controller."
                  format: int64
                  type: integer
                phase:
                  description: |-
                    Represents the current phase of resource:
                    * Pending - the operation is queued for execution.
                    * InProgress - operation in progress.
                    * Completed - the operation was successful.
                    * Failed - the operation failed. Check conditions and events for more information.
                    * Terminating - the operation is deleted.
                  enum:
                    - Pending
                    - InProgress
                    - Completed
                    - Failed
                    - Terminating
                  type: string
              required:
                - phase
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
