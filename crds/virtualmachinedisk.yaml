apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: virtualmachinedisks.virtualization.deckhouse.io
  labels:
    heritage: deckhouse
    module: virtualization
spec:
  group: virtualization.deckhouse.io
  scope: Namespaced
  names:
    categories:
      - all
      - virtualization
    plural: virtualmachinedisks
    singular: virtualmachinedisk
    kind: VirtualMachineDisk
    shortNames:
      - vmd
      - vmds
  preserveUnknownFields: false
  versions:
    - name: v1alpha2
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          description: |
            Describes a virtual machine disk that can be mounted in `VirtualMachines`. Once the resource is created, only the disk size `.spec.persistentVolumeClaim.size` can be changed, all other fields are immutable.

            A PVC is created under the hood of the resource, into which the data from the source is filled.
          required:
            - spec
          properties:
            spec:
              type: object
              required:
                - persistentVolumeClaim
              properties:
                persistentVolumeClaim:
                  type: object
                  description: |
                    Settings for creating PVCs to store the disk.
                  properties:
                    size:
                      type: string
                      description: |
                        Desired size for PVC to store the disk. If the disk is created from an image, the size must be at least as large as the original unpacked image.
                      pattern: "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
                    storageClassName:
                      type: string
                      description: |
                        The name of the StorageClass required by the claim. More info — https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                dataSource:
                  type: object
                  description: |
                    An origin of the disk. If empty or absent, empty disk will be created.
                  required:
                    - type
                  properties:
                    type:
                      type: string
                      enum:
                        - "HTTP"
                        - "ContainerImage"
                        - "VirtualMachineImage"
                        - "ClusterVirtualMachineImage"
                        - "Upload"
                      description: |
                        The type of an origin of the disk. Options are:

                        * `HTTP` — create an image from a file published on http/https service at a given url
                        * `ContainerImage` — create the image from image stored in container registry.
                        * `VirtualMachineImage` — fill the disk from another existing `VirtualMachineImage`.
                        * `ClusterVirtualMachineImage` — fill the disk from another existing `ClusterVirtualMachineImage`.
                        * `Upload` — fill the disk with data, uploaded by user via the special interface.
                    http:
                      type: object
                      description: |
                        Fill the image with data from some external url. Supported schemas are:

                        * http
                        * https

                        For https schema there is an option to skip TLS verification.
                      required:
                        - url
                      properties:
                        url:
                          type: string
                          example: "https://mirror.example.com/images/slackware-15.qcow.gz"
                          # https://regex101.com/r/2zx8as/1
                          pattern: ^http[s]?:\/\/(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+$
                          description: |
                            The http url with an image. The following formats are supported:
                            * qcow2
                            * vmdk
                            * vdi
                            * iso
                            * raw
                            these formats can also be compressed with the following formats:
                            * gz
                            * xz
                        caBundle:
                          type: string
                          format: byte
                          description: |
                            The CA chain in base64 format to verify the url.
                          example: |
                            YWFhCg==
                        insecureSkipVerify:
                          type: boolean
                          default: false
                          description: |
                            If a CA chain isn't provided, this option can be used to turn off TLS certificate checks.
                            As noted, it is insecure and shouldn't be used in production environments.
                        checksum:
                          type: object
                          description: |
                            A checksum of the file, provided by the url, to verify if it was downloaded correctly or wasn't changed. The file should match all specified checksums.
                          properties:
                            md5:
                              description: ""
                              type: string
                              pattern: ^[0-9a-fA-F]{32}$
                              minLength: 32
                              maxLength: 32
                              example: f3b59bed9f91e32fac1210184fcff6f5
                            sha256:
                              description: ""
                              type: string
                              pattern: ^[0-9a-fA-F]{64}$
                              minLength: 64
                              maxLength: 64
                              example: 78be890d71dde316c412da2ce8332ba47b9ce7a29d573801d2777e01aa20b9b5
                    containerImage:
                      type: object
                      required:
                        - image
                      description: |
                        Use an image stored in external container registry. Only TLS enabled registries are supported. Use caBundle field to provide custom CA chain if needed.
                      properties:
                        image:
                          type: string
                          example: "registry.example.com/images/slackware:15"
                          # https://regex101.com/r/NXfP8Y/1
                          pattern: ^(?P<name>(?:(?P<domain>(?:(?:localhost|[\w-]+(?:\.[\w-]+)+)(?::\d+)?)|[\w]+:\d+)/)?(?P<image>[a-z0-9_.-]+(?:/[a-z0-9_.-]+)*))(?::(?P<tag>[\w][\w.-]{0,127}))?(?:@(?P<digest>[A-Za-z][A-Za-z0-9]*(?:[+.-_][A-Za-z][A-Za-z0-9]*)*:[0-9a-fA-F]{32,}))?$
                          description: |
                            The container registry address of an image.
                        imagePullSecret:
                          type: object
                          properties:
                            name:
                              type: string
                              description: |
                                A name of the secret containing registry credentials.
                        caBundle:
                          type: string
                          format: byte
                          description: |
                            The CA chain in base64 format to verify the container registry.
                          example: |
                            YWFhCg==
                    virtualMachineImage:
                      type: object
                      description: |
                        Use another existing `VirtualMachineImage`.
                      required:
                        - name
                      properties:
                        name:
                          type: string
                          description: |
                            A name of existing `VirtualMachineImage`.
                    clusterVirtualMachineImage:
                      type: object
                      description: |
                        Use another existing `ClusterVirtualMachineImage`.
                      required:
                        - name
                      properties:
                        name:
                          type: string
                          description: |
                            A name of existing `ClusterVirtualMachineImage`.
                  oneOf:
                    - properties:
                        type:
                          enum: ["HTTP"]
                        http: {}
                      required: ["http"]
                    - properties:
                        type:
                          enum: ["ContainerImage"]
                        containerImage: {}
                      required: ["containerImage"]
                    - properties:
                        type:
                          enum: ["VirtualMachineImage"]
                        virtualMachineImage: {}
                      required: ["virtualMachineImage"]
                    - properties:
                        type:
                          enum: ["ClusterVirtualMachineImage"]
                        clusterVirtualMachineImage: {}
                      required: ["clusterVirtualMachineImage"]
                    - properties:
                        type:
                          enum: ["Upload"]
            status:
              type: object
              properties:
                importDuration:
                  type: string
                  example: 1m44s
                  description: |
                    The duration of the image import (from the moment of creation resource, to the moment of going to the Ready phase).
                downloadSpeed:
                  type: object
                  description: |
                    Image download speed from an external source. Appears only during the `Provisioning' phase.
                  properties:
                    avg:
                      type: string
                      example: 1 Mbps
                      description: |
                        Average download speed.
                    current:
                      type: string
                      example: 5 Mbps
                      description: Current download speed.
                    avgBytes:
                      type: string
                      example: 1012345
                      description: Average download speed in bytes per second.
                    currentBytes:
                      type: string
                      example: 5123456
                      description: Current download speed in bytes per second.
                capacity:
                  type: string
                  example: 50G
                  description: |
                    Requested capacity of the PVC in human-readable format.
                target:
                  type: object
                  properties:
                    persistentVolumeClaimName:
                      type: string
                      description: |
                        Created PersistentVolumeClaim name for Kubernetes storage.
                phase:
                  type: string
                  description: |
                    Current status of `VirtualMachineDisk` resource:
                    * Pending - The resource has been created and is on a waiting queue.
                    * Provisioning - The process of resource creation (copying/downloading/filling the PVC with data/extending PVC) is in progress.
                    * WaitForUserUpload - Waiting for the user to upload the image. The endpoint to upload the image is specified in `.status.uploadCommand`.
                    * Ready - The resource is created and ready to use.
                    * Failed - There was a problem when creating a resource, details can be seen in `.status.failureReason` and `.status.failureMessage`.
                    * PVCLost - The child PVC of the resource is missing. The resource cannot be used.
                  enum:
                    [
                      "Pending",
                      "Provisioning",
                      "WaitForUserUpload",
                      "Ready",
                      "Failed",
                      "PVCLost",
                      "Unknown",
                    ]
                progress:
                  type: string
                  description: |
                    Progress of copying an image from source to PVC. Appears only during the `Provisioning' phase.
                uploadCommand:
                  type: string
                  description: |
                    Command for uploading a image for the 'Upload' type.
                failureReason:
                  type: string
                  description: |
                    A brief description of the cause of the error.
                failureMessage:
                  type: string
                  description: |
                    Detailed description of the error.
                usedInVMs:
                  type: array
                  description: |
                    A list of virtual machines that use the disk
                  example: [{ name: "VM100" }, { name: "VM200" }]
                  items:
                    type: object
                    properties:
                      name:
                        type: string
      additionalPrinterColumns:
        - name: Phase
          type: string
          jsonPath: .status.phase
        - name: Capacity
          type: string
          jsonPath: .status.capacity
        - name: Progress
          type: string
          jsonPath: .status.progress
          priority: 1
        - name: Target PVC
          jsonPath: .status.target.persistentVolumeClaimName
          type: string
          priority: 1
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
      subresources:
        status: {}
