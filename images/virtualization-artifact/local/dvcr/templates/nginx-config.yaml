---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-nginx-config
data:
  nginx.conf: |
    worker_processes 1;

    error_log  /dev/stderr warn;
    pid        /tmp/nginx.pid;

    events {
      worker_connections  1000;
    }

    http {
      include       mime.types;
      default_type  application/octet-stream;

      log_format json_combined escape=json
        '{'
          '"time_local":"$time_local",'
          '"remote_addr":"$remote_addr",'
          '"remote_user":"$remote_user",'
          '"request":"$request",'
          '"status": "$status",'
          '"body_bytes_sent":"$body_bytes_sent",'
          '"request_time":"$request_time",'
          '"http_referrer":"$http_referer",'
          '"http_user_agent":"$http_user_agent"'
        '}';

      access_log /dev/stdout json_combined;

      sendfile on;
      keepalive_timeout  65;

      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      server {
        listen 443 default_server ssl;
        server_name _ default;

        set_real_ip_from 0.0.0.0/0;

        ssl_certificate /etc/nginx/certs/tls.crt;
        ssl_certificate_key /etc/nginx/certs/tls.key;

        location /healthz {
          satisfy any;
          allow all;
          access_log off;
          return 200;
        }

        location / {

          satisfy any;

          auth_basic "Authentication Required!";
          auth_basic_user_file /etc/nginx/htpasswd/htpasswd;

          deny  all;

          # Remove limits to speedup downloading big files.
          proxy_buffering      off;
          client_max_body_size 0;

          proxy_redirect    off;
          proxy_set_header  Host              $host;
          proxy_set_header  X-Real-IP         $remote_addr;
          proxy_set_header  X-Original-URI    $request_uri;
          proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_http_version 1.1;
          proxy_pass_request_headers on;

          # Pass all requests to registry2 container.
          proxy_pass http://127.0.0.1:5000;
        }
      }
    }
