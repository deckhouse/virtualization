---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
git:
- add: {{ .ModuleDir }}/images/{{ .ImageName }}
  to: /src
  stageDependencies:
    install:
    - go.mod
    - go.sum
    - '**/*.go'
---
image: {{ .ModuleNamePrefix }}go-hooks-artifact
final: false
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/golang-bookworm-1.24" "builder/alt-go-svace" }}
import:
  - image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
    add: /src
    to: /app/images/hooks
    before: install
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
  - export GOPROXY=$(cat /run/secrets/GOPROXY)
  - cd /app/images/hooks
  - go mod download
  setup:
  - cd /app/images/hooks
  - |
    export GOOS=linux
    export GOARCH=amd64
    export CGO_ENABLED=0
    export TAGS="{{ printf "-tags %s" .MODULE_EDITION }}"
    {{- $_ := set $ "ProjectName" (list $.ImageName "hooks" | join "/") }}
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" $TAGS -a -o /go-hooks/virtualization-module-hooks ./cmd/virtualization-module-hooks`) | nindent 6 }}
