---
image: {{ $.ImageName }}
fromImage: distroless
import:
- image: {{ $.ImageName }}-bins
  add: /relocate
  to: /
  before: setup
imageSpec:
  config:
    entrypoint: ["/usr/bin/cdi-controller", "-alsologtostderr"]
    user: 64535
---
{{- define "cdi-controller-deps" -}}
binaries:
  - /usr/bin/cdi-controller
  - /usr/sbin/blockdev
packages:
  - tar
{{- end -}}

{{ $cdiClonerDependencies := include "cdi-controller-deps" . | fromYaml }}

image: {{ $.ImageName }}-bins
final: false
fromImage: base-alt-p11-binaries
import:
- image: {{ $.ImageName }}-cbuilder
  add: /bins
  to: /relocate/usr/bin
  after: setup
- image: cdi-artifact
  add: /cdi-binaries
  to: /usr/bin
  includePaths:
  - cdi-controller
  before: setup
# Source https://github.com/kubevirt/containerized-data-importer/blob/v1.60.3/cmd/cdi-controller/BUILD.bazel
shell:
  install:
  - |
    apt-get update && apt-get install --yes \
      {{ $cdiClonerDependencies.packages | join " " }}
  - |
    apt-get clean
    rm --recursive --force /var/lib/apt/lists/ftp.altlinux.org* /var/cache/apt/*.bin
  setup:
  - /relocate_binaries.sh -i "{{ $cdiClonerDependencies.binaries | join " " }}" -o /relocate
# tmp folder need for ready file
# https://github.com/kubevirt/containerized-data-importer/blob/v1.60.3/pkg/operator/resources/namespaced/controller.go#L243
  - |
    mkdir -p /relocate/{tmp,var/run/certs/cdi-uploadserver-signer,var/run/certs/cdi-uploadserver-client-signer}
    chown -R 64535:64535 /relocate/

---
image: {{ $.ImageName }}-cbuilder
final: false
from: {{ .Images.BASE_DEBIAN_BOOKWORM_SLIM }}
git:
  - add: /images/{{ $.ImageName }}
    to: /
    stageDependencies:
      install:
        - '*.c'
shell:
  install:
  - |
    apt-get update && apt-get install --yes gcc musl-dev musl-tools
    apt-get clean
    
    echo "Building simple app that prints hello cdi"
    mkdir -p /bins
    musl-gcc -static -Os -o /bins/hello hello.c
    musl-gcc -static -Os -o /bins/printFile print_file_context.c
    strip /bins/hello
    strip /bins/printFile
