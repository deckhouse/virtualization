diff --git a/pkg/handler-launcher-com/cmd/v1/cmd.pb.go b/pkg/handler-launcher-com/cmd/v1/cmd.pb.go
index 6f41c22374..24fb6984ee 100644
--- a/pkg/handler-launcher-com/cmd/v1/cmd.pb.go
+++ b/pkg/handler-launcher-com/cmd/v1/cmd.pb.go
@@ -42,6 +42,7 @@ It has these top-level messages:
 	LaunchMeasurementResponse
 	InjectLaunchSecretRequest
 	VMIChecksumResponse
+	MigrationProxyRequest
 */
 package v1
 
@@ -65,6 +66,27 @@ var _ = math.Inf
 // proto package needs to be updated.
 const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package
 
+type MigrationProxyAction int32
+
+const (
+	MigrationProxyAction_START MigrationProxyAction = 0
+	MigrationProxyAction_STOP  MigrationProxyAction = 1
+)
+
+var MigrationProxyAction_name = map[int32]string{
+	0: "START",
+	1: "STOP",
+}
+var MigrationProxyAction_value = map[string]int32{
+	"START": 0,
+	"STOP":  1,
+}
+
+func (x MigrationProxyAction) String() string {
+	return proto.EnumName(MigrationProxyAction_name, int32(x))
+}
+func (MigrationProxyAction) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }
+
 type QemuVersionResponse struct {
 	Response *Response `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
 	Version  string    `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
@@ -954,6 +976,22 @@ func (m *VMIChecksumResponse) GetChecksum() string {
 	return ""
 }
 
+type MigrationProxyRequest struct {
+	Action MigrationProxyAction `protobuf:"varint,1,opt,name=action,enum=kubevirt.cmd.v1.MigrationProxyAction" json:"action,omitempty"`
+}
+
+func (m *MigrationProxyRequest) Reset()                    { *m = MigrationProxyRequest{} }
+func (m *MigrationProxyRequest) String() string            { return proto.CompactTextString(m) }
+func (*MigrationProxyRequest) ProtoMessage()               {}
+func (*MigrationProxyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }
+
+func (m *MigrationProxyRequest) GetAction() MigrationProxyAction {
+	if m != nil {
+		return m.Action
+	}
+	return MigrationProxyAction_START
+}
+
 func init() {
 	proto.RegisterType((*QemuVersionResponse)(nil), "kubevirt.cmd.v1.QemuVersionResponse")
 	proto.RegisterType((*VMI)(nil), "kubevirt.cmd.v1.VMI")
@@ -987,6 +1025,8 @@ func init() {
 	proto.RegisterType((*LaunchMeasurementResponse)(nil), "kubevirt.cmd.v1.LaunchMeasurementResponse")
 	proto.RegisterType((*InjectLaunchSecretRequest)(nil), "kubevirt.cmd.v1.InjectLaunchSecretRequest")
 	proto.RegisterType((*VMIChecksumResponse)(nil), "kubevirt.cmd.v1.VMIChecksumResponse")
+	proto.RegisterType((*MigrationProxyRequest)(nil), "kubevirt.cmd.v1.MigrationProxyRequest")
+	proto.RegisterEnum("kubevirt.cmd.v1.MigrationProxyAction", MigrationProxyAction_name, MigrationProxyAction_value)
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
@@ -1031,6 +1071,7 @@ type CmdClient interface {
 	GetLaunchMeasurement(ctx context.Context, in *VMIRequest, opts ...grpc.CallOption) (*LaunchMeasurementResponse, error)
 	InjectLaunchSecret(ctx context.Context, in *InjectLaunchSecretRequest, opts ...grpc.CallOption) (*Response, error)
 	GetAppliedVMIChecksum(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*VMIChecksumResponse, error)
+	MigrationProxy(ctx context.Context, in *MigrationProxyRequest, opts ...grpc.CallOption) (*Response, error)
 }
 
 type cmdClient struct {
@@ -1320,6 +1361,15 @@ func (c *cmdClient) GetAppliedVMIChecksum(ctx context.Context, in *EmptyRequest,
 	return out, nil
 }
 
+func (c *cmdClient) MigrationProxy(ctx context.Context, in *MigrationProxyRequest, opts ...grpc.CallOption) (*Response, error) {
+	out := new(Response)
+	err := grpc.Invoke(ctx, "/kubevirt.cmd.v1.Cmd/MigrationProxy", in, out, c.cc, opts...)
+	if err != nil {
+		return nil, err
+	}
+	return out, nil
+}
+
 // Server API for Cmd service
 
 type CmdServer interface {
@@ -1354,6 +1404,7 @@ type CmdServer interface {
 	GetLaunchMeasurement(context.Context, *VMIRequest) (*LaunchMeasurementResponse, error)
 	InjectLaunchSecret(context.Context, *InjectLaunchSecretRequest) (*Response, error)
 	GetAppliedVMIChecksum(context.Context, *EmptyRequest) (*VMIChecksumResponse, error)
+	MigrationProxy(context.Context, *MigrationProxyRequest) (*Response, error)
 }
 
 func RegisterCmdServer(s *grpc.Server, srv CmdServer) {
@@ -1918,6 +1969,24 @@ func _Cmd_GetAppliedVMIChecksum_Handler(srv interface{}, ctx context.Context, de
 	return interceptor(ctx, in, info, handler)
 }
 
+func _Cmd_MigrationProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(MigrationProxyRequest)
+	if err := dec(in); err != nil {
+		return nil, err
+	}
+	if interceptor == nil {
+		return srv.(CmdServer).MigrationProxy(ctx, in)
+	}
+	info := &grpc.UnaryServerInfo{
+		Server:     srv,
+		FullMethod: "/kubevirt.cmd.v1.Cmd/MigrationProxy",
+	}
+	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
+		return srv.(CmdServer).MigrationProxy(ctx, req.(*MigrationProxyRequest))
+	}
+	return interceptor(ctx, in, info, handler)
+}
+
 var _Cmd_serviceDesc = grpc.ServiceDesc{
 	ServiceName: "kubevirt.cmd.v1.Cmd",
 	HandlerType: (*CmdServer)(nil),
@@ -2046,6 +2115,10 @@ var _Cmd_serviceDesc = grpc.ServiceDesc{
 			MethodName: "GetAppliedVMIChecksum",
 			Handler:    _Cmd_GetAppliedVMIChecksum_Handler,
 		},
+		{
+			MethodName: "MigrationProxy",
+			Handler:    _Cmd_MigrationProxy_Handler,
+		},
 	},
 	Streams:  []grpc.StreamDesc{},
 	Metadata: "pkg/handler-launcher-com/cmd/v1/cmd.proto",
@@ -2054,121 +2127,125 @@ var _Cmd_serviceDesc = grpc.ServiceDesc{
 func init() { proto.RegisterFile("pkg/handler-launcher-com/cmd/v1/cmd.proto", fileDescriptor0) }
 
 var fileDescriptor0 = []byte{
-	// 1843 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x59, 0x5f, 0x73, 0xdb, 0xc6,
-	0x11, 0x17, 0x45, 0x4a, 0x26, 0x57, 0x7f, 0x12, 0x9f, 0xfe, 0x04, 0x52, 0x6b, 0x5b, 0xc5, 0x74,
-	0x3c, 0x4a, 0x27, 0x91, 0x6a, 0xc7, 0xc9, 0x74, 0x3c, 0x9d, 0x8c, 0x2d, 0x8a, 0x52, 0x94, 0x98,
-	0x36, 0x03, 0x4a, 0xf2, 0x34, 0x6d, 0x9a, 0x39, 0x01, 0x27, 0xf2, 0x2a, 0xe0, 0x0e, 0xc1, 0x1d,
-	0x58, 0x33, 0x4f, 0x9d, 0x49, 0xa7, 0x0f, 0x9d, 0xe9, 0xe7, 0x6b, 0x9f, 0xfa, 0x2d, 0xfa, 0xde,
-	0xb9, 0xc3, 0x81, 0x02, 0x09, 0x40, 0xb2, 0x86, 0x7c, 0x22, 0xf6, 0x6e, 0xf7, 0xb7, 0x7b, 0x77,
-	0xbb, 0x7b, 0x3f, 0x80, 0xf0, 0x71, 0x78, 0xd5, 0xdb, 0xef, 0x63, 0xe6, 0xf9, 0x24, 0xfa, 0xd4,
-	0xc7, 0x31, 0x73, 0xfb, 0x24, 0xfa, 0xd4, 0xe5, 0xc1, 0xbe, 0x1b, 0x78, 0xfb, 0x83, 0x27, 0xea,
-	0x67, 0x2f, 0x8c, 0xb8, 0xe4, 0xe8, 0x83, 0xab, 0xf8, 0x82, 0x0c, 0x68, 0x24, 0xf7, 0xd4, 0xd8,
-	0xe0, 0x89, 0x7d, 0x09, 0x6b, 0xdf, 0x92, 0x20, 0x3e, 0x27, 0x91, 0xa0, 0x9c, 0x39, 0x44, 0x84,
-	0x9c, 0x09, 0x82, 0x3e, 0x87, 0x7a, 0x64, 0x9e, 0xad, 0xca, 0x4e, 0x65, 0x77, 0xe9, 0xe9, 0xd6,
-	0xde, 0x84, 0xe9, 0x5e, 0xaa, 0xec, 0x8c, 0x54, 0x91, 0x05, 0xf7, 0x06, 0x09, 0x92, 0x35, 0xbf,
-	0x53, 0xd9, 0x6d, 0x38, 0xa9, 0x68, 0x3f, 0x82, 0xea, 0x79, 0xfb, 0x44, 0x2b, 0x04, 0xf4, 0x6b,
-	0xc1, 0x99, 0x86, 0x5d, 0x76, 0x52, 0xd1, 0x7e, 0x02, 0xd5, 0x66, 0xe7, 0x0c, 0xad, 0xc2, 0x3c,
-	0xf5, 0xf4, 0xdc, 0x8a, 0x33, 0x4f, 0x3d, 0xb4, 0x0d, 0x75, 0x41, 0x2f, 0x7c, 0xca, 0x7a, 0xc2,
-	0x9a, 0xdf, 0xa9, 0xee, 0xae, 0x38, 0x23, 0xd9, 0xde, 0x87, 0x7b, 0xdd, 0xe4, 0x39, 0x67, 0xb6,
-	0x0e, 0x0b, 0x03, 0xec, 0xc7, 0x44, 0x87, 0x51, 0x73, 0x12, 0xc1, 0x6e, 0xc1, 0x42, 0x07, 0xf7,
-	0x88, 0x50, 0xd3, 0x2e, 0x8f, 0x99, 0xd4, 0x16, 0x35, 0x27, 0x11, 0x10, 0x82, 0x5a, 0xcc, 0xa8,
-	0x34, 0xa1, 0xeb, 0x67, 0x35, 0x26, 0xe8, 0x4f, 0xc4, 0xaa, 0x6a, 0x68, 0xfd, 0x6c, 0x3f, 0x83,
-	0xc5, 0x36, 0x09, 0x78, 0x34, 0x44, 0x9b, 0xb0, 0x88, 0x83, 0x0c, 0x90, 0x91, 0x8a, 0x90, 0xec,
-	0x7f, 0x57, 0xa0, 0xd6, 0x24, 0xbe, 0x9f, 0x8b, 0x75, 0x1f, 0x16, 0x03, 0x0d, 0xa7, 0xd5, 0x97,
-	0x9e, 0x7e, 0x94, 0xdb, 0xe9, 0xc4, 0x9b, 0x63, 0xd4, 0xd0, 0x27, 0xb0, 0x10, 0xaa, 0x65, 0x58,
-	0xd5, 0x9d, 0xea, 0xee, 0xd2, 0xd3, 0xcd, 0x9c, 0xbe, 0x5e, 0xa4, 0x93, 0x28, 0xa1, 0x2f, 0xa0,
-	0xe1, 0x51, 0x21, 0x31, 0x73, 0x89, 0xb0, 0x6a, 0xda, 0xc2, 0xca, 0x59, 0x98, 0x7d, 0x74, 0xae,
-	0x55, 0xd1, 0x2e, 0xd4, 0xdc, 0x30, 0x16, 0xd6, 0x82, 0x36, 0x59, 0xcf, 0x99, 0x34, 0x3b, 0x67,
-	0x8e, 0xd6, 0xb0, 0x5f, 0x40, 0xfd, 0x94, 0x87, 0xdc, 0xe7, 0xbd, 0x21, 0x7a, 0x06, 0xc0, 0xe2,
-	0x00, 0xff, 0xe0, 0x12, 0xdf, 0x17, 0x56, 0x45, 0xdb, 0x6e, 0xe4, 0x6d, 0x89, 0xef, 0x3b, 0x0d,
-	0xa5, 0xa8, 0x9e, 0x84, 0xfd, 0xcf, 0x0a, 0x2c, 0x76, 0xdb, 0x07, 0x94, 0x0b, 0x64, 0xc3, 0x72,
-	0x80, 0x59, 0x7c, 0x89, 0x5d, 0x19, 0x47, 0x24, 0xd2, 0xfb, 0xd4, 0x70, 0xc6, 0xc6, 0x54, 0x16,
-	0x85, 0x11, 0xf7, 0x62, 0x37, 0xdd, 0xe1, 0x54, 0xcc, 0x26, 0x60, 0x75, 0x2c, 0x01, 0xd1, 0x87,
-	0x50, 0x15, 0x57, 0xb1, 0x55, 0xd3, 0xa3, 0xea, 0x51, 0x1d, 0xde, 0x25, 0x0e, 0xa8, 0x3f, 0xb4,
-	0x16, 0xf4, 0xa0, 0x91, 0xec, 0x7f, 0x54, 0xa0, 0x7e, 0x48, 0xc5, 0xd5, 0x09, 0xbb, 0xe4, 0x5a,
-	0x89, 0x47, 0x01, 0x96, 0x26, 0x10, 0x23, 0xa1, 0x1d, 0x58, 0xba, 0xc0, 0xee, 0x15, 0x65, 0xbd,
-	0x23, 0xea, 0x13, 0x13, 0x46, 0x76, 0x08, 0x3d, 0x04, 0x50, 0xf1, 0x62, 0xbf, 0x9b, 0xe6, 0x4f,
-	0xcd, 0xc9, 0x8c, 0x28, 0x04, 0xb5, 0x25, 0xa9, 0x42, 0x4d, 0x2b, 0x64, 0x87, 0xec, 0xff, 0x55,
-	0x60, 0xa5, 0xe9, 0xc7, 0x42, 0x92, 0xa8, 0xc9, 0xd9, 0x25, 0xed, 0xa1, 0x3d, 0x40, 0xad, 0x77,
-	0x21, 0x66, 0x9e, 0x8a, 0x4f, 0xb4, 0x18, 0xbe, 0xf0, 0x49, 0x92, 0x4a, 0x75, 0xa7, 0x60, 0x06,
-	0xfd, 0x1e, 0xb6, 0x8e, 0x22, 0x42, 0x54, 0x3e, 0x38, 0x24, 0xe4, 0x91, 0xa4, 0xac, 0x77, 0x48,
-	0x45, 0x62, 0x36, 0xaf, 0xcd, 0xca, 0x15, 0xd0, 0x73, 0xb0, 0x0e, 0xb8, 0xdb, 0x17, 0x87, 0x54,
-	0x84, 0x3e, 0x1e, 0x1e, 0xf1, 0xa8, 0x75, 0x74, 0x72, 0x1c, 0x13, 0x21, 0x85, 0x5e, 0x4f, 0xdd,
-	0x29, 0x9d, 0x57, 0xb6, 0x5d, 0x12, 0x51, 0xec, 0x37, 0x39, 0x13, 0xdc, 0x27, 0xaf, 0xf8, 0xb5,
-	0xe3, 0x5a, 0x62, 0x5b, 0x36, 0x6f, 0x7f, 0x06, 0x5b, 0x27, 0x4c, 0x92, 0xe8, 0x12, 0xbb, 0xe4,
-	0x80, 0x32, 0x8f, 0xb2, 0x5e, 0x9b, 0xf6, 0x22, 0x2c, 0xd5, 0x39, 0x6e, 0xaa, 0xe2, 0x93, 0x7d,
-	0xee, 0xa5, 0x07, 0x92, 0x48, 0xf6, 0x7f, 0xef, 0xc1, 0xc6, 0x79, 0xb2, 0x79, 0x6d, 0xec, 0xf6,
-	0x29, 0x23, 0x6f, 0x42, 0x65, 0x20, 0xd0, 0x37, 0xb0, 0x3e, 0x3e, 0x91, 0x64, 0x9a, 0xe9, 0x6b,
-	0xf9, 0x6a, 0x4b, 0xa6, 0x9d, 0x42, 0x23, 0xf4, 0x0c, 0x36, 0xda, 0x24, 0x38, 0xc0, 0xbe, 0xcf,
-	0x39, 0xeb, 0x4a, 0x2c, 0x45, 0x87, 0x44, 0x94, 0x27, 0xbb, 0xb9, 0xe2, 0x14, 0x4f, 0xa2, 0xdf,
-	0xc2, 0x5a, 0x27, 0x22, 0x6a, 0xdc, 0xc5, 0x92, 0x78, 0xe7, 0xdc, 0x8f, 0x03, 0x53, 0xbf, 0x0d,
-	0xa7, 0x68, 0x4a, 0x35, 0x60, 0x69, 0x6a, 0x4a, 0xef, 0x57, 0x51, 0x03, 0x4e, 0x8b, 0xce, 0x19,
-	0xa9, 0xa2, 0x2e, 0x34, 0x74, 0x02, 0xa8, 0xdc, 0x35, 0x95, 0xfb, 0x79, 0xce, 0xae, 0x70, 0x9b,
-	0xf6, 0x46, 0x76, 0x2d, 0x26, 0xa3, 0xa1, 0x73, 0x8d, 0x53, 0x92, 0x75, 0x8b, 0xa5, 0x59, 0x77,
-	0x08, 0x2b, 0x6e, 0x36, 0x6d, 0xad, 0x7b, 0x7a, 0x01, 0x0f, 0xf3, 0x6d, 0x20, 0xab, 0xe5, 0x8c,
-	0x1b, 0xa1, 0x9f, 0x2b, 0xb0, 0x45, 0xd3, 0x34, 0x38, 0xe4, 0x01, 0xa6, 0xec, 0xa5, 0x94, 0xd8,
-	0xed, 0x07, 0x84, 0x49, 0xab, 0xae, 0xd7, 0xd6, 0x7a, 0xcf, 0xb5, 0x9d, 0x94, 0xe1, 0x24, 0x6b,
-	0x2d, 0xf7, 0x83, 0x18, 0xa0, 0xd1, 0xe4, 0x28, 0x09, 0xad, 0x86, 0xf6, 0xfe, 0xe5, 0x5d, 0xbd,
-	0x8f, 0x00, 0x12, 0xb7, 0x05, 0xc8, 0xdb, 0x6f, 0x61, 0x75, 0xfc, 0x20, 0x54, 0xe3, 0xba, 0x22,
-	0x43, 0x93, 0xed, 0xea, 0x11, 0xed, 0x67, 0x2f, 0xb7, 0xa2, 0xc4, 0x48, 0xbb, 0x97, 0xb9, 0xf7,
-	0x9e, 0xcf, 0xff, 0xae, 0xb2, 0xfd, 0x0a, 0x1e, 0xde, 0xbc, 0x0b, 0x05, 0x8e, 0xc6, 0x6e, 0xd1,
-	0x46, 0x16, 0xed, 0x47, 0xf8, 0xa8, 0x64, 0x55, 0x05, 0x30, 0x2f, 0xc6, 0xe3, 0xfd, 0x4d, 0x2e,
-	0xde, 0xd2, 0x6a, 0xcf, 0xb8, 0xb4, 0x07, 0x00, 0xe7, 0xed, 0x13, 0x87, 0xfc, 0xa8, 0x1a, 0x0c,
-	0x7a, 0x0c, 0xd5, 0x41, 0x40, 0x4d, 0x0d, 0xe7, 0x2f, 0x27, 0xa5, 0xa9, 0x14, 0xd0, 0x0b, 0xb8,
-	0xc7, 0x93, 0x63, 0x30, 0xde, 0x1f, 0xbf, 0xdf, 0xa1, 0x39, 0xa9, 0x99, 0x7d, 0x0a, 0x1f, 0x5e,
-	0xc7, 0x73, 0x47, 0xef, 0xd6, 0xb8, 0xf7, 0xe5, 0x6b, 0xd4, 0x9f, 0x2b, 0xb0, 0xd4, 0x7a, 0x47,
-	0xdc, 0x14, 0xf1, 0x21, 0x80, 0xa7, 0x4f, 0xe5, 0x35, 0x0e, 0x88, 0xd9, 0xbc, 0xcc, 0x88, 0x42,
-	0x6a, 0xf2, 0x20, 0xc0, 0xcc, 0x4b, 0xaf, 0x3c, 0x23, 0x2a, 0xae, 0xf1, 0x32, 0xea, 0xa5, 0xcd,
-	0x44, 0x3f, 0xa3, 0xc7, 0xb0, 0x2a, 0x69, 0x40, 0x78, 0x2c, 0xbb, 0xc4, 0xe5, 0xcc, 0x13, 0xba,
-	0x87, 0x2c, 0x38, 0x13, 0xa3, 0xf6, 0x2a, 0x2c, 0xb7, 0x82, 0x50, 0x0e, 0x4d, 0x14, 0xf6, 0x97,
-	0x50, 0x77, 0x32, 0x5c, 0x4e, 0xc4, 0xae, 0x4b, 0x84, 0x30, 0x17, 0x4c, 0x2a, 0xaa, 0x99, 0x80,
-	0x08, 0x81, 0x7b, 0x69, 0x62, 0xa4, 0xa2, 0xfd, 0x03, 0xac, 0x26, 0xb9, 0x35, 0x2d, 0x91, 0xdc,
-	0x84, 0xc5, 0x64, 0xf1, 0xc6, 0x83, 0x91, 0x6c, 0x06, 0x6b, 0x89, 0x03, 0xdd, 0x5d, 0xa7, 0xf5,
-	0xb2, 0x03, 0x4b, 0xde, 0x35, 0x5a, 0x7a, 0x89, 0x67, 0x86, 0xec, 0x77, 0x70, 0x5f, 0x5f, 0x68,
-	0xba, 0x9a, 0xa6, 0xf4, 0xf6, 0x09, 0xdc, 0xef, 0x4d, 0x62, 0x19, 0x9f, 0xf9, 0x09, 0xfb, 0xef,
-	0x15, 0xd8, 0xd0, 0xae, 0xcf, 0x04, 0x89, 0x5e, 0x51, 0x21, 0xa7, 0x75, 0xff, 0x0c, 0x36, 0x7a,
-	0x45, 0x78, 0x26, 0x84, 0xe2, 0x49, 0xfb, 0x5f, 0x15, 0xb0, 0x74, 0x18, 0x8a, 0xd3, 0x88, 0xa1,
-	0x90, 0x24, 0x98, 0x7a, 0xdb, 0x9f, 0x83, 0xd5, 0x2b, 0x81, 0x34, 0xc1, 0x94, 0xce, 0xdb, 0x43,
-	0x58, 0x4e, 0xca, 0x66, 0xba, 0x10, 0xb6, 0xa1, 0x4e, 0xde, 0x51, 0xd9, 0xe4, 0x5e, 0xe2, 0x72,
-	0xc1, 0x19, 0xc9, 0x2a, 0xf7, 0x84, 0xf4, 0xde, 0xc4, 0xd2, 0x50, 0x48, 0x23, 0xd9, 0xdf, 0xc1,
-	0x87, 0x7a, 0x27, 0x3a, 0x8a, 0x28, 0xbf, 0x67, 0xd9, 0xe6, 0x0b, 0x71, 0xbe, 0xb0, 0x10, 0xbf,
-	0x36, 0x79, 0x96, 0x60, 0x4f, 0xb5, 0x36, 0x9b, 0xc3, 0x8a, 0xe2, 0x74, 0x3f, 0x91, 0xbb, 0x76,
-	0xab, 0x2f, 0x60, 0x33, 0x66, 0x97, 0xda, 0xf4, 0xb4, 0x28, 0xe8, 0x92, 0x59, 0xfb, 0x2d, 0xdc,
-	0x4f, 0xde, 0x50, 0x0e, 0xe3, 0x20, 0xbc, 0xab, 0xd3, 0x6d, 0xa8, 0x7b, 0x71, 0x10, 0x76, 0xb0,
-	0xec, 0x9b, 0xc3, 0x1f, 0xc9, 0xf6, 0x05, 0x7c, 0xd0, 0x6d, 0x9d, 0xcf, 0xa2, 0xf6, 0x54, 0x33,
-	0x23, 0x03, 0xcd, 0x8a, 0x4c, 0x23, 0x36, 0xa2, 0xfd, 0xb7, 0x0a, 0x6c, 0xbd, 0xd2, 0xef, 0xcc,
-	0x6d, 0x82, 0x45, 0x1c, 0x11, 0x75, 0x21, 0xce, 0xa0, 0xd4, 0xfd, 0x49, 0x4c, 0xe3, 0x38, 0x3f,
-	0x61, 0x7f, 0xaf, 0xf8, 0xee, 0x5f, 0x88, 0x2b, 0x93, 0x38, 0xba, 0xc4, 0x8d, 0x88, 0x9c, 0xdd,
-	0x55, 0xd3, 0x87, 0xb5, 0xf3, 0xf6, 0x49, 0xb3, 0x4f, 0xdc, 0x2b, 0x11, 0x07, 0x33, 0xa8, 0x1c,
-	0xd7, 0x40, 0xa5, 0xe7, 0x95, 0xca, 0x4f, 0xff, 0xb3, 0x0e, 0xd5, 0x66, 0xe0, 0xa1, 0xd7, 0x80,
-	0xba, 0x43, 0xe6, 0x8e, 0x5f, 0xac, 0xe8, 0x17, 0x85, 0xc1, 0x27, 0xcb, 0xdc, 0x2e, 0xf7, 0x6d,
-	0xcf, 0xa1, 0x37, 0xb0, 0xd6, 0xc1, 0xb1, 0x20, 0x33, 0x03, 0xfc, 0x16, 0x36, 0xce, 0x58, 0x38,
-	0x53, 0xc8, 0x2e, 0xac, 0x27, 0x55, 0x37, 0x81, 0x98, 0x67, 0xbd, 0x63, 0xc5, 0x79, 0x33, 0xa8,
-	0x03, 0x9b, 0x67, 0xa6, 0xe6, 0x66, 0x16, 0xe8, 0x29, 0x58, 0x5d, 0x7e, 0x29, 0x1d, 0x72, 0xc1,
-	0xb9, 0x9c, 0x19, 0xaa, 0x03, 0x9b, 0xdd, 0x7e, 0x2c, 0x3d, 0xfe, 0x57, 0x36, 0x33, 0xcc, 0xd7,
-	0x80, 0xbe, 0xa1, 0xbe, 0x3f, 0x33, 0xbc, 0x0e, 0xac, 0x1f, 0x12, 0x9f, 0xc8, 0xd9, 0xed, 0xe5,
-	0x5b, 0xd8, 0x48, 0xb8, 0xe1, 0x24, 0xe4, 0xaf, 0xf2, 0xdf, 0x70, 0x26, 0x38, 0xe4, 0xad, 0x19,
-	0xaf, 0x2a, 0x68, 0x64, 0x74, 0x8a, 0xa3, 0x1e, 0x91, 0x53, 0x44, 0xfa, 0x07, 0x78, 0xd0, 0xc4,
-	0xcc, 0x25, 0x13, 0xbb, 0x79, 0xfd, 0x5e, 0x3d, 0xdd, 0xd1, 0xd3, 0x1e, 0xc3, 0x7e, 0x12, 0x64,
-	0x87, 0x7b, 0x4d, 0x9f, 0x60, 0x16, 0x87, 0x53, 0x60, 0xfe, 0x11, 0x1e, 0x1d, 0x51, 0x86, 0x7d,
-	0x3a, 0x99, 0xf8, 0xb3, 0x08, 0xf8, 0x35, 0xa0, 0xaf, 0xb8, 0x0c, 0xfd, 0xb8, 0xf7, 0x15, 0x17,
-	0xf2, 0x90, 0x0c, 0xa8, 0x4b, 0xc4, 0x14, 0x78, 0x6d, 0x68, 0x1c, 0x13, 0x99, 0xf0, 0x52, 0xf4,
-	0x20, 0xa7, 0x99, 0x65, 0xd8, 0xdb, 0x8f, 0xf2, 0x2f, 0x6b, 0x63, 0x84, 0x59, 0x27, 0xd5, 0xea,
-	0x08, 0x4e, 0xb3, 0xd0, 0xdb, 0x30, 0x7f, 0x5d, 0x82, 0x39, 0xc6, 0x91, 0x75, 0x8b, 0x5a, 0x3e,
-	0x26, 0x72, 0xc4, 0x67, 0x6f, 0x83, 0xb5, 0x73, 0xd3, 0x39, 0x2a, 0xac, 0x41, 0xeb, 0xc7, 0x44,
-	0xf3, 0xc6, 0x5b, 0xe3, 0x7c, 0x5c, 0x0c, 0x98, 0xe3, 0x9c, 0x73, 0xe8, 0x4f, 0x7a, 0x0b, 0x32,
-	0xfc, 0xef, 0x36, 0xe8, 0x8f, 0x8b, 0xa1, 0x8b, 0x18, 0xe4, 0x1c, 0x3a, 0x80, 0x9a, 0xe2, 0x59,
-	0xb7, 0x61, 0xde, 0x78, 0xe6, 0x2d, 0xa8, 0x29, 0x1e, 0x8a, 0x7e, 0x99, 0xc7, 0xb8, 0x7e, 0xab,
-	0xdb, 0x7e, 0x50, 0x32, 0x9b, 0x69, 0xc6, 0x8d, 0x11, 0xef, 0x2b, 0x68, 0x1a, 0x93, 0x7c, 0xb3,
-	0xec, 0x4c, 0xb2, 0xb4, 0x51, 0x57, 0x8f, 0x35, 0x51, 0x35, 0x23, 0x7a, 0x86, 0xec, 0x92, 0xaf,
-	0xcb, 0x19, 0xee, 0x76, 0x5b, 0xcf, 0x53, 0x67, 0x93, 0xf9, 0xd3, 0xe0, 0xee, 0xe9, 0x59, 0xf0,
-	0x8f, 0x83, 0xe9, 0x23, 0x39, 0xd6, 0xd0, 0xec, 0x9c, 0x89, 0x29, 0x2f, 0xbb, 0x1c, 0xa6, 0xf9,
-	0x78, 0x3f, 0x0d, 0x1f, 0x81, 0x63, 0x22, 0x0d, 0x35, 0xbd, 0x6d, 0xf9, 0x3b, 0xf9, 0x0f, 0x8c,
-	0xe3, 0x9c, 0xd6, 0x9e, 0x43, 0x18, 0xd6, 0x8f, 0x89, 0xcc, 0xd1, 0xd0, 0x9b, 0x43, 0xcc, 0x7f,
-	0x47, 0x29, 0xe5, 0xb1, 0xf6, 0x1c, 0xfa, 0x1e, 0x50, 0x9e, 0x64, 0xa2, 0xa2, 0x6f, 0x31, 0x25,
-	0x4c, 0xf4, 0xe6, 0x2d, 0xf9, 0x33, 0x6c, 0x1c, 0x13, 0xf9, 0x32, 0x0c, 0x7d, 0x4a, 0xbc, 0x0c,
-	0xdd, 0xbc, 0x7b, 0x72, 0x14, 0x70, 0x55, 0x7b, 0xee, 0xa0, 0xf6, 0xdd, 0xfc, 0xe0, 0xc9, 0xc5,
-	0xa2, 0xfe, 0x17, 0xeb, 0xb3, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xba, 0x43, 0xe7, 0x93, 0xf2,
-	0x1a, 0x00, 0x00,
+	// 1910 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x59, 0x5f, 0x73, 0xe3, 0xb6,
+	0x11, 0xb7, 0x2c, 0xd9, 0x96, 0xd6, 0x7f, 0xe2, 0x83, 0xff, 0x84, 0x76, 0x7b, 0x77, 0x2e, 0xa7,
+	0xf5, 0x38, 0x69, 0x62, 0xf7, 0x9c, 0x4b, 0xa6, 0x73, 0xd3, 0x66, 0xce, 0x96, 0x65, 0xc7, 0xc9,
+	0xe9, 0x4e, 0xa1, 0x6c, 0xdf, 0x34, 0x6d, 0x9a, 0x81, 0x49, 0x58, 0x62, 0x4d, 0x02, 0x0c, 0x01,
+	0xaa, 0x56, 0x9e, 0x3a, 0x73, 0x9d, 0x3e, 0x74, 0xa6, 0x1f, 0xa5, 0x9f, 0xa7, 0x6f, 0xfd, 0x16,
+	0x7d, 0xef, 0x00, 0x04, 0x65, 0x4a, 0x24, 0xed, 0xf3, 0x48, 0x4f, 0x22, 0x80, 0xdd, 0xdf, 0x2e,
+	0x16, 0xbb, 0x8b, 0x1f, 0x45, 0xf8, 0x28, 0xb8, 0xee, 0xec, 0x75, 0x31, 0x75, 0x3c, 0x12, 0x7e,
+	0xea, 0xe1, 0x88, 0xda, 0x5d, 0x12, 0x7e, 0x6a, 0x33, 0x7f, 0xcf, 0xf6, 0x9d, 0xbd, 0xde, 0x33,
+	0xf9, 0xb3, 0x1b, 0x84, 0x4c, 0x30, 0xf4, 0xc1, 0x75, 0x74, 0x49, 0x7a, 0x6e, 0x28, 0x76, 0xe5,
+	0x5c, 0xef, 0x99, 0x79, 0x05, 0x2b, 0xdf, 0x12, 0x3f, 0xba, 0x20, 0x21, 0x77, 0x19, 0xb5, 0x08,
+	0x0f, 0x18, 0xe5, 0x04, 0x7d, 0x0e, 0xd5, 0x50, 0x3f, 0x1b, 0xa5, 0xad, 0xd2, 0xce, 0xfc, 0xfe,
+	0xc6, 0xee, 0x88, 0xea, 0x6e, 0x22, 0x6c, 0x0d, 0x44, 0x91, 0x01, 0x73, 0xbd, 0x18, 0xc9, 0x98,
+	0xde, 0x2a, 0xed, 0xd4, 0xac, 0x64, 0x68, 0x3e, 0x85, 0xf2, 0x45, 0xf3, 0x54, 0x09, 0xf8, 0xee,
+	0xd7, 0x9c, 0x51, 0x05, 0xbb, 0x60, 0x25, 0x43, 0xf3, 0x19, 0x94, 0xeb, 0xad, 0x73, 0xb4, 0x04,
+	0xd3, 0xae, 0xa3, 0xd6, 0x16, 0xad, 0x69, 0xd7, 0x41, 0x9b, 0x50, 0xe5, 0xee, 0xa5, 0xe7, 0xd2,
+	0x0e, 0x37, 0xa6, 0xb7, 0xca, 0x3b, 0x8b, 0xd6, 0x60, 0x6c, 0xee, 0xc1, 0x5c, 0x3b, 0x7e, 0xce,
+	0xa8, 0xad, 0xc2, 0x4c, 0x0f, 0x7b, 0x11, 0x51, 0x6e, 0x54, 0xac, 0x78, 0x60, 0x36, 0x60, 0xa6,
+	0x85, 0x3b, 0x84, 0xcb, 0x65, 0x9b, 0x45, 0x54, 0x28, 0x8d, 0x8a, 0x15, 0x0f, 0x10, 0x82, 0x4a,
+	0x44, 0x5d, 0xa1, 0x5d, 0x57, 0xcf, 0x72, 0x8e, 0xbb, 0x3f, 0x11, 0xa3, 0xac, 0xa0, 0xd5, 0xb3,
+	0xf9, 0x1c, 0x66, 0x9b, 0xc4, 0x67, 0x61, 0x1f, 0xad, 0xc3, 0x2c, 0xf6, 0x53, 0x40, 0x7a, 0x94,
+	0x87, 0x64, 0xfe, 0xa7, 0x04, 0x95, 0x3a, 0xf1, 0xbc, 0x8c, 0xaf, 0x7b, 0x30, 0xeb, 0x2b, 0x38,
+	0x25, 0x3e, 0xbf, 0xff, 0x61, 0x26, 0xd2, 0xb1, 0x35, 0x4b, 0x8b, 0xa1, 0x4f, 0x60, 0x26, 0x90,
+	0xdb, 0x30, 0xca, 0x5b, 0xe5, 0x9d, 0xf9, 0xfd, 0xf5, 0x8c, 0xbc, 0xda, 0xa4, 0x15, 0x0b, 0xa1,
+	0x2f, 0xa0, 0xe6, 0xb8, 0x5c, 0x60, 0x6a, 0x13, 0x6e, 0x54, 0x94, 0x86, 0x91, 0xd1, 0xd0, 0x71,
+	0xb4, 0x6e, 0x45, 0xd1, 0x0e, 0x54, 0xec, 0x20, 0xe2, 0xc6, 0x8c, 0x52, 0x59, 0xcd, 0xa8, 0xd4,
+	0x5b, 0xe7, 0x96, 0x92, 0x30, 0x5f, 0x42, 0xf5, 0x8c, 0x05, 0xcc, 0x63, 0x9d, 0x3e, 0x7a, 0x0e,
+	0x40, 0x23, 0x1f, 0xff, 0x60, 0x13, 0xcf, 0xe3, 0x46, 0x49, 0xe9, 0xae, 0x65, 0x75, 0x89, 0xe7,
+	0x59, 0x35, 0x29, 0x28, 0x9f, 0xb8, 0xf9, 0xcf, 0x12, 0xcc, 0xb6, 0x9b, 0x87, 0x2e, 0xe3, 0xc8,
+	0x84, 0x05, 0x1f, 0xd3, 0xe8, 0x0a, 0xdb, 0x22, 0x0a, 0x49, 0xa8, 0xe2, 0x54, 0xb3, 0x86, 0xe6,
+	0x64, 0x16, 0x05, 0x21, 0x73, 0x22, 0x3b, 0x89, 0x70, 0x32, 0x4c, 0x27, 0x60, 0x79, 0x28, 0x01,
+	0xd1, 0x32, 0x94, 0xf9, 0x75, 0x64, 0x54, 0xd4, 0xac, 0x7c, 0x94, 0x87, 0x77, 0x85, 0x7d, 0xd7,
+	0xeb, 0x1b, 0x33, 0x6a, 0x52, 0x8f, 0xcc, 0x7f, 0x94, 0xa0, 0x7a, 0xe4, 0xf2, 0xeb, 0x53, 0x7a,
+	0xc5, 0x94, 0x10, 0x0b, 0x7d, 0x2c, 0xb4, 0x23, 0x7a, 0x84, 0xb6, 0x60, 0xfe, 0x12, 0xdb, 0xd7,
+	0x2e, 0xed, 0x1c, 0xbb, 0x1e, 0xd1, 0x6e, 0xa4, 0xa7, 0xd0, 0x13, 0x00, 0xe9, 0x2f, 0xf6, 0xda,
+	0x49, 0xfe, 0x54, 0xac, 0xd4, 0x8c, 0x44, 0x90, 0x21, 0x49, 0x04, 0x2a, 0x4a, 0x20, 0x3d, 0x65,
+	0xfe, 0xaf, 0x04, 0x8b, 0x75, 0x2f, 0xe2, 0x82, 0x84, 0x75, 0x46, 0xaf, 0xdc, 0x0e, 0xda, 0x05,
+	0xd4, 0xb8, 0x09, 0x30, 0x75, 0xa4, 0x7f, 0xbc, 0x41, 0xf1, 0xa5, 0x47, 0xe2, 0x54, 0xaa, 0x5a,
+	0x39, 0x2b, 0xe8, 0x77, 0xb0, 0x71, 0x1c, 0x12, 0x22, 0xf3, 0xc1, 0x22, 0x01, 0x0b, 0x85, 0x4b,
+	0x3b, 0x47, 0x2e, 0x8f, 0xd5, 0xa6, 0x95, 0x5a, 0xb1, 0x00, 0x7a, 0x01, 0xc6, 0x21, 0xb3, 0xbb,
+	0xfc, 0xc8, 0xe5, 0x81, 0x87, 0xfb, 0xc7, 0x2c, 0x6c, 0x1c, 0x9f, 0x9e, 0x44, 0x84, 0x0b, 0xae,
+	0xf6, 0x53, 0xb5, 0x0a, 0xd7, 0xa5, 0x6e, 0x9b, 0x84, 0x2e, 0xf6, 0xea, 0x8c, 0x72, 0xe6, 0x91,
+	0x57, 0xec, 0xd6, 0x70, 0x25, 0xd6, 0x2d, 0x5a, 0x37, 0x3f, 0x83, 0x8d, 0x53, 0x2a, 0x48, 0x78,
+	0x85, 0x6d, 0x72, 0xe8, 0x52, 0xc7, 0xa5, 0x9d, 0xa6, 0xdb, 0x09, 0xb1, 0x90, 0xe7, 0xb8, 0x2e,
+	0x8b, 0x4f, 0x74, 0x99, 0x93, 0x1c, 0x48, 0x3c, 0x32, 0xff, 0x3b, 0x07, 0x6b, 0x17, 0x71, 0xf0,
+	0x9a, 0xd8, 0xee, 0xba, 0x94, 0xbc, 0x09, 0xa4, 0x02, 0x47, 0xdf, 0xc0, 0xea, 0xf0, 0x42, 0x9c,
+	0x69, 0xba, 0xaf, 0x65, 0xab, 0x2d, 0x5e, 0xb6, 0x72, 0x95, 0xd0, 0x73, 0x58, 0x6b, 0x12, 0xff,
+	0x10, 0x7b, 0x1e, 0x63, 0xb4, 0x2d, 0xb0, 0xe0, 0x2d, 0x12, 0xba, 0x2c, 0x8e, 0xe6, 0xa2, 0x95,
+	0xbf, 0x88, 0x7e, 0x03, 0x2b, 0xad, 0x90, 0xc8, 0x79, 0x1b, 0x0b, 0xe2, 0x5c, 0x30, 0x2f, 0xf2,
+	0x75, 0xfd, 0xd6, 0xac, 0xbc, 0x25, 0xd9, 0x80, 0x85, 0xae, 0x29, 0x15, 0xaf, 0xbc, 0x06, 0x9c,
+	0x14, 0x9d, 0x35, 0x10, 0x45, 0x6d, 0xa8, 0xa9, 0x04, 0x90, 0xb9, 0xab, 0x2b, 0xf7, 0xf3, 0x8c,
+	0x5e, 0x6e, 0x98, 0x76, 0x07, 0x7a, 0x0d, 0x2a, 0xc2, 0xbe, 0x75, 0x8b, 0x53, 0x90, 0x75, 0xb3,
+	0x85, 0x59, 0x77, 0x04, 0x8b, 0x76, 0x3a, 0x6d, 0x8d, 0x39, 0xb5, 0x81, 0x27, 0xd9, 0x36, 0x90,
+	0x96, 0xb2, 0x86, 0x95, 0xd0, 0xbb, 0x12, 0x6c, 0xb8, 0x49, 0x1a, 0x1c, 0x31, 0x1f, 0xbb, 0xf4,
+	0x40, 0x08, 0x6c, 0x77, 0x7d, 0x42, 0x85, 0x51, 0x55, 0x7b, 0x6b, 0xbc, 0xe7, 0xde, 0x4e, 0x8b,
+	0x70, 0xe2, 0xbd, 0x16, 0xdb, 0x41, 0x14, 0xd0, 0x60, 0x71, 0x90, 0x84, 0x46, 0x4d, 0x59, 0xff,
+	0xf2, 0xa1, 0xd6, 0x07, 0x00, 0xb1, 0xd9, 0x1c, 0xe4, 0xcd, 0xb7, 0xb0, 0x34, 0x7c, 0x10, 0xb2,
+	0x71, 0x5d, 0x93, 0xbe, 0xce, 0x76, 0xf9, 0x88, 0xf6, 0xd2, 0x97, 0x5b, 0x5e, 0x62, 0x24, 0xdd,
+	0x4b, 0xdf, 0x7b, 0x2f, 0xa6, 0x7f, 0x5b, 0xda, 0x7c, 0x05, 0x4f, 0xee, 0x8e, 0x42, 0x8e, 0xa1,
+	0xa1, 0x5b, 0xb4, 0x96, 0x46, 0xfb, 0x11, 0x3e, 0x2c, 0xd8, 0x55, 0x0e, 0xcc, 0xcb, 0x61, 0x7f,
+	0x3f, 0xce, 0xf8, 0x5b, 0x58, 0xed, 0x29, 0x93, 0x66, 0x0f, 0xe0, 0xa2, 0x79, 0x6a, 0x91, 0x1f,
+	0x65, 0x83, 0x41, 0xdb, 0x50, 0xee, 0xf9, 0xae, 0xae, 0xe1, 0xec, 0xe5, 0x24, 0x25, 0xa5, 0x00,
+	0x7a, 0x09, 0x73, 0x2c, 0x3e, 0x06, 0x6d, 0x7d, 0xfb, 0xfd, 0x0e, 0xcd, 0x4a, 0xd4, 0xcc, 0x33,
+	0x58, 0xbe, 0xf5, 0xe7, 0x81, 0xd6, 0x8d, 0x61, 0xeb, 0x0b, 0xb7, 0xa8, 0xef, 0x4a, 0x30, 0xdf,
+	0xb8, 0x21, 0x76, 0x82, 0xf8, 0x04, 0xc0, 0x51, 0xa7, 0xf2, 0x1a, 0xfb, 0x44, 0x07, 0x2f, 0x35,
+	0x23, 0x91, 0xea, 0xcc, 0xf7, 0x31, 0x75, 0x92, 0x2b, 0x4f, 0x0f, 0x25, 0xd7, 0x38, 0x08, 0x3b,
+	0x49, 0x33, 0x51, 0xcf, 0x68, 0x1b, 0x96, 0x84, 0xeb, 0x13, 0x16, 0x89, 0x36, 0xb1, 0x19, 0x75,
+	0xb8, 0xea, 0x21, 0x33, 0xd6, 0xc8, 0xac, 0xb9, 0x04, 0x0b, 0x0d, 0x3f, 0x10, 0x7d, 0xed, 0x85,
+	0xf9, 0x25, 0x54, 0xad, 0x14, 0x97, 0xe3, 0x91, 0x6d, 0x13, 0xce, 0xf5, 0x05, 0x93, 0x0c, 0xe5,
+	0x8a, 0x4f, 0x38, 0xc7, 0x9d, 0x24, 0x31, 0x92, 0xa1, 0xf9, 0x03, 0x2c, 0xc5, 0xb9, 0x35, 0x2e,
+	0x91, 0x5c, 0x87, 0xd9, 0x78, 0xf3, 0xda, 0x82, 0x1e, 0x99, 0x14, 0x56, 0x62, 0x03, 0xaa, 0xbb,
+	0x8e, 0x6b, 0x65, 0x0b, 0xe6, 0x9d, 0x5b, 0xb4, 0xe4, 0x12, 0x4f, 0x4d, 0x99, 0x37, 0xf0, 0x48,
+	0x5d, 0x68, 0xaa, 0x9a, 0xc6, 0xb4, 0xf6, 0x09, 0x3c, 0xea, 0x8c, 0x62, 0x69, 0x9b, 0xd9, 0x05,
+	0xf3, 0xef, 0x25, 0x58, 0x53, 0xa6, 0xcf, 0x39, 0x09, 0x5f, 0xb9, 0x5c, 0x8c, 0x6b, 0xfe, 0x39,
+	0xac, 0x75, 0xf2, 0xf0, 0xb4, 0x0b, 0xf9, 0x8b, 0xe6, 0xbf, 0x4a, 0x60, 0x28, 0x37, 0x24, 0xa7,
+	0xe1, 0x7d, 0x2e, 0x88, 0x3f, 0x76, 0xd8, 0x5f, 0x80, 0xd1, 0x29, 0x80, 0xd4, 0xce, 0x14, 0xae,
+	0x9b, 0x7d, 0x58, 0x88, 0xcb, 0x66, 0x3c, 0x17, 0x36, 0xa1, 0x4a, 0x6e, 0x5c, 0x51, 0x67, 0x4e,
+	0x6c, 0x72, 0xc6, 0x1a, 0x8c, 0x65, 0xee, 0x71, 0xe1, 0xbc, 0x89, 0x84, 0xa6, 0x90, 0x7a, 0x64,
+	0x7e, 0x07, 0xcb, 0x2a, 0x12, 0x2d, 0x49, 0x94, 0xdf, 0xb3, 0x6c, 0xb3, 0x85, 0x38, 0x9d, 0x5b,
+	0x88, 0x5f, 0xeb, 0x3c, 0x8b, 0xb1, 0xc7, 0xda, 0x9b, 0xc9, 0x60, 0x51, 0x72, 0xba, 0x9f, 0xc8,
+	0x43, 0xbb, 0xd5, 0x17, 0xb0, 0x1e, 0xd1, 0x2b, 0xa5, 0x7a, 0x96, 0xe7, 0x74, 0xc1, 0xaa, 0xf9,
+	0x16, 0x1e, 0xc5, 0x6f, 0x28, 0x47, 0x91, 0x1f, 0x3c, 0xd4, 0xe8, 0x26, 0x54, 0x9d, 0xc8, 0x0f,
+	0x5a, 0x58, 0x74, 0xf5, 0xe1, 0x0f, 0xc6, 0xe6, 0x25, 0x7c, 0xd0, 0x6e, 0x5c, 0x4c, 0xa2, 0xf6,
+	0x64, 0x33, 0x23, 0x3d, 0xc5, 0x8a, 0x74, 0x23, 0xd6, 0x43, 0xf3, 0x6f, 0x25, 0xd8, 0x78, 0xa5,
+	0xde, 0x99, 0x9b, 0x04, 0xf3, 0x28, 0x24, 0xf2, 0x42, 0x9c, 0x40, 0xa9, 0x7b, 0xa3, 0x98, 0xda,
+	0x70, 0x76, 0xc1, 0xfc, 0x5e, 0xf2, 0xdd, 0xbf, 0x10, 0x5b, 0xc4, 0x7e, 0xb4, 0x89, 0x1d, 0x12,
+	0x31, 0xb9, 0xab, 0xa6, 0x0b, 0x2b, 0x17, 0xcd, 0xd3, 0x7a, 0x97, 0xd8, 0xd7, 0x3c, 0xf2, 0x27,
+	0x50, 0x39, 0xb6, 0x86, 0x4a, 0xce, 0x2b, 0x19, 0x9b, 0x17, 0xb0, 0x36, 0xb8, 0x2a, 0x5b, 0x21,
+	0xbb, 0x49, 0xee, 0x15, 0xf4, 0x7b, 0x98, 0xc5, 0xb6, 0x62, 0x4e, 0xd2, 0xd2, 0xd2, 0xfe, 0xaf,
+	0xb2, 0xaf, 0xb8, 0x43, 0x7a, 0x07, 0x4a, 0xd8, 0xd2, 0x4a, 0x1f, 0xff, 0x1a, 0x56, 0xf3, 0xd6,
+	0x51, 0x0d, 0x66, 0xda, 0x67, 0x07, 0xd6, 0xd9, 0xf2, 0x14, 0xaa, 0x42, 0xa5, 0x7d, 0xf6, 0xa6,
+	0xb5, 0x5c, 0xda, 0xff, 0xf7, 0x1a, 0x94, 0xeb, 0xbe, 0x83, 0x5e, 0x03, 0x6a, 0xf7, 0xa9, 0x3d,
+	0x7c, 0xbb, 0xa3, 0x9f, 0xe5, 0x46, 0x30, 0x76, 0x73, 0xb3, 0x38, 0x00, 0xe6, 0x14, 0x7a, 0x03,
+	0x2b, 0x2d, 0x1c, 0x71, 0x32, 0x31, 0xc0, 0x6f, 0x61, 0xed, 0x9c, 0x06, 0x13, 0x85, 0x6c, 0xc3,
+	0x6a, 0x5c, 0xfa, 0x23, 0x88, 0x59, 0xea, 0x3d, 0xd4, 0x21, 0xee, 0x06, 0xb5, 0x60, 0xfd, 0x5c,
+	0x17, 0xfe, 0xc4, 0x1c, 0x3d, 0x03, 0xa3, 0xcd, 0xae, 0x84, 0x45, 0x2e, 0x19, 0x13, 0x13, 0x43,
+	0xb5, 0x60, 0xbd, 0xdd, 0x8d, 0x84, 0xc3, 0xfe, 0x4a, 0x27, 0x86, 0xf9, 0x1a, 0xd0, 0x37, 0xae,
+	0xe7, 0x4d, 0x0c, 0xaf, 0x05, 0xab, 0x47, 0xc4, 0x23, 0x62, 0x72, 0xb1, 0x7c, 0x9b, 0x54, 0xdd,
+	0x28, 0xe4, 0x2f, 0x8a, 0xab, 0xec, 0x7d, 0x33, 0x5e, 0x56, 0xd0, 0x40, 0xe9, 0x0c, 0x87, 0x1d,
+	0x22, 0xc6, 0xf0, 0xf4, 0x0f, 0xf0, 0xb8, 0x8e, 0xa9, 0x4d, 0x46, 0xa2, 0x79, 0xfb, 0x72, 0x3f,
+	0xde, 0xd1, 0xbb, 0x1d, 0x8a, 0xbd, 0xd8, 0xc9, 0x16, 0x73, 0xea, 0x1e, 0xc1, 0x34, 0x0a, 0xc6,
+	0xc0, 0xfc, 0x23, 0x3c, 0x3d, 0x76, 0x29, 0xf6, 0xdc, 0xd1, 0xc4, 0x9f, 0x84, 0xc3, 0xaf, 0x01,
+	0x7d, 0xc5, 0x44, 0xe0, 0x45, 0x9d, 0xaf, 0x18, 0x17, 0x47, 0xa4, 0xe7, 0xda, 0x84, 0x8f, 0x81,
+	0xd7, 0x84, 0xda, 0x09, 0x11, 0x31, 0x39, 0x46, 0x8f, 0x33, 0x92, 0x69, 0x9a, 0xbf, 0xf9, 0x34,
+	0xfb, 0xc6, 0x38, 0xc4, 0xda, 0x55, 0x52, 0x2d, 0x0d, 0xe0, 0x14, 0x15, 0xbe, 0x0f, 0xf3, 0x97,
+	0x05, 0x98, 0x43, 0x44, 0x5d, 0xb5, 0xa8, 0x85, 0x13, 0x22, 0x06, 0xa4, 0xfa, 0x3e, 0x58, 0x33,
+	0xb3, 0x9c, 0xe1, 0xe3, 0x0a, 0xb4, 0x7a, 0x42, 0x14, 0x79, 0xbd, 0xd7, 0xcf, 0xed, 0x7c, 0xc0,
+	0x0c, 0xf1, 0x9d, 0x42, 0x7f, 0x52, 0x21, 0x48, 0x91, 0xd0, 0xfb, 0xa0, 0x3f, 0xca, 0x87, 0xce,
+	0xa3, 0xb1, 0x53, 0xe8, 0x10, 0x2a, 0x92, 0xec, 0xdd, 0x87, 0x79, 0xe7, 0x99, 0x37, 0xa0, 0x22,
+	0xc9, 0x30, 0xfa, 0x79, 0x16, 0xe3, 0xf6, 0xd5, 0x72, 0xf3, 0x71, 0xc1, 0x6a, 0xaa, 0x19, 0xd7,
+	0x06, 0xe4, 0x33, 0xa7, 0x69, 0x8c, 0x92, 0xde, 0xa2, 0x33, 0x49, 0x73, 0x57, 0x55, 0x3d, 0xc6,
+	0x48, 0xd5, 0x0c, 0x38, 0x22, 0x32, 0x0b, 0xfe, 0xe2, 0x4e, 0x11, 0xc8, 0xfb, 0x7a, 0x9e, 0x3c,
+	0x9b, 0xd4, 0x97, 0x8b, 0x87, 0xa7, 0x67, 0xce, 0x67, 0x0f, 0xdd, 0x47, 0x32, 0xac, 0xa1, 0xde,
+	0x3a, 0xe7, 0x63, 0x5e, 0x76, 0x19, 0x4c, 0xfd, 0x05, 0x61, 0x1c, 0x3e, 0x02, 0x27, 0x44, 0x68,
+	0x7e, 0x7c, 0xdf, 0xf6, 0xb7, 0xb2, 0xff, 0x72, 0x0e, 0x13, 0x6b, 0x73, 0x0a, 0x61, 0x58, 0x3d,
+	0x21, 0x22, 0xc3, 0x85, 0xef, 0x76, 0x31, 0xfb, 0x67, 0x4e, 0x21, 0x99, 0x36, 0xa7, 0xd0, 0xf7,
+	0x80, 0xb2, 0x4c, 0x17, 0xe5, 0xfd, 0x21, 0x54, 0x40, 0x87, 0xef, 0x0e, 0xc9, 0x9f, 0x61, 0xed,
+	0x84, 0x88, 0x83, 0x20, 0xf0, 0x5c, 0xe2, 0xa4, 0x38, 0xef, 0xc3, 0x93, 0x23, 0x87, 0x30, 0xab,
+	0x36, 0xb3, 0x34, 0xcc, 0x43, 0xd1, 0xf6, 0x3d, 0x44, 0xf6, 0x7e, 0xb7, 0x0f, 0x2b, 0xdf, 0x4d,
+	0xf7, 0x9e, 0x5d, 0xce, 0xaa, 0xef, 0x73, 0x9f, 0xfd, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x87,
+	0xe8, 0xd2, 0xcc, 0x1b, 0x00, 0x00,
 }
diff --git a/pkg/handler-launcher-com/cmd/v1/cmd.proto b/pkg/handler-launcher-com/cmd/v1/cmd.proto
index e2d6be51f1..ec6fc21896 100644
--- a/pkg/handler-launcher-com/cmd/v1/cmd.proto
+++ b/pkg/handler-launcher-com/cmd/v1/cmd.proto
@@ -35,6 +35,7 @@ service Cmd {
   rpc GetLaunchMeasurement(VMIRequest) returns (LaunchMeasurementResponse) {}
   rpc InjectLaunchSecret(InjectLaunchSecretRequest) returns (Response) {}
   rpc GetAppliedVMIChecksum(EmptyRequest) returns (VMIChecksumResponse) {}
+  rpc MigrationProxy(MigrationProxyRequest) returns (Response);
 }
 
 message QemuVersionResponse {
@@ -211,3 +212,12 @@ message VMIChecksumResponse {
   Response response = 1;
   string checksum = 2;
 }
+
+enum MigrationProxyAction {
+  START = 0;
+  STOP = 1;
+}
+
+message MigrationProxyRequest {
+  MigrationProxyAction action = 1;
+}
\ No newline at end of file
diff --git a/pkg/virt-handler/cmd-client/client.go b/pkg/virt-handler/cmd-client/client.go
index 68213c6456..7f973c9701 100644
--- a/pkg/virt-handler/cmd-client/client.go
+++ b/pkg/virt-handler/cmd-client/client.go
@@ -114,6 +114,7 @@ type LauncherClient interface {
 	InjectLaunchSecret(*v1.VirtualMachineInstance, *v1.SEVSecretOptions) error
 	SyncVirtualMachineMemory(vmi *v1.VirtualMachineInstance, options *cmdv1.VirtualMachineOptions) error
 	GetAppliedVMIChecksum() (string, error)
+	MigrationProxy(action MigrationProxyAction) error
 }
 
 type VirtLauncherClient struct {
@@ -882,3 +883,22 @@ func (c *VirtLauncherClient) GetAppliedVMIChecksum() (string, error) {
 	log.Log.Reason(err).Error("error getting the checksum")
 	return "", errors.New("error getting the checksum")
 }
+
+type MigrationProxyAction int32
+
+const (
+	MigrationProxyActionStart = iota
+	MigrationProxyActionStop
+)
+
+func (c *VirtLauncherClient) MigrationProxy(action MigrationProxyAction) error {
+	request := &cmdv1.MigrationProxyRequest{
+		Action: cmdv1.MigrationProxyAction(action),
+	}
+	ctx, cancel := context.WithTimeout(context.Background(), shortTimeout)
+	defer cancel()
+
+	response, err := c.v1client.MigrationProxy(ctx, request)
+
+	return handleError(err, "MigrationProxy", response)
+}
diff --git a/pkg/virt-handler/migration-proxy/migration-proxy.go b/pkg/virt-handler/migration-proxy/migration-proxy.go
index f3226b06fc..d6538add0a 100644
--- a/pkg/virt-handler/migration-proxy/migration-proxy.go
+++ b/pkg/virt-handler/migration-proxy/migration-proxy.go
@@ -374,7 +374,22 @@ func NewTargetProxy(tcpBindAddress string, tcpBindPort int, serverTLSConfig *tls
 		clientTLSConfig: clientTLSConfig,
 		logger:          log.Log.With("uid", vmiUID).With("outbound", filepath.Base(virtqemudSocketPath)),
 	}
+}
 
+func NewVirtLauncherProxy() *migrationProxy {
+	const (
+		migrationProxySock = "/var/run/kubevirt/migrationproxy/wrap-virtqemud-sock"
+		virtQemudSock      = "/var/run/libvirt/virtqemud-sock"
+	)
+	return &migrationProxy{
+		unixSocketPath: migrationProxySock,
+		targetAddress:  virtQemudSock,
+		targetProtocol: "unix",
+		stopChan:       make(chan struct{}),
+		fdChan:         make(chan net.Conn, 1),
+		listenErrChan:  make(chan error, 1),
+		logger:         log.Log.With("migrationProxySock", migrationProxySock, "virtQemudSock", virtQemudSock, "proxy", "virt-launcher"),
+	}
 }
 
 func (m *migrationProxy) createTcpListener() error {
diff --git a/pkg/virt-handler/vm.go b/pkg/virt-handler/vm.go
index 0e8825cfd2..d29380f8f4 100644
--- a/pkg/virt-handler/vm.go
+++ b/pkg/virt-handler/vm.go
@@ -2643,7 +2643,7 @@ func (d *VirtualMachineController) isMigrationSource(vmi *v1.VirtualMachineInsta
 
 }
 
-func (d *VirtualMachineController) handleTargetMigrationProxy(vmi *v1.VirtualMachineInstance) error {
+func (d *VirtualMachineController) handleTargetMigrationProxy(vmi *v1.VirtualMachineInstance, client cmdclient.LauncherClient) error {
 	// handle starting/stopping target migration proxy
 	migrationTargetSockets := []string{}
 	res, err := d.podIsolationDetector.Detect(vmi)
@@ -2651,8 +2651,10 @@ func (d *VirtualMachineController) handleTargetMigrationProxy(vmi *v1.VirtualMac
 		return err
 	}
 
-	// Get the libvirt connection socket file on the destination pod.
-	socketFile := fmt.Sprintf(filepath.Join(d.virtLauncherFSRunDirPattern, "libvirt/virtqemud-sock"), res.Pid())
+	// Get the virt-launcher migration proxy connection socket file on the destination pod.
+	socketFile := fmt.Sprintf(filepath.Join(d.virtLauncherFSRunDirPattern, "kubevirt/migrationproxy/wrap-virtqemud-sock"), res.Pid())
+	//// Get the libvirt connection socket file on the destination pod.
+	//socketFile := fmt.Sprintf(filepath.Join(d.virtLauncherFSRunDirPattern, "libvirt/virtqemud-sock"), res.Pid())
 	// the migration-proxy is no longer shared via host mount, so we
 	// pass in the virt-launcher's baseDir to reach the unix sockets.
 	baseDir := fmt.Sprintf(filepath.Join(d.virtLauncherFSRunDirPattern, "kubevirt"), res.Pid())
@@ -2666,6 +2668,10 @@ func (d *VirtualMachineController) handleTargetMigrationProxy(vmi *v1.VirtualMac
 		destSocketFile := migrationproxy.SourceUnixFile(baseDir, key)
 		migrationTargetSockets = append(migrationTargetSockets, destSocketFile)
 	}
+	err = d.StartMigrationProxyInVirtLauncher(client)
+	if err != nil {
+		return err
+	}
 	err = d.migrationProxy.StartTargetListener(string(vmi.UID), migrationTargetSockets)
 	if err != nil {
 		return err
@@ -2673,11 +2679,21 @@ func (d *VirtualMachineController) handleTargetMigrationProxy(vmi *v1.VirtualMac
 	return nil
 }
 
-func (d *VirtualMachineController) handlePostMigrationProxyCleanup(vmi *v1.VirtualMachineInstance) {
+func (d *VirtualMachineController) handlePostMigrationProxyCleanup(vmi *v1.VirtualMachineInstance) error {
 	if vmi.Status.MigrationState == nil || vmi.Status.MigrationState.Completed || vmi.Status.MigrationState.Failed {
+		if !d.isMigrationSource(vmi) {
+			client, err := d.getLauncherClient(vmi)
+			if err != nil {
+				return fmt.Errorf("failed to get lacunher client")
+			}
+			if err = d.StopMigrationProxyInVirtLauncher(client); err != nil {
+				return fmt.Errorf("failed to stop migration proxy in virt launcher")
+			}
+		}
 		d.migrationProxy.StopTargetListener(string(vmi.UID))
 		d.migrationProxy.StopSourceListener(string(vmi.UID))
 	}
+	return nil
 }
 
 func (d *VirtualMachineController) handleSourceMigrationProxy(vmi *v1.VirtualMachineInstance) error {
@@ -2968,7 +2984,7 @@ func (d *VirtualMachineController) vmUpdateHelperMigrationTarget(origVMI *v1.Vir
 	}
 	d.recorder.Event(vmi, k8sv1.EventTypeNormal, v1.PreparingTarget.String(), "VirtualMachineInstance Migration Target Prepared.")
 
-	err = d.handleTargetMigrationProxy(vmi)
+	err = d.handleTargetMigrationProxy(vmi, client)
 	if err != nil {
 		return fmt.Errorf("failed to handle post sync migration proxy: %v", err)
 	}
@@ -3405,7 +3421,9 @@ func (d *VirtualMachineController) processVmUpdate(vmi *v1.VirtualMachineInstanc
 		return goerror.New(fmt.Sprintf("Can not update a VirtualMachineInstance with unresponsive command server."))
 	}
 
-	d.handlePostMigrationProxyCleanup(vmi)
+	if err = d.handlePostMigrationProxyCleanup(vmi); err != nil {
+		return err
+	}
 
 	if d.isPreMigrationTarget(vmi) {
 		return d.vmUpdateHelperMigrationTarget(vmi)
@@ -3913,3 +3931,11 @@ func (d *VirtualMachineController) HotplugHostDevices(client cmdclient.LauncherC
 	d.checksumCtrl.Set(control)
 	return nil
 }
+
+func (d *VirtualMachineController) StartMigrationProxyInVirtLauncher(client cmdclient.LauncherClient) error {
+	return client.MigrationProxy(cmdclient.MigrationProxyActionStart)
+}
+
+func (d *VirtualMachineController) StopMigrationProxyInVirtLauncher(client cmdclient.LauncherClient) error {
+	return client.MigrationProxy(cmdclient.MigrationProxyActionStop)
+}
diff --git a/pkg/virt-launcher/virtwrap/cmd-server/server.go b/pkg/virt-launcher/virtwrap/cmd-server/server.go
index 2be5af2eb3..0612e653a6 100644
--- a/pkg/virt-launcher/virtwrap/cmd-server/server.go
+++ b/pkg/virt-launcher/virtwrap/cmd-server/server.go
@@ -27,7 +27,6 @@ import (
 	"time"
 
 	"google.golang.org/grpc"
-
 	"k8s.io/apimachinery/pkg/util/json"
 
 	v1 "kubevirt.io/api/core/v1"
@@ -753,6 +752,36 @@ func (l *Launcher) GetAppliedVMIChecksum(_ context.Context, _ *cmdv1.EmptyReques
 	return response, nil
 }
 
+func (l *Launcher) MigrationProxy(_ context.Context, req *cmdv1.MigrationProxyRequest) (*cmdv1.Response, error) {
+	response := &cmdv1.Response{
+		Success: true,
+	}
+	if req == nil {
+		response.Success = false
+		response.Message = getErrorMessage(fmt.Errorf("nil request"))
+		return response, nil
+	}
+
+	switch req.Action {
+	case cmdv1.MigrationProxyAction_START:
+		response.Message = "Migration proxy was started"
+	case cmdv1.MigrationProxyAction_STOP:
+		response.Message = "Migration proxy was stopped"
+	default:
+		response.Success = false
+		response.Message = getErrorMessage(fmt.Errorf("unsupported action %d", req.Action))
+		return response, nil
+	}
+
+	if err := l.domainManager.MigrationProxy(req.GetAction()); err != nil {
+		response.Success = false
+		response.Message = getErrorMessage(err)
+		return response, nil
+	}
+
+	return response, nil
+}
+
 func ReceivedEarlyExitSignal() bool {
 	_, earlyExit := os.LookupEnv(receivedEarlyExitSignalEnvVar)
 	return earlyExit
diff --git a/pkg/virt-launcher/virtwrap/manager.go b/pkg/virt-launcher/virtwrap/manager.go
index c6e675d1b8..200ec52e90 100644
--- a/pkg/virt-launcher/virtwrap/manager.go
+++ b/pkg/virt-launcher/virtwrap/manager.go
@@ -44,6 +44,7 @@ import (
 
 	"kubevirt.io/kubevirt/pkg/util/checksum"
 	"kubevirt.io/kubevirt/pkg/util/syncobject"
+	migrationproxy "kubevirt.io/kubevirt/pkg/virt-handler/migration-proxy"
 	virtcache "kubevirt.io/kubevirt/tools/cache"
 
 	"k8s.io/utils/pointer"
@@ -148,6 +149,7 @@ type DomainManager interface {
 	InjectLaunchSecret(*v1.VirtualMachineInstance, *v1.SEVSecretOptions) error
 	UpdateGuestMemory(vmi *v1.VirtualMachineInstance) error
 	GetAppliedVMIChecksum() string
+	MigrationProxy(action cmdv1.MigrationProxyAction) error
 }
 
 type LibvirtDomainManager struct {
@@ -180,9 +182,49 @@ type LibvirtDomainManager struct {
 	metadataCache    *metadata.Cache
 	domainStatsCache *virtcache.TimeDefinedCache[*stats.DomainStats]
 
-	checksum syncobject.SyncObject[string]
-
+	checksum                   syncobject.SyncObject[string]
 	rebootShutdownPolicyWasSet bool
+	migrationProxy             *migrationProxyManager
+}
+
+type migrationProxyManager struct {
+	started        bool
+	mu             sync.Mutex
+	migrationProxy migrationproxy.MigrationProxyListener
+}
+
+func (m *migrationProxyManager) Start() error {
+	m.mu.Lock()
+	defer m.mu.Unlock()
+	if m.started {
+		return nil
+	}
+	m.migrationProxy = migrationproxy.NewVirtLauncherProxy()
+	err := m.migrationProxy.Start()
+	if err != nil {
+		m.migrationProxy.Stop()
+		m.reset()
+		return fmt.Errorf("failed to start migration proxy in virt-launcher")
+	}
+	m.started = true
+	return nil
+}
+
+func (m *migrationProxyManager) Stop() {
+	m.mu.Lock()
+	defer m.mu.Unlock()
+	if !m.started {
+		return
+	}
+	if m.migrationProxy != nil {
+		m.migrationProxy.Stop()
+	}
+	m.reset()
+}
+
+func (m *migrationProxyManager) reset() {
+	m.migrationProxy = nil
+	m.started = false
 }
 
 type pausedVMIs struct {
@@ -230,7 +272,8 @@ func newLibvirtDomainManager(connection cli.Connection, virtShareDir, ephemeralD
 		migrateInfoStats:         &stats.DomainJobInfo{},
 		metadataCache:            metadataCache,
 
-		checksum: syncobject.NewSyncObject[string](),
+		checksum:       syncobject.NewSyncObject[string](),
+		migrationProxy: &migrationProxyManager{},
 	}
 
 	manager.hotplugHostDevicesInProgress = make(chan struct{}, maxConcurrentHotplugHostDevices)
@@ -2412,3 +2455,15 @@ func (l *LibvirtDomainManager) setRebootShutdownPolicy(dom cli.VirDomain) error
 	l.rebootShutdownPolicyWasSet = true
 	return nil
 }
+
+func (l *LibvirtDomainManager) MigrationProxy(action cmdv1.MigrationProxyAction) error {
+	switch action {
+	case cmdv1.MigrationProxyAction_START:
+		return l.migrationProxy.Start()
+	case cmdv1.MigrationProxyAction_STOP:
+		l.migrationProxy.Stop()
+		return nil
+	default:
+		return fmt.Errorf("unsupported action %d", action)
+	}
+}
diff --git a/pkg/virt-launcher/virtwrap/util/libvirt_helper.go b/pkg/virt-launcher/virtwrap/util/libvirt_helper.go
index 99ce4370f6..34e8229cad 100644
--- a/pkg/virt-launcher/virtwrap/util/libvirt_helper.go
+++ b/pkg/virt-launcher/virtwrap/util/libvirt_helper.go
@@ -220,6 +220,7 @@ func (l LibvirtWrapper) StartVirtquemud(stopChan chan struct{}) {
 			exitChan := make(chan struct{})
 			args := []string{"-f", "/var/run/libvirt/virtqemud.conf", "--no-admin-srv", "--no-ro-srv"}
 			cmd := exec.Command("/usr/sbin/virtqemud", args...)
+			cmd.Env = append(cmd.Env, fmt.Sprintf("LIBVIRT_UNIX_SOCKET_AUTH_PID=%d", os.Getpid()))
 			if l.user != 0 {
 				cmd.SysProcAttr = &syscall.SysProcAttr{
 					AmbientCaps: []uintptr{unix.CAP_NET_BIND_SERVICE},
