diff --git a/pkg/instancetype/instancetype.go b/pkg/instancetype/instancetype.go
index 6860766acd..127ea05475 100644
--- a/pkg/instancetype/instancetype.go
+++ b/pkg/instancetype/instancetype.go
@@ -553,6 +553,8 @@ func (m *InstancetypeMethods) ApplyToVmi(field *k8sfield.Path, instancetypeSpec
 		conflicts = append(conflicts, applyInstanceTypeAnnotations(instancetypeSpec.Annotations, vmiMetadata)...)
 	}
 
+	vmiSpec.Domain.Firmware.Bootloader.BIOS.UseSerial = pointer.P(true)
+
 	if preferenceSpec != nil {
 		// By design Preferences can't conflict with the VMI so we don't return any
 		applyCPUPreferences(preferenceSpec, vmiSpec)
diff --git a/pkg/virt-launcher/virtwrap/converter/converter.go b/pkg/virt-launcher/virtwrap/converter/converter.go
index 0565ceb5dd..fae3f33aca 100644
--- a/pkg/virt-launcher/virtwrap/converter/converter.go
+++ b/pkg/virt-launcher/virtwrap/converter/converter.go
@@ -1230,6 +1230,10 @@ func Convert_v1_Firmware_To_related_apis(vmi *v1.VirtualMachineInstance, domain
 				UseSerial: "yes",
 			}
 		}
+
+		domain.Spec.OS.BIOS = &api.BIOS{
+			UseSerial: "yes",
+		}
 	}
 
 	if len(firmware.Serial) > 0 {
