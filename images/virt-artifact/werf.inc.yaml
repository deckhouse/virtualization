---
# Source https://github.com/kubevirt/kubevirt/blob/v1.3.1/hack/dockerized#L15
{{- $version := "1.3.1" }}
{{- $goVersion := "1.22.7" }}
{{- $gitRepoUrl := "kubevirt/kubevirt.git" }}

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
packages:
- git
- curl
- pkg-config
- libvirt-libs
- libtool
- libvirt-devel
- libncurses-devel
- libvirt-client
- libvirt-daemon
- libvirt
- gcc
- gcc-c++
- glibc-devel-static
- glibc
- golang
{{- end -}}

{{ $virtArtifactDependencies := include "$name" . | fromYaml }}

image: {{ $.ImageName }}
final: false
fromImage: base-alt-p11
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO }}
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
git:
  - add: /images/{{ $.ImageName }}
    to: /
    stageDependencies:
      install:
      - '**/*'
    includePaths:
    - patches
    excludePaths:
    - patches/README.md
shell:
  beforeInstall:
    - |
      {{- include "alt packages proxy" . | nindent 2 }}
      apt-get update
      apt-get install -y \
        {{ $virtArtifactDependencies.packages | join " " }}
      apt-get clean
      rm --recursive --force /var/lib/apt/lists/ftp.altlinux.org* /var/cache/apt/*.bin

  install:
    - |
      mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

      git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch v{{ $version }} /kubevirt
      
    - |
      cd /kubevirt
      for p in /patches/*.patch ; do
        echo -n "Apply ${p} ... "
        git apply  --ignore-space-change --ignore-whitespace ${p} && echo OK || (echo FAIL ; exit 1)
      done
      go mod edit -go={{ $goVersion }}
      go mod download
    - |
      go get github.com/opencontainers/runc@v1.1.14
      go get github.com/containers/common@v0.60.4

      go get github.com/go-openapi/strfmt@v0.23.0
      go get github.com/onsi/gomega/matchers/support/goraph/bipartitegraph@v1.34.1
      go get github.com/cilium/ebpf/btf@v0.11.0
      go get github.com/cilium/ebpf/internal@v0.11.0

      go get golang.org/x/crypto@v0.31.0

      go mod vendor

  setup:
    - mkdir /kubevirt-binaries
    - mkdir /kubevirt-config-files
    - cd /kubevirt

    - echo "Create .version file"
    - echo "v{{ $version }}-dirty" > /kubevirt-config-files/.version

    - echo "Create group file"
    - |
      GROUP_FILE=/kubevirt-config-files/group
      echo "qemu:x:107:" > $GROUP_FILE
      echo "root:x:0:" >> $GROUP_FILE
      echo "nonroot-user:x:1001:" >> $GROUP_FILE
      chmod 0644 $GROUP_FILE

    - echo "Create passwd file"
    - |
      PASSWD_FILE=/kubevirt-config-files/passwd
      echo "qemu:x:107:107:user:/home/qemu:/bin/bash" > $PASSWD_FILE
      echo "root:x:0:0:root:/root:/bin/bash" >> $PASSWD_FILE
      echo "nonroot-user:x:1001:1001::/home/nonroot-user:/bin/bash" >> $PASSWD_FILE
      chmod 0644 $PASSWD_FILE

    - export GO111MODULE=on
    - export GOOS=linux
    - export CGO_ENABLED=0
    - export GOARCH=amd64

    - echo ============== Build container-disk ===================
    - gcc -static cmd/container-disk-v2alpha/main.c -o /kubevirt-binaries/container-disk

    - echo ============== Build virt-launcher ====================
    - CGO_ENABLED=1 go build -ldflags="-s -w" -o /kubevirt-binaries/virt-launcher ./cmd/virt-launcher/

    - echo ============== Build virt-handler =====================
    - CGO_ENABLED=1 go build -ldflags="-s -w" -o /kubevirt-binaries/virt-handler ./cmd/virt-handler/

    - echo ============== Build virt-launcher-monitor ============
    # virt-launcher-monitor is wrapped in the final image. Add suffix here to prevent image size increasing as effect of file renaming.
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-launcher-monitor ./cmd/virt-launcher-monitor/

    - echo ============== Build virt-tail ========================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-tail ./cmd/virt-tail/

    - echo ============== Build virt-freezer =====================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-freezer ./cmd/virt-freezer/

    - echo ============== Build virt-probe =======================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-probe ./cmd/virt-probe/

    - echo ============== Build virt-api =========================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-api ./cmd/virt-api/
    - chown 64535:64535 /kubevirt-binaries/virt-api

    - echo ============== Build virt-chroot ======================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-chroot ./cmd/virt-chroot/

    - echo ============== Build virt-exportproxy =================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-exportproxy ./cmd/virt-exportproxy/

    - echo ============== Build virt-exportserver ================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-exportserver ./cmd/virt-exportserver/

    - echo ============== Build virt-controller ==================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-controller ./cmd/virt-controller/
    - chown 64535:64535 /kubevirt-binaries/virt-api

    - echo ============== Build virt-operator ====================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virt-operator ./cmd/virt-operator/

    - echo ============== Build sidecars =========================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/sidecars ./cmd/sidecars/

    - echo ============== Build virtctl ==========================
    - go build -ldflags="-s -w" -o /kubevirt-binaries/virtctl ./cmd/virtctl/
