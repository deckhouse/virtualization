diff --git a/cmd/cdi-controller/controller.go b/cmd/cdi-controller/controller.go
index a8fdfb6b5..74fdd5210 100644
--- a/cmd/cdi-controller/controller.go
+++ b/cmd/cdi-controller/controller.go
@@ -36,6 +36,7 @@ import (
 	"sigs.k8s.io/controller-runtime/pkg/log/zap"
 	"sigs.k8s.io/controller-runtime/pkg/manager"
 	"sigs.k8s.io/controller-runtime/pkg/manager/signals"
+	metricsserver "sigs.k8s.io/controller-runtime/pkg/metrics/server"
 
 	cdiv1 "kubevirt.io/containerized-data-importer-api/pkg/apis/core/v1beta1"
 	forklift "kubevirt.io/containerized-data-importer-api/pkg/apis/forklift/v1beta1"
@@ -58,6 +59,7 @@ const (
 var (
 	kubeconfig             string
 	kubeURL                string
+	metricsBindAddress     string
 	importerImage          string
 	clonerImage            string
 	uploadServerImage      string
@@ -98,6 +100,7 @@ type ControllerEnvs struct {
 func init() {
 	// flags
 	flag.StringVar(&kubeURL, "server", "", "(Optional) URL address of a remote api server.  Do not set for local clusters.")
+	flag.StringVar(&metricsBindAddress, "metrics_address", ":8080", "(Optional) URL address of a metrics server.")
 	klog.InitFlags(nil)
 	flag.Parse()
 
@@ -199,6 +202,9 @@ func start() {
 		LeaderElectionResourceLock: "leases",
 		Cache:                      getCacheOptions(apiClient, namespace),
 		Scheme:                     scheme,
+		Metrics:                    metricsserver.Options{
+			BindAddress: metricsBindAddress,
+		},
 	}
 
 	cfg = config.GetConfigOrDie()
diff --git a/cmd/cdi-operator/operator.go b/cmd/cdi-operator/operator.go
index 90049f649..a9eab1454 100644
--- a/cmd/cdi-operator/operator.go
+++ b/cmd/cdi-operator/operator.go
@@ -38,6 +38,7 @@ import (
 	"sigs.k8s.io/controller-runtime/pkg/log/zap"
 	"sigs.k8s.io/controller-runtime/pkg/manager"
 	"sigs.k8s.io/controller-runtime/pkg/manager/signals"
+	metricsserver "sigs.k8s.io/controller-runtime/pkg/metrics/server"
 
 	cdiv1 "kubevirt.io/containerized-data-importer-api/pkg/apis/core/v1beta1"
 	"kubevirt.io/containerized-data-importer/pkg/operator/controller"
@@ -45,6 +46,7 @@ import (
 )
 
 var log = logf.Log.WithName("cmd")
+var metricsBindAddress string
 
 func printVersion() {
 	log.Info(fmt.Sprintf("Go Version: %s", runtime.Version()))
@@ -52,6 +54,7 @@ func printVersion() {
 }
 
 func main() {
+	flag.StringVar(&metricsBindAddress, "metrics_address", ":8080", "(Optional) URL address of a metrics server.")
 	flag.Parse()
 
 	defVerbose := fmt.Sprintf("%d", 1) // note flag values are strings
@@ -97,6 +100,9 @@ func main() {
 		LeaderElectionNamespace:    namespace,
 		LeaderElectionID:           "cdi-operator-leader-election-helper",
 		LeaderElectionResourceLock: "leases",
+		Metrics:                    metricsserver.Options{
+			BindAddress: metricsBindAddress,
+		},
 	}
 
 	// Create a new Manager to provide shared dependencies and start components
diff --git a/pkg/operator/resources/namespaced/controller.go b/pkg/operator/resources/namespaced/controller.go
index 665a4517b..53ff9154b 100644
--- a/pkg/operator/resources/namespaced/controller.go
+++ b/pkg/operator/resources/namespaced/controller.go
@@ -383,7 +383,7 @@ func createPrometheusService() *corev1.Service {
 			Port: 8080,
 			TargetPort: intstr.IntOrString{
 				Type:   intstr.String,
-				StrVal: "metrics",
+				StrVal: "https-metrics",
 			},
 			Protocol: corev1.ProtocolTCP,
 		},
