diff --git a/cmd/cdi-apiserver/apiserver.go b/cmd/cdi-apiserver/apiserver.go
index 4a57ac143..72839039d 100644
--- a/cmd/cdi-apiserver/apiserver.go
+++ b/cmd/cdi-apiserver/apiserver.go
@@ -30,6 +30,7 @@ import (
 	"github.com/pkg/errors"

 	corev1 "k8s.io/api/core/v1"
+	apiruntime "k8s.io/apimachinery/pkg/runtime"
 	utilruntime "k8s.io/apimachinery/pkg/util/runtime"
 	"k8s.io/client-go/kubernetes"
 	"k8s.io/client-go/kubernetes/scheme"
@@ -119,6 +120,7 @@ func main() {
 	if err != nil {
 		klog.Fatalf("Unable to get kube config: %v\n", errors.WithStack(err))
 	}
+	cfg.ContentType = apiruntime.ContentTypeJSON

 	client, err := kubernetes.NewForConfig(cfg)
 	if err != nil {
diff --git a/cmd/cdi-controller/controller.go b/cmd/cdi-controller/controller.go
index b835b06e3..a8fdfb6b5 100644
--- a/cmd/cdi-controller/controller.go
+++ b/cmd/cdi-controller/controller.go
@@ -166,6 +166,7 @@ func start() {
 	if err != nil {
 		klog.Fatalf("Unable to get kube config: %v\n", errors.WithStack(err))
 	}
+	cfg.ContentType = apiruntime.ContentTypeJSON

 	k8sClient, err := kubernetes.NewForConfig(cfg)
 	if err != nil {
@@ -200,7 +201,9 @@ func start() {
 		Scheme:                     scheme,
 	}

-	mgr, err := manager.New(config.GetConfigOrDie(), opts)
+	cfg = config.GetConfigOrDie()
+	cfg.ContentType = apiruntime.ContentTypeJSON
+	mgr, err := manager.New(cfg, opts)
 	if err != nil {
 		klog.Errorf("Unable to setup controller manager: %v", err)
 		os.Exit(1)
diff --git a/cmd/cdi-operator/operator.go b/cmd/cdi-operator/operator.go
index dfbc71f87..0ec912f79 100644
--- a/cmd/cdi-operator/operator.go
+++ b/cmd/cdi-operator/operator.go
@@ -30,6 +30,7 @@ import (
 	"go.uber.org/zap/zapcore"

 	extv1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
+	apiruntime "k8s.io/apimachinery/pkg/runtime"
 	apiregistrationv1 "k8s.io/kube-aggregator/pkg/apis/apiregistration/v1"

 	"sigs.k8s.io/controller-runtime/pkg/cache"
@@ -85,6 +86,7 @@ func main() {
 		log.Error(err, "")
 		os.Exit(1)
 	}
+	cfg.ContentType = apiruntime.ContentTypeJSON

 	managerOpts := manager.Options{
 		Cache: cache.Options{
diff --git a/cmd/cdi-uploadproxy/uploadproxy.go b/cmd/cdi-uploadproxy/uploadproxy.go
index bf63d0e30..be024f889 100644
--- a/cmd/cdi-uploadproxy/uploadproxy.go
+++ b/cmd/cdi-uploadproxy/uploadproxy.go
@@ -8,6 +8,7 @@ import (
 	"github.com/kelseyhightower/envconfig"
 	"github.com/pkg/errors"

+	apiruntime "k8s.io/apimachinery/pkg/runtime"
 	"k8s.io/client-go/kubernetes"
 	"k8s.io/client-go/tools/clientcmd"
 	"k8s.io/klog/v2"
@@ -81,6 +82,8 @@ func main() {
 	if err != nil {
 		klog.Fatalf("Unable to get kube config: %v\n", errors.WithStack(err))
 	}
+	cfg.ContentType = apiruntime.ContentTypeJSON
+
 	client, err := kubernetes.NewForConfig(cfg)
 	if err != nil {
 		klog.Fatalf("Unable to get kube client: %v\n", errors.WithStack(err))
