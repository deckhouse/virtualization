diff --git a/pkg/operator/controller/callbacks.go b/pkg/operator/controller/callbacks.go
index a2d054fcc..06ea5d13e 100644
--- a/pkg/operator/controller/callbacks.go
+++ b/pkg/operator/controller/callbacks.go
@@ -388,7 +388,7 @@ func reconcilePvcMutatingWebhook(args *callbacks.ReconcileCallbackArgs) error {
 	}
 
 	whc := &admissionregistrationv1.MutatingWebhookConfiguration{}
-	key := client.ObjectKey{Name: "cdi-api-pvc-mutate"}
+	key := client.ObjectKey{Name: "cdi-internal-virtualization-api-pvc-mutate"}
 	err = args.Client.Get(context.TODO(), key, whc)
 	if err != nil && !errors.IsNotFound(err) {
 		return err
@@ -432,7 +432,7 @@ func initPvcMutatingWebhook(whc *admissionregistrationv1.MutatingWebhookConfigur
 	sideEffect := admissionregistrationv1.SideEffectClassNone
 	bundle := cluster.GetAPIServerCABundle(args.Namespace, args.Client, args.Logger)
 
-	whc.Name = "cdi-api-pvc-mutate"
+	whc.Name = "cdi-internal-virtualization-api-pvc-mutate"
 	whc.Labels = map[string]string{utils.CDILabel: cluster.APIServerServiceName}
 	whc.Webhooks = []admissionregistrationv1.MutatingWebhook{
 		{
diff --git a/pkg/operator/resources/cluster/apiserver.go b/pkg/operator/resources/cluster/apiserver.go
index fb0a22f08..209b0ca1f 100644
--- a/pkg/operator/resources/cluster/apiserver.go
+++ b/pkg/operator/resources/cluster/apiserver.go
@@ -294,7 +294,7 @@ func createDataImportCronValidatingWebhook(namespace string, c client.Client, l
 			Kind:       "ValidatingWebhookConfiguration",
 		},
 		ObjectMeta: metav1.ObjectMeta{
-			Name: "cdi-api-dataimportcron-validate",
+			Name: "cdi-internal-virtualization-api-dataimportcron-validate",
 			Labels: map[string]string{
 				utils.CDILabel: APIServerServiceName,
 			},
@@ -361,7 +361,7 @@ func createPopulatorsValidatingWebhook(namespace string, c client.Client, l logr
 			Kind:       "ValidatingWebhookConfiguration",
 		},
 		ObjectMeta: metav1.ObjectMeta{
-			Name: "cdi-api-populator-validate",
+			Name: "cdi-internal-virtualization-api-populator-validate",
 			Labels: map[string]string{
 				utils.CDILabel: APIServerServiceName,
 			},
@@ -428,7 +428,7 @@ func createDataVolumeValidatingWebhook(namespace string, c client.Client, l logr
 			Kind:       "ValidatingWebhookConfiguration",
 		},
 		ObjectMeta: metav1.ObjectMeta{
-			Name: "cdi-api-datavolume-validate",
+			Name: "cdi-internal-virtualization-api-datavolume-validate",
 			Labels: map[string]string{
 				utils.CDILabel: APIServerServiceName,
 			},
@@ -495,7 +495,7 @@ func createCDIValidatingWebhook(namespace string, c client.Client, l logr.Logger
 			Kind:       "ValidatingWebhookConfiguration",
 		},
 		ObjectMeta: metav1.ObjectMeta{
-			Name: "cdi-api-validate",
+			Name: "cdi-internal-virtualization-api-validate",
 			Labels: map[string]string{
 				utils.CDILabel: APIServerServiceName,
 			},
@@ -564,7 +564,7 @@ func createObjectTransferValidatingWebhook(namespace string, c client.Client, l
 			Kind:       "ValidatingWebhookConfiguration",
 		},
 		ObjectMeta: metav1.ObjectMeta{
-			Name: "objecttransfer-api-validate",
+			Name: "cdi-internal-virtualization-objecttransfer-api-validate",
 			Labels: map[string]string{
 				utils.CDILabel: APIServerServiceName,
 			},
@@ -637,7 +637,7 @@ func createDataVolumeMutatingWebhook(namespace string, c client.Client, l logr.L
 			Kind:       "MutatingWebhookConfiguration",
 		},
 		ObjectMeta: metav1.ObjectMeta{
-			Name: "cdi-api-datavolume-mutate",
+			Name: "cdi-internal-virtualization-api-datavolume-mutate",
 			Labels: map[string]string{
 				utils.CDILabel: APIServerServiceName,
 			},
@@ -706,10 +706,12 @@ func GetAPIServerCABundle(namespace string, c client.Client, l logr.Logger) []by
 	return nil
 }
 
+const apiServerWrapName = "cdi-internal-virtualization-apiserver"
+
 func createAPIServerClusterRoleBinding(namespace string) *rbacv1.ClusterRoleBinding {
-	return utils.ResourceBuilder.CreateClusterRoleBinding(common.CDIApiServerResourceName, common.CDIApiServerResourceName, common.CDIApiServerResourceName, namespace)
+	return utils.ResourceBuilder.CreateClusterRoleBinding(apiServerWrapName, apiServerWrapName, common.CDIApiServerResourceName, namespace)
 }
 
 func createAPIServerClusterRole() *rbacv1.ClusterRole {
-	return utils.ResourceBuilder.CreateClusterRole(common.CDIApiServerResourceName, getAPIServerClusterPolicyRules())
+	return utils.ResourceBuilder.CreateClusterRole(apiServerWrapName, getAPIServerClusterPolicyRules())
 }
diff --git a/pkg/operator/resources/cluster/controller.go b/pkg/operator/resources/cluster/controller.go
index 2760dd201..8682a4b60 100644
--- a/pkg/operator/resources/cluster/controller.go
+++ b/pkg/operator/resources/cluster/controller.go
@@ -27,6 +27,9 @@ import (
 const (
 	controllerServiceAccountName = "cdi-sa"
 	controlerClusterRoleName     = "cdi"
+
+	wrapServiceAccountName = "cdi-internal-virtualization-sa"
+	wrapClusterRoleName    = "cdi-internal-virtualization"
 )
 
 func createControllerResources(args *FactoryArgs) []client.Object {
@@ -37,7 +40,7 @@ func createControllerResources(args *FactoryArgs) []client.Object {
 }
 
 func createControllerClusterRoleBinding(namespace string) *rbacv1.ClusterRoleBinding {
-	return utils.ResourceBuilder.CreateClusterRoleBinding(controllerServiceAccountName, controlerClusterRoleName, controllerServiceAccountName, namespace)
+	return utils.ResourceBuilder.CreateClusterRoleBinding(wrapServiceAccountName, wrapClusterRoleName, controllerServiceAccountName, namespace)
 }
 
 func getControllerClusterPolicyRules() []rbacv1.PolicyRule {
@@ -284,5 +287,5 @@ func getControllerClusterPolicyRules() []rbacv1.PolicyRule {
 }
 
 func createControllerClusterRole() *rbacv1.ClusterRole {
-	return utils.ResourceBuilder.CreateClusterRole(controlerClusterRoleName, getControllerClusterPolicyRules())
+	return utils.ResourceBuilder.CreateClusterRole(wrapClusterRoleName, getControllerClusterPolicyRules())
 }
diff --git a/pkg/operator/resources/cluster/cronjob.go b/pkg/operator/resources/cluster/cronjob.go
index 57bf15e27..659faa8a2 100644
--- a/pkg/operator/resources/cluster/cronjob.go
+++ b/pkg/operator/resources/cluster/cronjob.go
@@ -50,10 +50,12 @@ func getCronJobClusterPolicyRules() []rbacv1.PolicyRule {
 	}
 }
 
+const cronJobWrapName = "cdi-internal-virtualization-cronjob"
+
 func createCronJobClusterRoleBinding(namespace string) *rbacv1.ClusterRoleBinding {
-	return utils.ResourceBuilder.CreateClusterRoleBinding(common.CDICronJobResourceName, common.CDICronJobResourceName, common.CDICronJobResourceName, namespace)
+	return utils.ResourceBuilder.CreateClusterRoleBinding(cronJobWrapName, cronJobWrapName, common.CDICronJobResourceName, namespace)
 }
 
 func createCronJobClusterRole() *rbacv1.ClusterRole {
-	return utils.ResourceBuilder.CreateClusterRole(common.CDICronJobResourceName, getCronJobClusterPolicyRules())
+	return utils.ResourceBuilder.CreateClusterRole(cronJobWrapName, getCronJobClusterPolicyRules())
 }
diff --git a/pkg/operator/resources/cluster/rbac.go b/pkg/operator/resources/cluster/rbac.go
index 59a9899ea..595152b52 100644
--- a/pkg/operator/resources/cluster/rbac.go
+++ b/pkg/operator/resources/cluster/rbac.go
@@ -27,11 +27,11 @@ import (
 
 func createAggregateClusterRoles(_ *FactoryArgs) []client.Object {
 	return []client.Object{
-		utils.ResourceBuilder.CreateAggregateClusterRole("cdi.kubevirt.io:admin", "admin", getAdminPolicyRules()),
-		utils.ResourceBuilder.CreateAggregateClusterRole("cdi.kubevirt.io:edit", "edit", getEditPolicyRules()),
-		utils.ResourceBuilder.CreateAggregateClusterRole("cdi.kubevirt.io:view", "view", getViewPolicyRules()),
-		createConfigReaderClusterRole("cdi.kubevirt.io:config-reader"),
-		createConfigReaderClusterRoleBinding("cdi.kubevirt.io:config-reader"),
+		utils.ResourceBuilder.CreateAggregateClusterRole("cdi.internal.virtualization.deckhouse.io:admin", "admin", getAdminPolicyRules()),
+		utils.ResourceBuilder.CreateAggregateClusterRole("cdi.internal.virtualization.deckhouse.io:edit", "edit", getEditPolicyRules()),
+		utils.ResourceBuilder.CreateAggregateClusterRole("cdi.internal.virtualization.deckhouse.io:view", "view", getViewPolicyRules()),
+		createConfigReaderClusterRole("cdi.internal.virtualization.deckhouse.io:config-reader"),
+		createConfigReaderClusterRoleBinding("cdi.internal.virtualization.deckhouse.io:config-reader"),
 	}
 }
 
diff --git a/pkg/operator/resources/cluster/uploadproxy.go b/pkg/operator/resources/cluster/uploadproxy.go
index 6a5a95c11..f4b90bca0 100644
--- a/pkg/operator/resources/cluster/uploadproxy.go
+++ b/pkg/operator/resources/cluster/uploadproxy.go
@@ -48,10 +48,12 @@ func getUploadProxyClusterPolicyRules() []rbacv1.PolicyRule {
 	}
 }
 
+const uploadProxyWrapName = "cdi-internal-virtualization-uploadproxy"
+
 func createUploadProxyClusterRoleBinding(namespace string) *rbacv1.ClusterRoleBinding {
-	return utils.ResourceBuilder.CreateClusterRoleBinding(common.CDIUploadProxyResourceName, common.CDIUploadProxyResourceName, common.CDIUploadProxyResourceName, namespace)
+	return utils.ResourceBuilder.CreateClusterRoleBinding(uploadProxyWrapName, uploadProxyWrapName, common.CDIUploadProxyResourceName, namespace)
 }
 
 func createUploadProxyClusterRole() *rbacv1.ClusterRole {
-	return utils.ResourceBuilder.CreateClusterRole(common.CDIUploadProxyResourceName, getUploadProxyClusterPolicyRules())
+	return utils.ResourceBuilder.CreateClusterRole(uploadProxyWrapName, getUploadProxyClusterPolicyRules())
 }
diff --git a/pkg/operator/resources/operator/operator.go b/pkg/operator/resources/operator/operator.go
index b9b4ea2cb..ff803b39f 100644
--- a/pkg/operator/resources/operator/operator.go
+++ b/pkg/operator/resources/operator/operator.go
@@ -130,11 +130,11 @@ func getClusterPolicyRules() []rbacv1.PolicyRule {
 				"validatingwebhookconfigurations",
 			},
 			ResourceNames: []string{
-				"cdi-api-dataimportcron-validate",
-				"cdi-api-populator-validate",
-				"cdi-api-datavolume-validate",
-				"cdi-api-validate",
-				"objecttransfer-api-validate",
+				"cdi-internal-virtualization-api-dataimportcron-validate",
+				"cdi-internal-virtualization-api-populator-validate",
+				"cdi-internal-virtualization-api-datavolume-validate",
+				"cdi-internal-virtualization-api-validate",
+				"cdi-internal-virtualization-objecttransfer-api-validate",
 			},
 			Verbs: []string{
 				"get",
@@ -150,8 +150,8 @@ func getClusterPolicyRules() []rbacv1.PolicyRule {
 				"mutatingwebhookconfigurations",
 			},
 			ResourceNames: []string{
-				"cdi-api-datavolume-mutate",
-				"cdi-api-pvc-mutate",
+				"cdi-internal-virtualization-api-datavolume-mutate",
+				"cdi-internal-virtualization-api-pvc-mutate",
 			},
 			Verbs: []string{
 				"get",
