---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}
fromImage: {{ .ModuleNamePrefix }}distroless
git:
  {{- include "image mount points" . }}
import:
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-bins
  add: /relocate
  to: /
  before: setup
imageSpec:
  config:
    entrypoint: ["/usr/bin/cloner-startup"]
    user: 64535
---
{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
binaries:
- /usr/bin/cloner-startup
- /usr/bin/hello
- /usr/bin/cdi-cloner
{{- end -}}

{{ $virtCDIClonerDependencies := include "$name" . | fromYaml }}

image: {{ .ModuleNamePrefix }}{{ .ImageName }}-bins
final: false
fromImage: {{ .ModuleNamePrefix }}base-alt-p11-binaries
import:
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-gobuild
  add: /cdi-binaries
  to: /usr/bin
  includePaths:
  - cloner-startup
  before: install
- image: {{ .ModuleNamePrefix }}cdi-artifact-cbuilder
  add: /bins
  to: /usr/bin
  before: install
  includePaths:
  - hello
- image: {{ .ModuleNamePrefix }}cdi-artifact
  add: /cdi-binaries
  to: /usr/bin
  includePaths:
  - cdi-cloner
  before: install
# Source https://github.com/kubevirt/containerized-data-importer/blob/v1.60.3/cmd/cdi-cloner/BUILD.bazel
shell:
  install:
  - |
    /relocate_binaries.sh -i "{{ $virtCDIClonerDependencies.binaries | join " " }}" -o /relocate
---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-gobuild
final: false
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/golang-bookworm-1.23" "builder/alt-go-svace" }}
git:
  - add: {{ .ModuleDir }}/images/{{ .ImageName }}/cloner-startup
    to: /app
    stageDependencies:
      install:
        - '**/*'
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
shell:
  install:
  - |
    mkdir -p /cdi-binaries
    cd /app
    export GOPROXY=$(cat /run/secrets/GOPROXY)
    go mod download
    {{- $_ := set $ "ProjectName" (list $.ImageName "cdi-cloner" | join "/") }}
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" -o /cdi-binaries/cloner-startup ./cmd/cloner-startup`) | nindent 6 }}
