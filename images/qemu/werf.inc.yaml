---
{{- define "qemu-deps" -}}
binaries:
  # dmidecode bins
  - /usr/sbin/dmidecode
  - /usr/sbin/biosdecode
  - /usr/sbin/ownership
  - /usr/sbin/vpddecode
{{- end -}}

{{ $qemuDependencies := include "qemu-deps" . | fromYaml }}
{{- $gitRepoName := $.ImageName }}
{{- $version := get $.Version $gitRepoName }}
{{- $gitRepoUrl := cat $.SOURCE_REPO "/qemu/qemu.git" | nospace }}

image: {{ $.ImageName }}
final: false
fromImage: base-alt-p11
git:
- add: /images/{{ $.ImageName }}/
  to: /
  includePaths:
  - install-qemu.sh
  - patches
  excludePaths:
    - patches/README.md
  stageDependencies:
    setup:
      - install-qemu.sh

- add: /images/base-alt-p11-binaries
  to: /
  includePaths:
  - relocate_binaries.sh
  stageDependencies:
    setup:
    - '**/*'
import:
- image: packages/binaries/dmidecode
  add: /dmidecode
  to: /dmidecode
  before: install
shell:
  beforeInstall:
  - |
    apt-get update && apt-get install -y \
    binutils \
    pkgconfig \
    pkg-config \
    dmidecode \
    gcc-c++ \
    git \
    gettext \
    bash-completion \
    clang \
    ccache \
    make cmake \
    meson \
    ninja-build \
    glibc-devel-static \
    zlib-devel-static \
    glib2-devel-static \
    libpcre2-devel-static \
    libattr-devel-static \
    libdw-devel-static \
    libatomic-devel-static \
    glib2-devel \
    libdw-devel \
    makeinfo \
    perl-devel \
    python3 python3-dev \
    python3-module-pytest \
    python3-module-docutils \
    python3-tools \
    python3-module-pip \
    python3-module-sphinx \
    python3-module-sphinx_rtd_theme \
    pkgconfig \
    libssh-devel \
    libssh2-devel \
    libcap-ng-devel \
    libxfs-devel \
    zlib-devel \
    libcurl-devel \
    libpci-devel \
    libgvnc-devel \
    glibc-kernheaders \
    ipxe-roms-qemu \
    seavgabios \
    seabios \
    libfdt-devel \
    qboot \
    libpixman-devel \
    libkeyutils-devel \
    flex \
    libuuid-devel \
    libpam0-devel \
    libtasn1-devel \
    libslirp-devel \
    libdrm-devel \
    libxdp-devel libSDL2-devel libSDL2_image-devel \
    libncursesw-devel libalsa-devel libpulseaudio-devel \
    pipewire-libs pipewire-jack-libs-devel \
    libsoundio-devel libcapstone-devel libsasl2-devel \
    libjpeg-devel libpng-devel libxkbcommon-devel xkeyboard-config-devel \
    glusterfs11 libgtk+3-devel libvte libvte-devel libvte3-devel \
    libvirglrenderer-devel libusb-devel liburing-devel libbpf-devel \
    libspice-server-devel spice-protocol ceph-devel \
    libnfs-devel libzstd-devel libseccomp-devel \
    libgcrypt-devel libgnutls-devel libnettle-devel \
    libudev-devel libmultipath-devel libblkio-devel libpmem-devel \
    libdaxctl-devel libfuse3-devel rdma-core-devel libnuma-devel \
    bzlib-devel liblzo2-devel libsnappy-devel \
    libcacard-devel libusbredir-devel libepoxy-devel libgbm-devel \
    libvitastor-devel libiscsi-devel glusterfs-coreutils \
    libaio-devel libselinux-devel libqpl-devel \
    qemu-kvm-core shadow-utils sysvinit-utils libglusterfs11-api-devel hasher-provides-dev-kvm \
    filesystem libvdeplug-devel

    apt-get clean
    rm --recursive --force /var/lib/apt/lists/ftp.altlinux.org* /var/cache/apt/*.bin
    rm -f /usr/lib*/python3*/EXTERNALLY-MANAGED
    rpm -qa | sort > /packages.txt

    mkdir -p /usr/libexec/ccache-wrappers
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/cc
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/clang
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/gcc

    pip3 install black

  install:
  - |
    cp -a /dmidecode/. /
    export CCACHE_WRAPPERSDIR="/usr/libexec/ccache-wrappers"
    export CCACHE_DIR="$CCACHE_BASEDIR/ccache"
    export CCACHE_BASEDIR="$(pwd)"
    export PATH="$CCACHE_WRAPPERSDIR:$PATH"
    export MAKE="/usr/bin/make"
    export NINJA="/usr/bin/ninja"
    export PYTHON="/usr/bin/python3"

    git clone --depth=1 --branch v{{ $version }} {{ $gitRepoUrl }} {{ $gitRepoName }}-{{ $version }}

    cd {{ $gitRepoName }}-{{ $version }}

    for p in /patches/*.patch ; do
      echo -n "Apply ${p} ... "
      git apply  --ignore-space-change --ignore-whitespace ${p} && echo OK || (echo FAIL ; exit 1)
    done

    ./configure \
      --target-list="x86_64-softmmu" \
      --with-pkgversion="-dvp" \
      --with-coroutine=ucontext \
      --tls-priority="@QEMU,SYSTEM" \
      --block-drv-rw-whitelist="qcow2,raw,file,host_device,nbd,iscsi,rbd,blkdebug,luks,null-co,nvme,copy-on-read,throttle,compress,virtio-blk-vhost-vdpa,virtio-blk-vfio-pci,virtio-blk-vhost-user,io_uring,nvme-io_uring" \
      --block-drv-ro-whitelist="vdi,vmdk,vhdx,vpc,https" \
      --disable-alsa \
      --disable-auth-pam \
      --disable-avx2 \
      --disable-avx512bw \
      --disable-block-drv-whitelist-in-tools \
      --disable-bochs \
      --disable-bpf \
      --disable-brlapi \
      --disable-bsd-user \
      --disable-bzip2 \
      --disable-cfi \
      --disable-cfi-debug \
      --disable-cloop \
      --disable-cocoa \
      --disable-coreaudio \
      --disable-crypto-afalg \
      --disable-curses \
      --disable-debug-mutex \
      --disable-debug-tcg \
      --disable-dmg \
      --disable-docs \
      --disable-dsound \
      --disable-fdt \
      --disable-fuse \
      --disable-fuse-lseek \
      --disable-gcrypt \
      --disable-gettext \
      --disable-glusterfs \
      --disable-gtk \
      --disable-guest-agent-msi \
      --disable-hvf \
      --disable-jack \
      --disable-l2tpv3 \
      --disable-libdaxctl \
      --disable-libdw \
      --disable-libiscsi \
      --disable-libnfs \
      --disable-libpmem \
      --disable-libssh \
      --disable-libvduse \
      --disable-linux-user \
      --disable-lto \
      --disable-lzfse \
      --disable-membarrier \
      --disable-module-upgrades \
      --disable-multiprocess \
      --disable-netmap \
      --disable-nettle \
      --disable-nvmm \
      --disable-oss \
      --disable-parallels \
      --disable-plugins \
      --disable-qcow1 \
      --disable-qed \
      --disable-qga-vss \
      --disable-qom-cast-debug \
      --disable-replication \
      --disable-rng-none \
      --disable-safe-stack \
      --disable-sdl \
      --disable-sdl-image \
      --disable-slirp-smbd \
      --disable-smartcard \
      --disable-sndio \
      --disable-sparse \
      --disable-spice \
      --disable-strip \
      --disable-u2f \
      --disable-user \
      --disable-vde \
      --disable-vduse-blk-export \
      --disable-vhost-crypto \
      --disable-virglrenderer \
      --disable-virtfs \
      --disable-vnc-jpeg \
      --disable-vte \
      --disable-vvfat \
      --disable-whpx \
      --disable-xen \
      --disable-xen-pci-passthrough \
      --enable-attr \
      --enable-blkio \
      --enable-cap-ng \
      --enable-capstone \
      --enable-coroutine-pool \
      --enable-curl \
      --enable-dbus-display \
      --enable-debug-info \
      --enable-fdt=system \
      --enable-gio \
      --enable-gnutls \
      --enable-guest-agent \
      --enable-iconv \
      --enable-kvm \
      --enable-libusb \
      --enable-libudev \
      --enable-linux-aio \
      --enable-linux-io-uring \
      --enable-lzo \
      --enable-malloc-trim \
      --enable-modules \
      --enable-mpath \
      --enable-numa \
      --enable-opengl \
      --enable-pa \
      --enable-pie \
      --enable-rbd \
      --enable-rdma \
      --enable-seccomp \
      --enable-selinux \
      --enable-slirp \
      --enable-snappy \
      --enable-spice-protocol \
      --enable-system \
      --enable-tcg \
      --enable-tools \
      --enable-tpm \
      --enable-usb-redir \
      --enable-vdi \
      --enable-vhost-kernel \
      --enable-vhost-net \
      --enable-vhost-user \
      --enable-vhost-user-blk-server \
      --enable-vhost-vdpa \
      --enable-vnc \
      --enable-png \
      --enable-vnc-sasl \
      --enable-werror \
      --enable-xkbcommon \
      --enable-zstd

      make -j$(nproc)

  setup:
  - |
    /install-qemu.sh --version-num "{{ $version }}" \
                        -s /{{ $gitRepoName }}-{{ $version }} \
                        -d /BINS \
                        -b build
    # qemu-img
    mkdir -p /qemu-img/usr/bin
    cp -an /BINS/usr/bin/qemu{-nbd,-img} /qemu-img/usr/bin

    LIST="/BINS/usr/bin/qemu-img /BINS/usr/bin/qemu-nbd"

    ./relocate_binaries.sh -i "$LIST" -o /qemu-img
