---
{{- $gitRepoName := $.ImageName }}
{{- $version := get $.Firmware $gitRepoName }}
{{- $gitRepoUrl := "qemu/qemu.git" }}

image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
git:
- add: {{ .ModuleDir }}/images/{{ .ImageName }}
  to: /
  includePaths:
  - install-qemu.sh
  - patches
  excludePaths:
    - patches/README.md
  stageDependencies:
    install:
      - '**/*'
- add: {{ .ModuleDir }}/build/tools/relocate_binaries.sh
  to: /relocate_binaries.sh
  stageDependencies:
    install:
    - '**/*'
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2}}
  - apt-get install -y meson
  {{- include "alt packages clean" . | nindent 2}}
  install:
  - |
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch v{{ $version }} /{{ $gitRepoName }}-{{ $version }}

    cd /{{ $gitRepoName }}-{{ $version }}

    if [[ "$(cat /run/secrets/SOURCE_REPO)" =~ "github.com" ]] ; then
      echo "Checkout submodules"
      git submodule update --init --recursive --depth=1
    else
      echo "Checkout submodules with URL rewrite"
      # mbed-tls rewrite is needed for edk2 submodule.
      git \
        -c url."$(cat /run/secrets/SOURCE_REPO)/qemu-project/seabios.git".insteadOf=https://gitlab.com/qemu-project/seabios.git/ \
        -c url."$(cat /run/secrets/SOURCE_REPO)/mbed-tls/".insteadOf=https://github.com/ARMmbed/ \
        -c url."$(cat /run/secrets/SOURCE_REPO)/".insteadOf=https://github.com/  \
        -c url."$(cat /run/secrets/SOURCE_REPO)/".insteadOf=https://gitlab.com/  \
        submodule update --init --recursive --depth=1

      echo "Download meson subprojects with URL rewrites."
      # Configure script options require only 3 subprojects.
      for subproj in berkeley-softfloat-3 berkeley-testfloat-3 keycodemapdb ; do
        echo "Rewrite url for ${subproj} subproject."
        wrapfile="subprojects/${subproj}.wrap"
        # Rewrite https://HOSTNAME/ to SOURCE_REPO secret in the wrap file.
        sed -i '/^#/n ; /^url/ s|\(url\ \?=\ \?\)\(.*:\/\/[^\/]*\/\)|\1'$(cat /run/secrets/SOURCE_REPO)'\/|' ${wrapfile}
        meson subprojects download ${subproj}
      done

    fi

---
{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
packages:
- binutils
- pkgconfig pkg-config
- gcc-c++ clang git
- gettext bash-completion
- ccache
- make cmake meson ninja-build makeinfo
- seabios seavgabios
- qboot flex
- filesystem
- ipxe-roms-qemu
- qemu-kvm-core shadow-utils sysvinit-utils
- hasher-provides-dev-kvm
- python3 python3-dev
- python3-module-pytest
- python3-module-docutils
- python3-tools
- python3-module-pip
- python3-module-sphinx
- python3-module-sphinx_rtd_theme
- python3-module-black
libraries:
- glibc-devel-static
- zlib-devel-static
- libpcre2-devel-static
- libattr-devel-static
- libdw-devel-static
- libatomic-devel-static
- libdw-devel
- perl-devel
- libssh-devel
- libssh2-devel
- libxfs-devel
- zlib-devel
- libpci-devel
- libgvnc-devel
- glibc-kernheaders
- libfdt-devel
- libpixman-devel
- libkeyutils-devel
- libuuid-devel libpam0-devel
- libtasn1-devel libslirp-devel
- libdrm-devel
- libxdp-devel libSDL2-devel libSDL2_image-devel
- libncursesw-devel libalsa-devel libpulseaudio-devel
- pipewire-libs pipewire-jack-libs-devel
- libsoundio-devel libsasl2-devel
- libjpeg-devel libpng-devel libxkbcommon-devel xkeyboard-config-devel
- glusterfs11 libgtk+3-devel libvte libvte-devel libvte3-devel
- libvirglrenderer-devel libusb-devel liburing-devel libbpf-devel
- libspice-server-devel spice-protocol ceph-devel
- libnfs-devel libzstd-devel libseccomp-devel
- libgnutls-devel
- libudev-devel libmultipath-devel libblkio-devel libpmem-devel
- libdaxctl-devel rdma-core-devel
- bzlib-devel liblzo2-devel libsnappy-devel
- libcacard-devel libusbredir-devel libepoxy-devel libgbm-devel
- libvitastor-devel libiscsi-devel glusterfs-coreutils
- libaio-devel libselinux-devel libqpl-devel
- libglusterfs11-api-devel
- libvdeplug-devel
- glib2-devel
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}

image: {{ .ModuleNamePrefix }}{{ .ImageName }}
final: false
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/alt" "builder/alt-go-svace" }}
import:
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /{{ $gitRepoName }}-{{ $version }}
  to: /{{ $gitRepoName }}-{{ $version }}
  before: install
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /patches
  to: /patches
  before: install
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /
  to: /
  before: install
  includePaths:
  - install-qemu.sh
  - relocate_binaries.sh
{{- $images := list "dmidecode" "libgcrypt" "nettle" "libcap-ng" "libcapstone" "openssl" "libcurl" "e2fsprogs" "libxcrypt" "numactl" "openldap" -}}
{{- include "importPackageImages" (list . $images "install") -}}
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.packages | join " " }} \
      {{ $builderDependencies.libraries | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}
  - |
    rm -f /usr/lib*/python3*/EXTERNALLY-MANAGED
    rpm -qa | sort > /packages.txt

    mkdir -p /usr/libexec/ccache-wrappers
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/cc
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/clang
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/gcc

  install:
  - |
    # Install packages
    PKGS="{{ $images | join " " }}"
    for pkg in $PKGS; do
      cp -a /$pkg/. /
      rm -rf /$pkg
    done

    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

    export CCACHE_WRAPPERSDIR="/usr/libexec/ccache-wrappers"
    export CCACHE_DIR="$CCACHE_BASEDIR/ccache"
    export CCACHE_BASEDIR="$(pwd)"
    export PATH="$CCACHE_WRAPPERSDIR:$PATH"
    export MAKE="/usr/bin/make"
    export NINJA="/usr/bin/ninja"
    export PYTHON="/usr/bin/python3"

    cd /{{ $gitRepoName }}-{{ $version }}

    for p in /patches/*.patch ; do
      echo -n "Apply ${p} ... "
      git apply  --ignore-space-change --ignore-whitespace ${p} && echo OK || (echo FAIL ; exit 1)
    done

    ./configure \
      --target-list="x86_64-softmmu" \
      --with-pkgversion="-dvp" \
      --with-coroutine=ucontext \
      --tls-priority="@QEMU,SYSTEM" \
      --block-drv-rw-whitelist="qcow2,raw,file,host_device,nbd,iscsi,rbd,blkdebug,luks,null-co,nvme,copy-on-read,throttle,compress,virtio-blk-vhost-vdpa,virtio-blk-vfio-pci,virtio-blk-vhost-user,io_uring,nvme-io_uring" \
      --block-drv-ro-whitelist="vdi,vmdk,vhdx,vpc,https" \
      --disable-alsa \
      --disable-auth-pam \
      --disable-avx2 \
      --disable-avx512bw \
      --disable-block-drv-whitelist-in-tools \
      --disable-bochs \
      --disable-bpf \
      --disable-brlapi \
      --disable-bsd-user \
      --disable-bzip2 \
      --disable-cfi \
      --disable-cfi-debug \
      --disable-cloop \
      --disable-cocoa \
      --disable-coreaudio \
      --disable-crypto-afalg \
      --disable-curses \
      --disable-debug-mutex \
      --disable-debug-tcg \
      --disable-dmg \
      --disable-docs \
      --disable-dsound \
      --disable-fdt \
      --disable-fuse \
      --disable-fuse-lseek \
      --disable-gcrypt \
      --disable-gettext \
      --disable-glusterfs \
      --disable-gtk \
      --disable-guest-agent-msi \
      --disable-hvf \
      --disable-jack \
      --disable-l2tpv3 \
      --disable-libdaxctl \
      --disable-libdw \
      --disable-libiscsi \
      --disable-libnfs \
      --disable-libpmem \
      --disable-libssh \
      --disable-libvduse \
      --disable-linux-user \
      --disable-lto \
      --disable-lzfse \
      --disable-membarrier \
      --disable-module-upgrades \
      --disable-multiprocess \
      --disable-netmap \
      --disable-nettle \
      --disable-nvmm \
      --disable-oss \
      --disable-parallels \
      --disable-plugins \
      --disable-qcow1 \
      --disable-qed \
      --disable-qga-vss \
      --disable-qom-cast-debug \
      --disable-replication \
      --disable-rng-none \
      --disable-safe-stack \
      --disable-sdl \
      --disable-sdl-image \
      --disable-slirp-smbd \
      --disable-smartcard \
      --disable-sndio \
      --disable-sparse \
      --disable-spice \
      --disable-strip \
      --disable-u2f \
      --disable-user \
      --disable-vde \
      --disable-vduse-blk-export \
      --disable-vhost-crypto \
      --disable-virglrenderer \
      --disable-virtfs \
      --disable-vnc-jpeg \
      --disable-vte \
      --disable-vvfat \
      --disable-whpx \
      --disable-xen \
      --disable-xen-pci-passthrough \
      --enable-attr \
      --enable-blkio \
      --enable-cap-ng \
      --enable-capstone \
      --enable-coroutine-pool \
      --enable-curl \
      --enable-dbus-display \
      --enable-debug-info \
      --enable-fdt=system \
      --enable-gio \
      --enable-gnutls \
      --enable-guest-agent \
      --enable-iconv \
      --enable-kvm \
      --enable-libusb \
      --enable-libudev \
      --enable-linux-aio \
      --enable-linux-io-uring \
      --enable-lzo \
      --enable-malloc-trim \
      --enable-modules \
      --enable-mpath \
      --enable-numa \
      --enable-opengl \
      --enable-pa \
      --enable-pie \
      --enable-rbd \
      --enable-rdma \
      --enable-seccomp \
      --enable-selinux \
      --enable-slirp \
      --enable-snappy \
      --enable-spice-protocol \
      --enable-system \
      --enable-tcg \
      --enable-tools \
      --enable-tpm \
      --enable-usb-redir \
      --enable-vdi \
      --enable-vhost-kernel \
      --enable-vhost-net \
      --enable-vhost-user \
      --enable-vhost-user-blk-server \
      --enable-vhost-vdpa \
      --enable-vnc \
      --enable-png \
      --enable-vnc-sasl \
      --enable-werror \
      --enable-xkbcommon \
      --enable-zstd

    {{- $_ := set $ "ProjectName" (list $.ImageName "qemu" | join "/") }}
    {{- include "image-build.build" (set $ "BuildCommand" `make -j$(nproc)`) | nindent 6 }}

  setup:
  - |
    /install-qemu.sh --version-num "{{ $version }}" \
                        -s /{{ $gitRepoName }}-{{ $version }} \
                        -d /BINS \
                        -b build
    # qemu-img
    mkdir -p /qemu-img/usr/bin
    cp -an /BINS/usr/bin/qemu{-nbd,-img} /qemu-img/usr/bin

    LIST="/BINS/usr/bin/qemu-img /BINS/usr/bin/qemu-nbd"

    ./relocate_binaries.sh -i "$LIST" -o /qemu-img
