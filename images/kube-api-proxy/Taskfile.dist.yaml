version: "3"

silent: true

includes:
  my:
    taskfile: Taskfile.my.yaml
    optional: true

vars:
  DevRegistry: "dev-registry.deckhouse.io/virt/dev/$USER"

tasks:
  dev:build:
    desc: "build latest image with proxy and test-controller"
    cmds:
      - |
        docker build . -t {{.DevRegistry}}/kube-api-proxy:latest -f local/Dockerfile
        docker push {{.DevRegistry}}/kube-api-proxy:latest

  dev:deploy:
    desc: "apply manifest with proxy and test-controller"
    cmds:
      - |
        if ! kubectl get no 2>&1 >/dev/null ; then
          echo Restart cluster connection
          exit 1
        fi
      - |
        kubectl -n kproxy apply -f local/proxy.yaml

  dev:restart:
    desc: "restart deployment"
    cmds:
      - |
        if ! kubectl get no 2>&1 >/dev/null ; then
          echo Restart cluster connection
          exit 1
        fi
      - |
        kubectl -n kproxy scale deployment/kube-api-proxy --replicas=0
        kubectl -n kproxy scale deployment/kube-api-proxy --replicas=1

  dev:redeploy:
    desc: "build, deploy, restart"
    cmds:
      - |
        if ! kubectl get no 2>&1 >/dev/null ; then
          echo Restart cluster connection
          exit 1
        fi
      - task: dev:build
      - task: dev:deploy
      - task: dev:restart
      - |
        sleep 3
        kubectl -n kproxy get all

  dev:curl:
    desc: "run curl in proxy deployment"
    cmds:
      - |
        kubectl -n kproxy exec -t deploy/kube-api-proxy -- curl {{.CLI_ARGS}}

  dev:kubectl:
    desc: "run kubectl in proxy deployment"
    cmds:
      - |
        kubectl -n kproxy exec -ti deploy/kube-api-proxy -- kubectl -s 127.0.0.1:23916 {{.CLI_ARGS}}
        #kubectl -n d8-virtualization exec -ti deploy/virt-operator -- kubectl -s 127.0.0.1:23915 {{.CLI_ARGS}}

  logs:proxy:
    desc: "Show proxy logs"
    cmds:
      - |
        kubectl -n kproxy logs deployments/kube-api-proxy -c proxy-only -f

  logs:controller:
    desc: "Show test-controller logs"
    cmds:
      - |
        kubectl -n kproxy logs deployments/kube-api-proxy -c controller -f
