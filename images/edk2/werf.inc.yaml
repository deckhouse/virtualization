---
{{- $gitRepoName := $.ImageName }}
# {{ .Version }}
# { {- $version := .Version $gitRepoName } }
{{- $version := "" }}
{{- $gitRepoUrl := "tianocore/edk2.git" }}

image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
git:
- add: {{ .ModuleDir }}/images/{{ .ImageName }}/build.sh
  to: /build.sh
  stageDependencies:
    install:
      - build.sh
- add: {{ .ModuleDir }}/images/{{ .ImageName }}/logo/Logo.bmp
  to: /Logo.bmp
  stageDependencies:
    install:
      - '**/*'
- add: {{ .ModuleDir }}/images/{{ .ImageName }}/json
  to: /FIRMWARE
  includePaths:
  - '*.json'
  stageDependencies:
    install:
      - '*.json'
- add: {{ .ModuleDir }}/images/{{ .ImageName }}/uefi-revocation-list
  to: /FIRMWARE
  includePaths:
  - '*.bin'
  stageDependencies:
    install:
      - '*.bin'
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - |
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

    echo "Git clone Edk2 repository..."
    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $gitRepoName }}-{{ $version }} {{ $gitRepoName }}-{{ $version }}

    git clone $(cat /run/secrets/SOURCE_REPO)/tianocore/edk2-platforms.git

    cd /{{ $gitRepoName }}-{{ $version }}

    if [[ "$(cat /run/secrets/SOURCE_REPO)" =~ "github.com" ]] ; then
      echo "Checkout submodules"
      git submodule update --init --recursive --depth=1
    else
      echo "Checkout submodules with URL rewrite"
      # mbed-tls rewrite is needed for submodules from ARMmbed renamed organization.
      git \
        -c url."$(cat /run/secrets/SOURCE_REPO)/mbed-tls/".insteadOf=https://github.com/ARMmbed/ \
        -c url."$(cat /run/secrets/SOURCE_REPO)/".insteadOf=https://github.com/  \
        -c url."$(cat /run/secrets/SOURCE_REPO)/".insteadOf=https://gitlab.com/  \
        submodule update --init --recursive  --depth=1
    fi

---

image: {{ .ModuleNamePrefix }}{{ .ImageName }}
final: false
fromImage: {{ .ModuleNamePrefix }}base-alt-p11
import:
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /{{ $gitRepoName }}-{{ $version }}
  to: /{{ $gitRepoName }}-{{ $version }}
  before: install
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /edk2-platforms
  to: /edk2-platforms
  before: install
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /FIRMWARE
  to: /FIRMWARE
  before: install
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /Logo.bmp
  to: /Logo.bmp
  before: install
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /build.sh
  to: /build.sh
  before: install
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
    gcc gcc-c++ \
    git curl \
    bash-completion \
    clang \
    ccache \
    make cmake \
    python3 python3-dev \
    python3-tools python3-module-setuptools \
    python3-module-pip \
    nasm acpica libssl-devel libdwarf-devel libuuid-devel bison flex \
    dosfstools mtools genisoimage binutils-devel \
    qemu-kvm-core \
    iasl \
    python3-modules-sqlite3 python3-module-virt-firmware libuuid-devel \
    qemu-img xorriso libssl-devel \
    bc zlib-devel perl-PathTools perl-IPC-Cmd perl-JSON

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    cd /{{ $gitRepoName }}-{{ $version }}

    # Set env edk
    export EDK_TOOLS_PATH=$(pwd)/BaseTools
    export PACKAGES_PATH=$(pwd)/BaseTools:/edk2-platforms

    echo "Building BaseTools..."
    ln /usr/bin/python3 /usr/bin/python
    make -C BaseTools -j$(nproc) 2>&1 > /dev/null

  setup:
  - |
    /build.sh --repo-name {{ $gitRepoName }} --branch {{ $version }}

