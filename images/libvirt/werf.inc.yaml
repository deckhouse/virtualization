---
{{- $gitRepoName := $.ImageName }}
{{- $version := get $.Version $gitRepoName }}
{{- $gitRepoUrl := "libvirt/libvirt.git" }}

image: {{ $.ImageName }}
final: false
{{- if eq $.SVACE_ENABLED "true" }}
fromImage: svace-builder-alt
{{- else }}
fromImage: base-alt-p11
{{- end }}
git:
- add: /images/{{ $.ImageName }}/
  to: /
  includePaths:
  - install-libvirt.sh
  - patches
  excludePaths:
    - patches/README.md
  stageDependencies:
    install:
      - '**/*'
    setup:
      - install-libvirt.sh
import:
- image: packages/binaries/dmidecode
  add: /dmidecode
  to: /dmidecode
  before: install
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install --yes \
    binutils \
    gcc-c++ \
    git \
    gettext \
    bash-completion \
    clang \
    ccache \
    make cmake \
    meson \
    ninja-build \
    libudev-devel \
    libpciaccess-devel \
    libyajl-devel \
    sanlock-devel \
    libpcap-devel \
    libnl-devel \
    libselinux-devel \
    iproute \
    iptables \
    iptables-nft \
    iptables-ipv6 \
    openvswitch \
    ebtables \
    libsasl2-devel \
    pkgconfig \
    libssh-devel \
    libssh2-devel \
    polkit kmod \
    qemu-img \
    lvm2 \
    libparted-devel \
    parted \
    libdevmapper-devel \
    ceph-devel \
    open-iscsi \
    libiscsi-devel \
    libglusterfs-devel \
    libnuma-devel \
    libcap-ng-devel \
    libcurl-devel \
    libaudit-devel \
    libfuse-devel \
    libnbd-devel \
    libblkid-devel \
    libgcrypt-devel \
    libgnutls-devel \
    libp11-kit-devel \
    libreadline-devel \
    libtasn1-devel \
    libattr-devel \
    libbsd-devel \
    libsystemd-devel \
    libuuid-devel \
    libjson-c-devel \
    systemtap-sdt-devel \
    systemd-container \
    attr \
    libacl-devel \
    glib2-devel \
    glibc-utils \
    libgio-devel \
    libxml2-devel \
    xml-utils \
    xsltproc \
    python3 python3-devel \
    python3-module-pytest \
    python3-module-docutils \
    python3-tools \
    python3-module-pip \
    polkit \
    libtirpc-devel \
    libsasl2-devel \
    wireshark-devel \
    tshark \
    zlib-devel \
    mdevctl \
    util-linux dmsetup pm-utils libclocale \
    libfuse3-devel libnuma libslirp-devel \
    libyajl-devel libselinux-devel

  {{- include "alt packages clean" . | nindent 2 }}
  - |
    rm -f /usr/lib*/python3*/EXTERNALLY-MANAGED
    rpm -qa | sort > /packages.txt
    mkdir -p /usr/libexec/ccache-wrappers
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/cc
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/clang
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/gcc

    pip3 install black

  install:
  - |
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

    cp -a /dmidecode/. /
    rm -rf /dmidecode
    export CCACHE_WRAPPERSDIR="/usr/libexec/ccache-wrappers"
    export CCACHE_DIR="$CCACHE_BASEDIR/ccache"
    export CCACHE_BASEDIR="$(pwd)"
    export PATH="$CCACHE_WRAPPERSDIR:$PATH"
    export MAKE="/usr/bin/make"
    export NINJA="/usr/bin/ninja"
    export PYTHON="/usr/bin/python3"

    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch v{{ $version }} {{ $gitRepoName }}-{{ $version }}

    cd {{ $gitRepoName }}-{{ $version }}
    if ! [[ "$(cat /run/secrets/SOURCE_REPO)" =~ "github.com" ]];then
      echo "Change submodule url"
      git submodule set-url -- subprojects/keycodemapdb $(cat /run/secrets/SOURCE_REPO)/keycodemap/keycodemapdb.git
    fi

    for p in /patches/*.patch ; do
      echo -n "Apply ${p} ... "
      git apply  --ignore-space-change --ignore-whitespace ${p} && echo OK || (echo FAIL ; exit 1)
    done

    CFLAGS="-Wframe-larger-than=262144" meson setup build \
      -Dinit_script=systemd \
      -Dsystem=true \
      -Dremote_default_mode=direct \
      -Dpciaccess=enabled \
      -Dsasl=enabled \
      -Dpolkit=enabled \
      -Dlibssh=enabled \
      -Dlibssh2=enabled \
      -Dnumactl=enabled \
      -Dcapng=enabled \
      -Dudev=enabled \
      -Ddriver_network=enabled \
      -Ddriver_interface=enabled \
      -Ddriver_libvirtd=enabled \
      -Ddriver_qemu=enabled \
      -Ddriver_remote=enabled \
      -Dselinux=enabled \
      -Dselinux_mount=enabled \
      -Ddriver_esx=disabled -Dcurl=disabled \
      -Dfirewalld=disabled \
      -Dfirewalld_zone=disabled \
      -Ddocs=disabled \
      -Ddriver_ch=disabled \
      -Ddriver_lxc=disabled -Dlogin_shell=disabled \
      -Ddriver_openvz=disabled \
      -Ddriver_test=disabled \
      -Ddriver_vbox=disabled \
      -Ddriver_vmware=disabled \
      -Ddriver_hyperv=disabled -Dopenwsman=disabled \
      -Ddriver_vz=disabled \
      -Ddriver_bhyve=disabled \
      -Dvbox_xpcomc_dir=disabled \
      -Dwireshark_dissector=disabled \
      -Dwireshark_plugindir=disabled \
      -Dstorage_gluster=disabled -Dglusterfs=disabled \
      -Dstorage_fs=disabled \
      -Dstorage_lvm=disabled \
      -Dstorage_zfs=disabled \
      -Dstorage_vstorage=disabled \
      -Dstorage_rbd=disabled \
      -Dstorage_mpath=disabled \
      -Dstorage_iscsi=disabled \
      -Dstorage_iscsi_direct=disabled -Dlibiscsi=disabled \
      -Dlibiscsi=disabled

    {{- $_ := set . "BinaryDir" "libvirt" -}}
    {{- include "svace.build" (set $ "BuildCommand" `ninja -C build -j$(nproc)`) | indent 4 }}

  setup:
  - |
    /install-libvirt.sh --version-num "{{ $version }}" \
                        -s /{{ $gitRepoName }}-{{ $version }} \
                        -d /BINS \
                        -b build
