---
{{- $gitRepoName := $.ImageName }}
{{- $version := get $.Version $gitRepoName }}
{{- $gitRepoUrl := "libvirt/libvirt.git" }}

image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
git:
- add: {{ include "PreffixPath" . }}/images/{{ $.ImageName }}
  to: /
  includePaths:
  - install-libvirt.sh
  - patches
  excludePaths:
    - patches/README.md
  stageDependencies:
    install:
      - '**/*'
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - |
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch v{{ $version }} /{{ $gitRepoName }}-{{ $version }}

    cd /{{ $gitRepoName }}-{{ $version }}

    if ! [[ "$(cat /run/secrets/SOURCE_REPO)" =~ "github.com" ]];then
      echo "Change submodule url"
      git submodule set-url -- subprojects/keycodemapdb $(cat /run/secrets/SOURCE_REPO)/keycodemap/keycodemapdb.git
    fi

---
{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
packages:
- binutils
- gcc-c++
- git gettext
- bash-completion
- clang ccache
- make cmake
- meson ninja-build
- attr
- iproute iptables iptables-nft iptables-ipv6
- openvswitch ebtables
- pkgconfig
- polkit kmod
- lvm2 parted
- qemu-img open-iscsi
- xml-utils xsltproc
- systemd-container polkit
- python3 python3-devel
- python3-module-pytest python3-module-docutils
- python3-tools python3-module-pip
- python3-module-black
- mdevctl tshark
- util-linux dmsetup pm-utils
libraries:
- libudev-devel
- libpciaccess-devel
- libyajl-devel sanlock-devel
- libpcap-devel libnl-devel
- libselinux-devel libsasl2-devel
- libssh-devel
- libssh2-devel
- libparted-devel
- libdevmapper-devel
- ceph-devel
- libiscsi-devel libglusterfs-devel
- libnuma-devel libcap-ng-devel
- libcurl-devel libaudit-devel
- libfuse-devel libnbd-devel
- libblkid-devel libgcrypt-devel
- libgnutls-devel libp11-kit-devel
- libreadline-devel libtasn1-devel
- libattr-devel libbsd-devel
- libsystemd-devel libuuid-devel
- libjson-c-devel systemtap-sdt-devel
- libacl-devel glib2-devel glibc-utils
- libgio-devel libxml2-devel
- libtirpc-devel libsasl2-devel
- wireshark-devel
- zlib-devel libclocale
- libfuse3-devel libnuma libslirp-devel
- libyajl-devel libselinux-devel
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}
image: {{ .ModuleNamePrefix }}{{ .ImageName }}
final: false
fromImage: {{ .ModuleNamePrefix }}base-alt-p11{{ $.SVACE_IMAGE_SUFFIX }}
import:
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /{{ $gitRepoName }}-{{ $version }}
  to: /{{ $gitRepoName }}-{{ $version }}
  before: install
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /patches
  to: /patches
  before: install
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
  add: /install-libvirt.sh
  to: /install-libvirt.sh
  before: install
- image: packages/binaries/dmidecode
  add: /dmidecode
  to: /dmidecode
  before: install
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.packages | join " " }} \
      {{ $builderDependencies.libraries | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}
  - |
    rm -f /usr/lib*/python3*/EXTERNALLY-MANAGED
    rpm -qa | sort > /packages.txt
    mkdir -p /usr/libexec/ccache-wrappers
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/cc
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/clang
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/gcc

  install:
  - |
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

    cp -a /dmidecode/. /
    rm -rf /dmidecode
    export CCACHE_WRAPPERSDIR="/usr/libexec/ccache-wrappers"
    export CCACHE_DIR="$CCACHE_BASEDIR/ccache"
    export CCACHE_BASEDIR="$(pwd)"
    export PATH="$CCACHE_WRAPPERSDIR:$PATH"
    export MAKE="/usr/bin/make"
    export NINJA="/usr/bin/ninja"
    export PYTHON="/usr/bin/python3"

    cd /{{ $gitRepoName }}-{{ $version }}

    for p in /patches/*.patch ; do
      echo -n "Apply ${p} ... "
      git apply  --ignore-space-change --ignore-whitespace ${p} && echo OK || (echo FAIL ; exit 1)
    done

    CFLAGS="-Wframe-larger-than=262144" meson setup build \
      -Dinit_script=systemd \
      -Dsystem=true \
      -Dremote_default_mode=direct \
      -Dpciaccess=enabled \
      -Dsasl=enabled \
      -Dpolkit=enabled \
      -Dlibssh=enabled \
      -Dlibssh2=enabled \
      -Dnumactl=enabled \
      -Dcapng=enabled \
      -Dudev=enabled \
      -Ddriver_network=enabled \
      -Ddriver_interface=enabled \
      -Ddriver_libvirtd=enabled \
      -Ddriver_qemu=enabled \
      -Ddriver_remote=enabled \
      -Dselinux=enabled \
      -Dselinux_mount=enabled \
      -Ddriver_esx=disabled -Dcurl=disabled \
      -Dfirewalld=disabled \
      -Dfirewalld_zone=disabled \
      -Ddocs=disabled \
      -Ddriver_ch=disabled \
      -Ddriver_lxc=disabled -Dlogin_shell=disabled \
      -Ddriver_openvz=disabled \
      -Ddriver_test=disabled \
      -Ddriver_vbox=disabled \
      -Ddriver_vmware=disabled \
      -Ddriver_hyperv=disabled -Dopenwsman=disabled \
      -Ddriver_vz=disabled \
      -Ddriver_bhyve=disabled \
      -Dvbox_xpcomc_dir=disabled \
      -Dwireshark_dissector=disabled \
      -Dwireshark_plugindir=disabled \
      -Dstorage_gluster=disabled -Dglusterfs=disabled \
      -Dstorage_fs=disabled \
      -Dstorage_lvm=disabled \
      -Dstorage_zfs=disabled \
      -Dstorage_vstorage=disabled \
      -Dstorage_rbd=disabled \
      -Dstorage_mpath=disabled \
      -Dstorage_iscsi=disabled \
      -Dstorage_iscsi_direct=disabled -Dlibiscsi=disabled \
      -Dlibiscsi=disabled


      {{- $_ := set $ "ProjectName" (list $.ImageName "libvirt" | join "/") }}
      {{- include "image-build.build" (set $ "BuildCommand" `ninja -C build -j$(nproc)`) | nindent 6 }}

  setup:
  - |
    /install-libvirt.sh --version-num "{{ $version }}" \
                        -s /{{ $gitRepoName }}-{{ $version }} \
                        -d /BINS \
                        -b build
