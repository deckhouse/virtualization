
{{- $version := get $.PackageVersion $.ImageName }}
{{- $gitRepoUrl := "linux-rdma/rdma-core.git" }}

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
altPackages:
- gcc git make libtool libnl-devel ninja-build
- binutils cmake libudev-devel pkgconfig
- libsystemd-devel pandoc
- python3-module-Cython python3-devel python3-module-docutils
- libpcap-devel libibumad libnl-devel
packages:
- libnl3
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}


{{/* Temporarily exclude images from build (the build is broken). TODO remove 'if' when build was fixed. */}}
{{- $build := "false" }}
{{- if eq $build "true" }}
---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ $.ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ $.ImageName }}-builder
  add: /out
  to: /rdma-core
  before: setup

---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
secrets:
- id: SOURCE_REPO
  # value: {{ $.SOURCE_REPO }}
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - |
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src

---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ $.ImageName }}-builder
final: false
fromImage: builder/alt
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.altPackages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    OUTDIR=/out
    BUILDDIR=/src/build

    cd /src
    mkdir -p "$BUILDDIR"
    cmake -GNinja -B build \
      -DCMAKE_POLICY_DEFAULT_CMP0177=NEW \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_INSTALL_SYSCONFDIR=/etc \
      -DCMAKE_INSTALL_LIBDIR=/usr/lib64 \
      -DNO_MAN_PAGES=1 \
      -DENABLE_STATIC=1

    ninja -j$(nproc) -C $BUILDDIR
    DESTDIR=$OUTDIR ninja -C $BUILDDIR install
    
    rm -rf $OUTDIR/usr/share
    
    find $OUTDIR -type f -executable | while read -r execfile; do
    if strip "$execfile"; then
      echo "Stripped: $execfile"
    fi
    done

{{- end }}