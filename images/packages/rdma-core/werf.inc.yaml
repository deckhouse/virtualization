
{{- $version := get $.PackageVersion $.ImageName }}
{{- $gitRepoUrl := "linux-rdma/rdma-core.git" }}

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
packages:
- gcc git make libtool libnl-devel ninja-build
- binutils cmake libudev-devel pkgconfig
- libsystemd-devel pandoc
- python3-module-Cython python3-devel python3-module-docutils
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}


{{/* Temporarily exclude images from build (the build is broken). TODO remove 'if' when build was fixed. */}}
{{- $build := "false" }}
{{- if eq $build "true" }}
---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ $.ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ $.ImageName }}-builder
  add: /out
  to: /libibverbs
  includePaths:
    - usr/lib64/libibverbs.so
    - usr/lib64/libibverbs.so.1
    - usr/lib64/libibverbs.so.1.0.0
  before: setup
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ $.ImageName }}-builder
  add: /out
  to: /rdma-core-devel
  includePaths:
    - usr/include
    - usr/lib64/libibverbs.la
  before: setup

---


image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO }}
  # value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - |
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src

---


image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ $.ImageName }}-builder
final: false
fromImage: builder/alt
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.packages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    OUTDIR=/out

    cd /src
    cmake .. \
      -GNinja \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_INSTALL_LIBDIR=/usr/lib64 \
      -DNO_MAN_PAGES=ON

    make -j$(nproc)
    make DESTDIR=$OUTDIR install

{{- end }}