---
{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
altPackages:
- gcc
- git make libtool gettext-devel
- bison flex
- pkgconf asciidoctor
- python3-devel python3-module-setuptools
- glibc-devel-static
- libpopt-devel
- klibc-devel libsqlite3
packages:
- libcap-ng zlib
- ncurses
{{- end -}}

{{- $builderDependencies := include "$name" . | fromYaml }}

{{- $version := get .PackageVersion .ImageName }}
{{- $gitRepoUrl := "util-linux/util-linux.git" }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
  add: /out
  to: /{{ .ImageName }}
  before: setup

---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src


---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
final: false
fromImage: builder/alt
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
{{- include "importPackageImages" (list . $builderDependencies.packages "install") -}}
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.altPackages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    echo "Install packages"
    PKGS="{{ $builderDependencies.packages | join " " }}"
    for pkg in $PKGS; do
      cp -a /$pkg/. /
      rm -rf /$pkg
    done
  - |
    OUTDIR=/out

    cd /src
    ./autogen.sh
    ./configure \
      --prefix=/usr \
      --exec-prefix=/usr \
      --bindir=/usr/bin \
      --sbindir=/usr/sbin \
      --libdir=/usr/lib64 \
      --enable-all-programs \
      --enable-shared \
      --disable-static \
      --disable-asciidoc

    make -j$(nproc)
    make DESTDIR=$OUTDIR install

    rm -rf $OUTDIR/usr/share

    find $OUTDIR -type f -executable | while read -r execfile; do
    if strip "$execfile"; then
      echo "Stripped: $execfile"
    fi
    done
