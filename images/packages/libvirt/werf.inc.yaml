---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
  add: /out
  to: /{{ $.ImageName }}
  before: setup

---
{{- $gitRepoName := $.ImageName }}
{{- $version := get $.Firmware $gitRepoName }}
{{- $gitRepoUrl := "libvirt/libvirt.git" }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
git:
- add: {{ .ModuleDir }}/images/packages/{{ .ImageName }}
  to: /src
  includePaths:
  - patches
  excludePaths:
    - patches/README.md
  stageDependencies:
    install:
      - '**/*'
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - |
    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src/{{ $gitRepoName }}-{{ $version }}

    cd /src/{{ $gitRepoName }}-{{ $version }}

    if [[ "$(cat /run/secrets/SOURCE_REPO)" =~ "github.com" ]] ; then
      echo "Checkout submodules"
      git submodule update --init --recursive --depth=1
    else
      echo "Checkout submodules with URL rewrite"
      git \
        -c url."$(cat /run/secrets/SOURCE_REPO)/".insteadOf=https://github.com/  \
        -c url."$(cat /run/secrets/SOURCE_REPO)/".insteadOf=https://gitlab.com/  \
        submodule update --init --recursive --depth=1
    fi

---
{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
altPackages:
- binutils
- gcc-c++
- git gettext
- bash-completion
- clang ccache
- make cmake
- meson ninja-build
- iproute iptables iptables-nft iptables-ipv6
- openvswitch ebtables
- pkgconfig
- polkit kmod
- parted
- qemu-img open-iscsi
- xml-utils xsltproc
- polkit
- python3 python3-devel
- python3-module-pytest python3-module-docutils
- python3-tools python3-module-pip
- python3-module-black
- mdevctl tshark
- dmsetup pm-utils
- tree
altLibraries:
- libpciaccess-devel
- libyajl-devel sanlock-devel
- libpcap-devel
- libparted-devel
- libdevmapper-devel
- ceph-devel
- libiscsi-devel libglusterfs-devel
- systemtap-sdt-devel
- wireshark-devel
- libclocale
- libyajl-devel
packages:
- dmidecode lvm2 libattr libbsd libmd util-linux
- libgcrypt libfuse3 libaudit libnbd libcap-ng
- openssl libcurl e2fsprogs libxcrypt numactl
- zlib p11-kit
- libssh libssh2 libjson-c5 keyutils
- krb5 xz
- readline
- selinux
- cyrus-sasl2
- libtasn1 libtirpc
- glib2 acl libunistring libxml2
- gnutls
- systemd libnl3 libslirp
- glibc
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
final: false
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/alt" "builder/alt-go-svace" }}
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
  add: /src/{{ $gitRepoName }}-{{ $version }}
  to: /{{ $gitRepoName }}-{{ $version }}
  before: install
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
  add: /src/patches
  to: /patches
  before: install
{{- include "importPackageImages" (list . $builderDependencies.packages "install") -}}
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.altPackages | join " " }} \
      {{ $builderDependencies.altLibraries | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}
  - |
    rm -f /usr/lib*/python3*/EXTERNALLY-MANAGED
    rpm -qa | sort > /packages.txt
    mkdir -p /usr/libexec/ccache-wrappers
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/cc
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/clang
    ln -s /usr/bin/ccache /usr/libexec/ccache-wrappers/gcc

  install:
  - |
    # Install packages
    PKGS="{{ $builderDependencies.packages | join " " }}"
    for pkg in $PKGS; do
      cp -a /$pkg/. /
      rm -rf /$pkg
    done

    export CCACHE_WRAPPERSDIR="/usr/libexec/ccache-wrappers"
    export CCACHE_DIR="$CCACHE_BASEDIR/ccache"
    export CCACHE_BASEDIR="$(pwd)"
    export PATH="$CCACHE_WRAPPERSDIR:$PATH"
    export MAKE="/usr/bin/make"
    export NINJA="/usr/bin/ninja"
    export PYTHON="/usr/bin/python3"

    cd /{{ $gitRepoName }}-{{ $version }}

    for p in /patches/*.patch ; do
      echo -n "Apply ${p} ... "
      git apply  --ignore-space-change --ignore-whitespace ${p} && echo OK || (echo FAIL ; exit 1)
    done

    CFLAGS="-Wframe-larger-than=262144" meson setup build \
      -Dinit_script=systemd \
      -Dsystem=true \
      -Dremote_default_mode=direct \
      -Dpciaccess=enabled \
      -Dsasl=enabled \
      -Dpolkit=enabled \
      -Dlibssh=enabled \
      -Dlibssh2=enabled \
      -Dnumactl=enabled \
      -Dcapng=enabled \
      -Dudev=enabled \
      -Ddriver_network=enabled \
      -Ddriver_interface=enabled \
      -Ddriver_libvirtd=enabled \
      -Ddriver_qemu=enabled \
      -Ddriver_remote=enabled \
      -Dselinux=enabled \
      -Dselinux_mount=enabled \
      -Ddriver_esx=disabled -Dcurl=disabled \
      -Dfirewalld=disabled \
      -Dfirewalld_zone=disabled \
      -Ddocs=disabled \
      -Ddriver_ch=disabled \
      -Ddriver_lxc=disabled -Dlogin_shell=disabled \
      -Ddriver_openvz=disabled \
      -Ddriver_test=disabled \
      -Ddriver_vbox=disabled \
      -Ddriver_vmware=disabled \
      -Ddriver_hyperv=disabled -Dopenwsman=disabled \
      -Ddriver_vz=disabled \
      -Ddriver_bhyve=disabled \
      -Dvbox_xpcomc_dir=disabled \
      -Dwireshark_dissector=disabled \
      -Dwireshark_plugindir=disabled \
      -Dstorage_gluster=disabled -Dglusterfs=disabled \
      -Dstorage_fs=disabled \
      -Dstorage_lvm=disabled \
      -Dstorage_zfs=disabled \
      -Dstorage_vstorage=disabled \
      -Dstorage_rbd=disabled \
      -Dstorage_mpath=disabled \
      -Dstorage_iscsi=disabled \
      -Dstorage_iscsi_direct=disabled -Dlibiscsi=disabled \
      -Dlibiscsi=disabled


      {{- $_ := set $ "ProjectName" (list $.ImageName "libvirt" | join "/") }}
      {{- include "image-build.build" (set $ "BuildCommand" `ninja -C build -j$(nproc)`) | nindent 6 }}

  setup:
  - |
    OUTDIR=/out
    cd /{{ $gitRepoName }}-{{ $version }}
    DESTDIR=$OUTDIR ninja -C build install
    rm -rf $OUTDIR/var
    rm -rf $OUTDIR/usr/share/systemtap/tapset/libvirt_probes.stp
    rm -rf $OUTDIR/usr/share/systemtap/tapset/libvirt_qemu_probes.stp
    rm -rf $OUTDIR/usr/lib64/libvirt/lock-driver/sanlock.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_disk.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_gluster.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_iscsi.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_iscsi-direct.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_logical.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_mpath.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_rbd.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_scsi.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_vstorage.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-backend/libvirt_storage_backend_zfs.so
    rm -rf $OUTDIR/usr/lib64/libvirt/storage-file/libvirt_storage_file_gluster.so
    rm -rf $OUTDIR/usr/lib64/libvirt/connection-driver/libvirt_driver_lxc.so
    rm -rf $OUTDIR/usr/lib64/libvirt/connection-driver/libvirt_driver_ch.so
    rm -rf $OUTDIR/usr/lib64/libvirt/connection-driver/libvirt_driver_vbox.so
    rm -rf $OUTDIR/usr/sbin/virtlxcd
    rm -rf $OUTDIR/usr/sbin/virtchd
    rm -rf $OUTDIR/usr/sbin/virtvboxd
    rm -rf $OUTDIR/usr/libexec/libvirt_sanlock_helper
    rm -rf $OUTDIR/usr/libexec/libvirt_parthelper
    rm -rf $OUTDIR/usr/libexec/libvirt_lxc
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_libvirt_lockd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_libvirt_sanlock.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtlockd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_libvirtd_network.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_libvirtd_lxc.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_libvirtd_qemu.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_libvirtd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtproxyd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtinterfaced.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtnetworkd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtnodedevd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtnwfilterd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtsecretd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtstoraged.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtlxcd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtchd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtqemud.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/tests/test_virtvboxd.aug
    rm -rf $OUTDIR/usr/bin/virt-login-shell
    rm -rf $OUTDIR/usr/libexec/virt-login-shell-helper
    rm -rf $OUTDIR/usr/bin/virsh
    rm -rf $OUTDIR/usr/bin/virt-admin
    rm -rf $OUTDIR/usr/lib64/wireshark/plugins/4.4/epan/libvirt.so
    rm -rf $OUTDIR/usr/include/libvirt/libvirt-lxc.h
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_a64fx.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_cortex-a53.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_cortex-a57.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_cortex-a72.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_Falkor.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_FT-2000plus.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_features.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_Kunpeng-920.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_Neoverse-N1.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_Neoverse-N2.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_Neoverse-V1.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_Tengyun-S2500.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_ThunderX299xx.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/arm_vendors.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/ppc64_POWER6.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/ppc64_POWER7.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/ppc64_POWER8.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/ppc64_POWER9.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/ppc64_POWER10.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/ppc64_POWERPC_e5500.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/ppc64_POWERPC_e6500.xml
    rm -rf $OUTDIR/usr/share/libvirt/cpu_map/ppc64_vendors.xml
    rm -rf $OUTDIR/usr/share/libvirt/schemas/basictypes.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/capability.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/cpu.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/cputypes.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/domainbackup.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/domaincaps.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/domaincheckpoint.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/domaincommon.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/domain.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/domainoverrides.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/domainsnapshot.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/inactiveDomain.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/interface.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/networkcommon.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/networkport.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/network.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/nodedev.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/nwfilterbinding.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/nwfilter_params.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/nwfilter.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/privatedata.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/secret.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/storagecommon.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/storagepoolcaps.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/storagepool.rng
    rm -rf $OUTDIR/usr/share/libvirt/schemas/storagevol.rng
    rm -rf $OUTDIR/etc/logrotate.d/libvirtd.qemu.logrotate
    rm -rf $OUTDIR/etc/logrotate.d/libvirtd.lxc.logrotate
    rm -rf $OUTDIR/etc/logrotate.d/libvirtd.libxl.logrotate
    rm -rf $OUTDIR/etc/logrotate.d/libvirtd.logrotate
    rm -rf $OUTDIR/etc/libvirt/qemu/networks/default.xml
    rm -rf $OUTDIR/usr/lib/firewalld/zones/libvirt.zone
    rm -rf $OUTDIR/usr/lib/firewalld/zones/libvirt-routed.zone
    rm -rf $OUTDIR/usr/lib/firewalld/policies/libvirt-to-host.policy
    rm -rf $OUTDIR/usr/lib/firewalld/policies/libvirt-routed-out.policy
    rm -rf $OUTDIR/usr/lib/firewalld/policies/libvirt-routed-in.policy
    rm -rf $OUTDIR/etc/libvirt/nwfilter/allow-arp.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/allow-dhcp-server.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/allow-dhcp.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/allow-dhcpv6-server.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/allow-dhcpv6.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/allow-incoming-ipv4.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/allow-incoming-ipv6.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/allow-ipv4.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/allow-ipv6.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/clean-traffic-gateway.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/clean-traffic.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-arp-ip-spoofing.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-arp-mac-spoofing.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-arp-spoofing.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-ip-multicast.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-ip-spoofing.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-ipv6-multicast.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-ipv6-spoofing.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-mac-broadcast.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-mac-spoofing.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-other-l2-traffic.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/no-other-rarp-traffic.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/qemu-announce-self-rarp.xml
    rm -rf $OUTDIR/etc/libvirt/nwfilter/qemu-announce-self.xml
    rm -rf $OUTDIR/usr/lib/sysusers.d/libvirt-qemu.sysusers.conf
    rm -rf $OUTDIR/usr/lib/sysctl.d/postcopy-migration.sysctl
    rm -rf $OUTDIR/usr/share/libvirt/test-screenshot.png
    rm -rf $OUTDIR/etc/libvirt/libvirt-admin.conf
    rm -rf $OUTDIR/etc/libvirt/qemu-lockd.conf
    rm -rf $OUTDIR/etc/libvirt/qemu-sanlock.conf
    rm -rf $OUTDIR/etc/libvirt/virtlockd.conf
    rm -rf $OUTDIR/etc/libvirt/lxc.conf
    rm -rf $OUTDIR/etc/libvirt/qemu.conf
    rm -rf $OUTDIR/usr/share/augeas/lenses/libvirt_lockd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/libvirt_sanlock.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtlockd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtlogd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/libvirtd_network.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/libvirtd_lxc.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/libvirtd_qemu.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/libvirtd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtproxyd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtinterfaced.aug
    rm -rf $OUTDIR/etc/libvirt/virtnetworkd.conf
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtnetworkd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtnodedevd.aug
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtnwfilterd.aug
    rm -rf $OUTDIR/etc/libvirt/virtsecretd.conf
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtsecretd.aug
    rm -rf $OUTDIR/etc/libvirt/virtstoraged.conf
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtstoraged.aug
    rm -rf $OUTDIR/etc/libvirt/virtlxcd.conf
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtlxcd.aug
    rm -rf $OUTDIR/etc/libvirt/virtchd.conf
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtchd.aug
    rm -rf $OUTDIR/etc/libvirt/virtqemud.conf
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtqemud.aug
    rm -rf $OUTDIR/etc/libvirt/virtvboxd.conf
    rm -rf $OUTDIR/usr/share/augeas/lenses/virtvboxd.aug
    rm -rf $OUTDIR/usr/lib/systemd/system/libvirtd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtproxyd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtinterfaced.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtlockd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtlogd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtlogd.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtlogd-admin.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtnetworkd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtnodedevd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtnwfilterd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtnwfilterd.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtnwfilterd-ro.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtnwfilterd-admin.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtsecretd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtstoraged.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtlxcd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtlxcd.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtlxcd-ro.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtlxcd-admin.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtchd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtqemud.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtvboxd.service
    rm -rf $OUTDIR/usr/lib/systemd/system/virtvboxd.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtvboxd-ro.socket
    rm -rf $OUTDIR/usr/lib/systemd/system/virtvboxd-admin.socket
    rm -rf $OUTDIR/usr/sbin/virt-sanlock-cleanup
    rm -rf $OUTDIR/usr/lib/systemd/system/libvirt-guests.service
    rm -rf $OUTDIR/usr/bin/virt-qemu-qmp-proxy
    rm -rf $OUTDIR/usr/share/bash-completion/completions/virsh
    rm -rf $OUTDIR/usr/share/bash-completion/completions/virt-admin
    rm -rf $OUTDIR/etc/ssh/ssh_config.d/30-libvirt-ssh-proxy.conf
    find $OUTDIR -type f -executable | while read -r execfile; do
    if strip "$execfile"; then
      echo "Stripped: $execfile"
    fi
    done
    tree -hp $OUTDIR