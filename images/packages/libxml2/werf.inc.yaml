---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
  add: /out
  to: /{{ .ImageName }}
  before: setup

---
{{- $version := get .PackageVersion .ImageName }}
{{- $gitRepoUrl := "GNOME/libxml2.git" }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src
---

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
altPackages:
- gcc gcc-c++
- make autoconf automake libtool pkgconfig
- libssl-devel 
- python3-devel python3-module-setuptools
- gettext-devel
- xz
packages:
- zlib
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
final: false
fromImage: builder/alt
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
{{- include "importPackageImages" (list . $builderDependencies.packages "install") -}}
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.altPackages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    # Install packages
    PKGS="{{ $builderDependencies.packages | join " " }}"
    for pkg in $PKGS; do
      cp -a /$pkg/. /
      rm -rf /$pkg
    done
    
    OUTDIR=/out

    cd /src
    
    ./autogen.sh \
    --prefix=/usr/local \
    --without-python \
    --without-debug \
    --without-legacy \
    --without-catalog \
    --without-docbook \
    --without-ftp \
    --without-html \
    --without-http \
    --without-iconv \
    --without-iso8859x \
    --without-modules \
    --without-output \
    --without-pattern \
    --without-push \
    --without-regexps \
    --without-sax1 \
    --without-schemas \
    --without-schematron \
    --without-trio \
    --without-valid \
    --without-xinclude \
    --without-xpath \
    --without-xptr \
    --without-zlib \
    --without-lzma

    make -j$(nproc)

    make DESTDIR=$OUTDIR install
