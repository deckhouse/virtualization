---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
  add: /out
  to: /{{ $.ImageName }}
  before: setup
---
{{- $version := get .PackageVersion .ImageName }}
{{- $gitRepoUrl := "file/file.git" }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - |
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src
---

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
packages:
- gcc git libtool
- make automake autoconf libtool makeinfo
- pkg-config
- bison
- bzlib-devel liblzma-devel libseccomp-devel libzstd-devel zlib-devel lzip ncompress strace
{{- end -}}


{{ $builderDependencies := include "$name" . | fromYaml }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
final: false
fromImage: builder/alt
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
{{- $images := list "libcap" -}}
{{- include "importPackageImages" (list $images "install") -}}
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.packages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    tree /libcap
    PKGS="{{ $images | join " " }}"
    for pkg in $PKGS; do
      cp -a /$pkg/. /
      rm -rf /$pkg
    done

    OUTDIR=/out
    cd /src

    autoreconf -f -i
    ./configure --prefix=/usr --libdir=/usr/lib64 --datadir=/usr/share

    make install -j $(nproc) DESTDIR=$OUTDIR

    rm -rf $OUTDIR/share/man
