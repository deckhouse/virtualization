---
image: {{ $.ImageType }}/{{ $.ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ $.ImageType }}/{{ $.ImageName }}-builder
  add: /out
  to: /{{ $.ImageName }}
  before: setup
---
image: {{ $.ImageType }}/{{ $.ImageName }}-binaries
final: false
fromImage: builder/scratch
import:
- image: {{ $.ImageType }}/{{ $.ImageName }}-builder
  add: /out
  to: /{{ $.ImageName }}-binaries
  before: setup
  includePaths:
  - usr/bin
---
image: {{ $.ImageType }}/{{ $.ImageName }}-libraries
final: false
fromImage: builder/scratch
import:
- image: {{ $.ImageType }}/{{ $.ImageName }}-builder
  add: /out
  to: /{{ $.ImageName }}-libraries
  before: setup
  includePaths:
  - usr/lib64
  excludePaths:
  - usr/lib64/libmagic.la
---
{{- $version := get $.Library $.ImageName }}
{{- $gitRepoUrl := "file/file.git" }}

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
packages:
- gcc git libtool
- make automake autoconf libtool makeinfo
- pkg-config
- bison
- bzlib-devel libcap-devel liblzma-devel libseccomp-devel libzstd-devel zlib-devel lzip ncompress strace
{{- end -}}


{{ $builderDependencies := include "$name" . | fromYaml }}

image: {{ $.ImageType }}/{{ $.ImageName }}-builder
final: false
fromImage: builder/alt
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  beforeInstall:
    - |
      apt-get update && apt-get install -y \
        {{ $builderDependencies.packages | join " " }}

      apt-get clean
      rm --recursive --force /var/lib/apt/lists/ftp.altlinux.org* /var/cache/apt/*.bin

  install:
    - |
      OUTDIR=/out
      mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config
      
      git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src
      cd /src
      
      autoreconf -f -i
      ./configure --prefix=/usr --libdir=/usr/lib64 --datadir=/usr/share
      
      make install -j $(nproc) DESTDIR=$OUTDIR

      rm -rf $OUTDIR/share/man
