---
image: {{ $.ImageType }}/{{ $.ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ $.ImageType }}/{{ $.ImageName }}-builder
  add: /out
  to: /gnutls
  before: setup

---
{{- $version := get $.Package $.ImageName }}
{{- $gitRepoUrl := "gnutls/gnutls.git" }}

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
packages:
- gcc-c++ gcc git gperf glibc-devel-static wget pkgconfig
- make autoconf automake libtool makeinfo gettext-devel patch
- perl-Net-SSLeay perl-IPC-Cmd perl-Pod-Html
- gem-gettext-devel gettext po4a
- libp11-kit-devel libunistring-devel
- libtpm2-tss-devel libtrousers-devel
- libtasn1-devel libtasn1-utils zlib-devel
- libunbound-devel bison gtk-doc texinfo texlive
- libev4 libev-devel libopencdk-devel
- libzstd-devel openssl libssl-devel iproute2-devel liboqs-devel libreadline-devel
# - libidn2-devel
# - libbrotli-devel
# - libgcrypt-devel
- libnettle-devel
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}

image: {{ $.ImageType }}/{{ $.ImageName }}-builder
final: false
fromImage: builder/alt
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO }}
import:
- image: packages/binaries/libbrotli
  add: /libbrotli
  to: /libbrotli
  before: install
- image: packages/binaries/libidn2
  add: /libidn2
  to: /libidn2
  before: install
- image: packages/binaries/libgcrypt
  add: /libgcrypt
  to: /libgcrypt
  before: install
# - image: packages/binaries/nettle
#   add: /nettle
#   to: /nettle
#   before: install
- image: packages/binaries/gmp
  add: /libgmp
  to: /libgmp
  before: install
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.packages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    # Install packages
    # PKGS="libbrotli libidn2 libgcrypt nettle libgmp"
    PKGS="libbrotli libidn2 libgcrypt libgmp"
    for pkg in $PKGS; do
      cp -a /$pkg/. /
      rm -rf /$pkg
    done

    OUTDIR=/out
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src
    cd /src

    ./bootstrap --skip-po
    ./configure \
      --prefix=/usr \
      --libdir=/usr/lib64 \
      --with-default-trust-store-file=/usr/share/ca-certificates/ca-bundle.crt \
      --disable-tests \
      --disable-doc

    make -j$(nproc)

    make DESTDIR=$OUTDIR install-strip
