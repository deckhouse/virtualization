---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
  add: /out
  to: /glibc
  before: setup

---
{{- $version := get .PackageVersion .ImageName }}
{{- $gitRepoUrl := "glibc.git" }}
{{- $PkgImageName := (printf "%s/%s" .PackagePath .ImageName) }}

image: {{ .ModuleNamePrefix }}{{ $PkgImageName }}-src-artifact
final: false
fromImage: builder/src
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - |
    mkdir -p ~/.ssh && echo "StrictHostKeyChecking accept-new" > ~/.ssh/config

    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src
    # rm -rf /src/.git
---

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
packages:
- gcc
- git pkg-config cmake
- hardlink binutils glibc-kernheaders
- make bison python3
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
final: false
fromImage: builder/alt
import:
- image: {{ .ModuleNamePrefix }}{{ $PkgImageName }}-src-artifact
  add: /src
  to: /src
  before: install
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.packages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    OUTDIR=/out

    mkdir /build
    cd /build

    ../src/configure \
      --prefix=/usr \
      --libdir=/usr/lib64 \
      --disable-crypt \
      --disable-profile \
      --enable-bind-now \
      --enable-obsolete-rpc \
      --enable-stack-protector=strong \
      --enable-fortify-source=3 \

    make -j$(nproc)

    make DESTDIR=$OUTDIR install

