---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
  add: /out
  to: /p11-kit
  before: setup

---
{{- $version := get .PackageVersion .ImageName }}
{{- $gitRepoUrl := "p11-glue/p11-kit.git" }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src
---

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
altPackages:
- git gcc gcc-c++ make meson 
- ninja pkg-config 
- glib2-devel libffi-devel libtasn1-devel libnss-devel
- gettext-devel openssl-devel ca-certificates
- tree
# packages:
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
final: false
fromImage: builder/alt
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.altPackages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    OUTDIR=/out

    cd /src

    ./autogen.sh
    ./configure \
      --prefix=/usr \
      --libdir=lib64 \
      --sysconfdir=/etc \
      --localstatedir=/var \
      --enable-shared \
      --disable-static \
      --disable-doc

    make -j $(nproc)
    make install DESTDIR=$OUTDIR
    strip $OUTDIR/usr/bin/p11-kit
    strip $OUTDIR/usr/lib64/libp11-kit.so.*
    tree -sp $OUTDIR

    # DESTDIR=$OUTDIR ninja install
