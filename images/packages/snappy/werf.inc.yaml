---
image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}
final: false
fromImage: builder/scratch
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
  add: /out
  to: /{{ .ImageName }}
  before: setup

---
{{- $version := get .PackageVersion .ImageName }}
{{- $gitRepoUrl := "google/snappy.git" }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
final: false
fromImage: builder/src
secrets:
- id: SOURCE_REPO
  value: {{ $.SOURCE_REPO_GIT }}
shell:
  install:
  - |
    git clone --depth=1 $(cat /run/secrets/SOURCE_REPO)/{{ $gitRepoUrl }} --branch {{ $version }} /src

    cd /src
    if [[ "$(cat /run/secrets/SOURCE_REPO)" =~ "github.com" ]] ; then
      echo "Checkout submodules"
      git submodule update --init --recursive --depth=1
    else
      echo "Checkout submodules with URL rewrite"
      git \
        -c url."$(cat /run/secrets/SOURCE_REPO)/".insteadOf=https://github.com/  \
        -c url."$(cat /run/secrets/SOURCE_REPO)/".insteadOf=https://gitlab.com/  \
        submodule update --init --recursive --depth=1
    fi
---

{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
altPackages:
- gcc gcc-c++ autoconf automake libtool make pkg-config
- cmake libgflags-devel
- libgtest-devel liblzo2-devel
- llvm-devel
- tree
packages:
- zlib
{{- end -}}

{{ $builderDependencies := include "$name" . | fromYaml }}

image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-builder
final: false
fromImage: builder/alt
import:
- image: {{ .ModuleNamePrefix }}{{ .PackagePath }}/{{ .ImageName }}-src-artifact
  add: /src
  to: /src
  before: install
{{- include "importPackageImages" (list . $builderDependencies.packages "install") -}}
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $builderDependencies.altPackages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    # Install packages
    PKGS="{{ $builderDependencies.packages | join " " }}"
    for pkg in $PKGS; do
      cp -a /$pkg/. /
      rm -rf /$pkg
    done
    
    OUTDIR=/out

    cd /src

    mkdir build
    cd build
    cmake -S /src \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DBUILD_SHARED_LIBS=ON

      

    make -j$(nproc)
    make -j$(nproc) DESTDIR=$OUTDIR PREFIX=/usr install

    prefix=/usr
    exec_prefix=${prefix}
    libdir=${exec_prefix}/lib64
    includedir=${prefix}/include
    
    cat << EOF >$OUTDIR/usr/lib64/pkgconfig/snappy.pc
    prefix=${prefix}
    exec_prefix=${prefix}
    libdir=${exec_prefix}/lib64
    includedir=${prefix}/include

    Name: {{ .ImageName }}
    Description: A fast compression/decompression library
    Version: {{ $version }}
    URL: https://github.com/google/snappy
    Libs: -L${libdir} -lsnappy
    Cflags: -I${includedir}
    EOF

    find $OUTDIR -type f -executable | while read -r execfile; do
    if strip "$execfile"; then
      echo "Stripped: $execfile"
    fi
    done

    tree -sph $OUTDIR
