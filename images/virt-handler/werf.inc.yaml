---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}
fromImage: {{ .ModuleNamePrefix }}distroless
import:
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-bins
  add: /relocate
  to: /
  after: install
# GNU utilities
# deps for 031-hotplug-container-disk.patch
- image: tools/coreutils
  add: /
  to: /
  after: install
  includePaths:
  - usr/bin/cp
  - usr/bin/coreutils
- image: {{ .ModuleNamePrefix }}virt-artifact
  add: /kubevirt-binaries/
  to: /usr/bin
  after: install
  includePaths:
  - virt-chroot
  - virt-handler
  - container-disk
- image: {{ .ModuleNamePrefix }}virt-artifact
  add: /kubevirt/cmd/{{ $.ImageName }}/virt_launcher.cil
  to: /virt_launcher.cil
  after: install
- image: {{ .ModuleNamePrefix }}virt-artifact
  add: /kubevirt-config-files/.version
  to: /.version
  after: install
  includePaths:
  - .version
- image: {{ .ModuleNamePrefix }}virt-artifact
  add: /kubevirt/cmd/{{ $.ImageName }}/
  to: /etc
  after: install
  includePaths:
  - nsswitch.conf
{{- if and (eq $.DELVE_DEBUG "true") (eq $.COMPONENT_DEBUG "delve/virt-handler") }}
- image: debuger
  add: /app/dlv
  to: /app/dlv
  after: install
{{- end }}
# Source https://github.com/kubevirt/kubevirt/blob/v1.3.1/cmd/virt-handler/BUILD.bazel
imageSpec:
  config:
    user: 0
    {{- if and (eq $.DELVE_DEBUG "true") (eq $.COMPONENT_DEBUG "delve/virt-handler") }}
    env:
      PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/app/dlv"
      XDG_CONFIG_HOME: "/tmp"
    entrypoint: ["/app/dlv", "--listen=:2345", "--headless=true", "--continue", "--log=true", "--log-output=debugger,debuglineerr,gdbwire,lldbout,rpc", "--accept-multiclient", "--api-version=2", "exec", "/usr/bin/virt-handler", "--"]
    {{- else }}
    entrypoint: ["/usr/bin/virt-handler"]
    {{- end }}

---
{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
packages:
- libnftnl
- libjansson4
binaries:
- /usr/bin/getfacl
- /usr/bin/setfacl
- /usr/sbin/nft
- /usr/bin/xorriso
- /usr/bin/xorrecord
- /usr/bin/osirrox
- /usr/bin/xorriso-dd-target
- /usr/bin/xorrisofs
# debug
- /usr/bin/findmnt
{{- end -}}

{{ $virtHandlerDependencies := include "$name" . | fromYaml }}

image: {{ .ModuleNamePrefix }}{{ .ImageName }}-bins
final: false
fromImage: {{ .ModuleNamePrefix }}base-alt-p11-binaries
import:
- image: tools/util-linux
  add: /
  to: /relocate/usr
  after: setup
  includePaths:
  - bin/mount
  - bin/umount
{{- $images := list "libisoburn" "nftables" "acl" -}}
{{- include "importPackageImages" (list . $images "install") -}}
- image: {{ .ModuleNamePrefix }}qemu
  add: /qemu-img
  to: /relocate
  before: setup
shell:
  install:
    {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install --yes \
      {{ $virtHandlerDependencies.packages | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}
  - |
    # Install packages
    PKGS="{{ $images | join " " }}"
    for pkg in $PKGS; do
      cp -a /$pkg/. /
      rm -rf /$pkg
    done

  setup:
  - |
    /relocate_binaries.sh -i "{{ $virtHandlerDependencies.binaries | join " " }}" -o /relocate

    mkdir -p /relocate/etc /relocate/root
    echo "root:x:0:0:root:/root:/bin/bash" >> /relocate/etc/passwd
    echo "root:x:0:" >> /relocate/etc/group
    echo "root:x:::::::" >> /relocate/etc/shadow

    echo "qemu:x:107:107::/home/qemu:/bin/bash" >> /relocate/etc/passwd
    echo "qemu:x:107:" >> /relocate/etc/group
    mkdir -p /relocate/home/qemu
    chown -R 107:107 /relocate/home/qemu

    echo "127.0.0.1       localhost" >> /relocate/etc/hosts

