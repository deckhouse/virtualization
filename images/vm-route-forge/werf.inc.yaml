---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-builder
final: false
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/golang-bookworm-1.23" "builder/alt-go-svace" }}
git:
- add: {{ .ImagePath }}
  to: /app/images/vm-route-forge
  stageDependencies:
    install:
    - go.mod
    - go.sum
    setup:
    - "**/*.go"
- add: {{ .ModuleDir }}/api
  to: /app/api
  stageDependencies:
    setup:
    - "**/*.go"
secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}
mount:
- fromPath: ~/go-pkg-cache
  to: /go/pkg
shell:
  install:
  - export GOPROXY=$(cat /run/secrets/GOPROXY)
  - cd /app/images/vm-route-forge
  - go mod download
  setup:
  - cd /app/images/vm-route-forge
  - export GOOS=linux
  - export GOARCH=amd64
  - export CGO_ENABLED=0
  - |
    {{- $_ := set $ "ProjectName" (list $.ImageName "vm-route-forge" | join "/") }}
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" -o vm-route-forge cmd/vm-route-forge/main.go`) | nindent 6 }}
---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}
fromImage: {{ .ModuleNamePrefix }}distroless
import:
- image: {{ .ModuleNamePrefix }}{{ .ImageName }}-builder
  add: /app/images/vm-route-forge/vm-route-forge
  to: /app/vm-route-forge
  after: install
imageSpec:
  config:
    user: 64535
    workingDir: "/app"
    entrypoint: ["/app/vm-route-forge"]
