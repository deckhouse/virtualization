---
image: {{ $.ImageName }}-builder
final: false
fromImage: BASE_GOLANG_22_BOOKWORM
git:
- add: /images/{{ $.ImageName }}
  to: /src
  stageDependencies:
    install:
    - go.mod
    - go.sum
    setup:
    - "**/*.go"
shell:
  install:
  - apt-get -qq update
  - apt-get -qq install -y --no-install-recommends libnbd-dev
  - apt-get clean
  - rm --recursive --force /var/lib/apt/lists/* /var/cache/apt/*
  setup:
  - mkdir /out
  - cd /src
  - |
    export GO111MODULE=on
    export GOOS=linux
    export CGO_ENABLED=1
    export GOARCH=amd64
  - go build -ldflags="-s -w" -o /out/dvcr-importer ./cmd/dvcr-importer
  - go build -ldflags="-s -w" -o /out/dvcr-uploader ./cmd/dvcr-uploader
  - CGO_ENABLED=0 go build -ldflags="-s -w" -o /out/dvcr-cleaner ./cmd/dvcr-cleaner
  - chown -R 64535:64535 /out

---
{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
binaries:
- /usr/local/bin/dvcr-importer
- /usr/bin/nbd*
- /usr/bin/file
- /usr/share/misc/magic.mgc
- /usr/local/bin/dvcr-uploader
- /usr/local/bin/dvcr-cleaner
{{- end -}}

{{ $dvcrDependencies := include "$name" . | fromYaml }}

image: {{ $.ImageName }}-bins
final: false
fromImage: base-alt-p11-binaries
import:
- image: tools/util-linux
  add: /
  to: /relocate/usr
  after: setup
  includePaths:
  - bin/mount
  - bin/umount
- image: {{ $.ImageName }}-builder
  add: /out
  to: /usr/local/bin
  before: setup
- image: packages/binaries/file
  add: /file
  to: /file
  before: install
# deps for file
- image: packages/binaries/bzip2
  add: /bzip2
  to: /relocate
  includePaths:
  - usr/lib64
  before: setup
- image: qemu
  add: /qemu-img
  to: /relocate
  before: setup
shell:
  install:
  - |
    apt-get update && apt-get install --yes \
      libnbd
    apt-get clean
    rm --recursive --force /var/lib/apt/lists/ftp.altlinux.org* /var/cache/apt/*.bin

    cp -a /file/. /
  setup:
  - |
    /relocate_binaries.sh -i "{{ $dvcrDependencies.binaries | join " " }}" -o /relocate
