---
image: {{ $.ImageName }}-builder
final: false
fromImage: {{ eq $.SVACE_ENABLED "false" | ternary "builder/golang-bookworm-1.23" "builder/alt-go-svace" }}
git:
- add: /images/{{ $.ImageName }}
  to: /src
  stageDependencies:
    install:
    - go.mod
    - go.sum
    setup:
    - "**/*.go"
shell:
  install:
{{- if eq $.SVACE_ENABLED "false" }}
  {{- include "debian packages proxy" . | nindent 2 }}
  - apt-get -qq install -y --no-install-recommends libnbd-dev
  {{- include "debian packages clean" . | nindent 2 }}
{{- else }}
  {{- include "alt packages proxy" . | nindent 2 }}
  - apt-get -qq install -y libnbd-devel
  {{- include "alt packages clean" . | nindent 2 }}
{{- end }}
  setup:
  - mkdir /out
  - cd /src
  - |
    export GO111MODULE=on
    export GOOS=linux
    export CGO_ENABLED=1
    export GOARCH=amd64
  - |
    {{- $_ := set $ "ProjectName" (list $.ImageName "dvcr-importer" | join "/") }}
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" -o /out/dvcr-importer ./cmd/dvcr-importer`) | nindent 6 }}
    {{- $_ := set $ "ProjectName" (list $.ImageName "dvcr-uploader" | join "/") }}
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" -o /out/dvcr-uploader ./cmd/dvcr-uploader`) | nindent 6 }}
  - |
    export CGO_ENABLED=0
    {{- $_ := set $ "ProjectName" (list $.ImageName "dvcr-cleaner" | join "/") }}
    {{- include "image-build.build" (set $ "BuildCommand" `go build -ldflags="-s -w" -o /out/dvcr-cleaner ./cmd/dvcr-cleaner`) | nindent 6 }}
  - chown -R 64535:64535 /out

---
{{- $name := print $.ImageName "-dependencies" -}}
{{- define "$name" -}}
libraries:
- libnbd
binaries:
- /usr/local/bin/dvcr-importer
- /usr/sbin/nbd*
- /usr/lib64/nbdkit/filters/*.so
- /usr/lib64/nbdkit/plugins/*.so
- /usr/bin/file
- /usr/share/misc/magic.mgc
- /usr/local/bin/dvcr-uploader
- /usr/local/bin/dvcr-cleaner
- /usr/bin/qemu-img
- /usr/bin/qemu-nbd
- /usr/lib64/libnbd.s*
{{- end -}}

{{ $dvcrDependencies := include "$name" . | fromYaml }}

image: {{ $.ImageName }}-bins
final: false
fromImage: base-alt-p11-binaries
import:
- image: tools/util-linux
  add: /
  to: /relocate/usr
  after: setup
  includePaths:
  - bin/mount
  - bin/umount
- image: {{ $.ImageName }}-builder
  add: /out
  to: /usr/local/bin
  before: setup
- image: packages/binaries/file
  add: /file
  to: /file
  before: install
# deps for file
- image: packages/binaries/bzip2
  add: /bzip2
  to: /bzip2
  before: install
- image: packages/binaries/nbdkit
  add: /nbdkit
  to: /nbdkit
  before: install
- image: qemu
  add: /qemu-img
  to: /qemu-img
  before: install
shell:
  beforeInstall:
  {{- include "alt packages proxy" . | nindent 2 }}
  - |
    apt-get install -y \
      {{ $dvcrDependencies.libraries | join " " }}

  {{- include "alt packages clean" . | nindent 2 }}

  install:
  - |
    cp -a /qemu-img/. /
    cp -a /bzip2/. /
    cp -a /file/. /
    cp -a /nbdkit/. /
    rm -rf /{file,bzip2,qemu-img}

  setup:
  - |
    /relocate_binaries.sh -i "{{ $dvcrDependencies.binaries | join " " }}" -o /relocate
