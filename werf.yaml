project: virtualization
configVersion: 1
build:
  imageSpec:
    author: "Deckhouse <contact@deckhouse.io>"
    clearHistory: true
    config:
      clearWerfLabels: true
      removeLabels:
        - /.*/
---
# Base Images
{{- include "parse_base_images_map" . }}
---

# Source repo settings
{{- $_ := set . "SOURCE_REPO" (env "SOURCE_REPO" | default "https://github.com") }}

{{- $_ := set . "SOURCE_REPO_GIT" (env "SOURCE_REPO_GIT" | default "https://github.com") }}

# Edition module settings
{{- $_ := set . "MODULE_EDITION" (env "MODULE_EDITION") }}

# Component versions
{{ $_ := set . "Version" dict }}
{{ $_ := set . "Packages" dict }}
{{- $versions_ctx := (.Files.Get "component_versions/version_map.yml" | fromYaml) }}

{{- range $k, $v := $versions_ctx.firmware }}
  {{- $_ := set $.Version $k $v}}
{{- end }}

{{- range $k, $v := $versions_ctx.package }}
  {{- $_ := set $.Packages $k $v}}
{{- end }}


{{- $_ := set $ "ImagesIDList" list }}

{{- range $path, $content := .Files.Glob ".werf/*.yaml" }}
  {{- tpl $content $ }}
{{- end }}


---
image: images-digests
fromImage: BASE_ALPINE
dependencies:
  {{- range $ImageID := $.ImagesIDList }}
  {{- $ImageNameCamel  := $ImageID | splitList "/" | last  | camelcase | untitle }}
- image: {{ $ImageID }}
  before: setup
  imports:
    - type: ImageDigest
      targetEnv: MODULE_IMAGE_DIGEST_{{ $ImageNameCamel }}
  {{- end }}
shell:
  beforeInstall:
    - apk add --no-cache jq
  setup:
    - |
      env | grep MODULE_IMAGE_DIGEST | jq -Rn '
        reduce inputs as $i (
          {};
          . * (
            $i | ltrimstr("MODULE_IMAGE_DIGEST_") | sub("=";"_") |
            split("_") as [$imageName, $digest] |
            {($imageName): $digest}
          )
        )
      ' > /images_digests.json
      cat images_digests.json
---
image: python-dependencies
fromImage: BASE_ALT_P11
fromCacheVersion: "2024-11-07.1"
git:
  - add: /lib/python/requirements.txt
    to: /requirements.txt
shell:
  beforeInstall:
    - apt-get update
    - apt-get install -y python3 python3-module-pip-run
  setup:
    - pip3 install -r /requirements.txt -t /dist
---
image: bundle
fromImage: builder/scratch
fromCacheVersion: "2024-11-07.1"
import:
  - image: images-digests
    add: /images_digests.json
    to: /images_digests.json
    after: setup
  - image: python-dependencies
    add: /dist
    to: /lib/python/dist
    after: setup
  - image: hooks
    add: /hooks
    to: /hooks/go
    after: setup
git:
  - add: /
    to: /
    includePaths:
      - charts
      - crds
      - component_versions
      - docs
      - hooks
      - openapi
      - monitoring
      - templates
      - Chart.yaml
      - .helmignore
    excludePaths:
      - component_versions/README.md
      - hooks/lib/tests
      - hooks/test*
    {{- if eq .MODULE_EDITION "CE" }}
    {{- if .Values.virtualization.audit.enabled }}
    {{- if (.Values.global.enabledModules | has "log-shipper") }}
    {{- if (.Values.global.enabledModules | has "runtime-audit-engine") }}
      - templates/virtualization-audit
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
---
image: release-channel-version
fromImage: builder/scratch
shell:
  install:
    - echo  '{"version":"{{ env "MODULES_MODULE_TAG" }}"}' > version.json
