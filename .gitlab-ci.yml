stages:
  - info
  - lint
  - test
  - build
  - deploy
  - e2e
  - deploy_prod_alpha
  - deploy_prod_beta
  - deploy_prod_ea
  - deploy_prod_stable
  - deploy_prod_rock_solid

default:
  tags:
    - deckhouse

include:
- project: 'deckhouse/modules/gitlab-ci'
  ref: main
  file: '/templates/Setup.gitlab-ci.yml'
- project: 'deckhouse/modules/gitlab-ci'
  ref: main
  file: '/templates/Build.gitlab-ci.yml'
- project: 'deckhouse/modules/gitlab-ci'
  ref: main
  file: '/templates/Deploy.gitlab-ci.yml'


.info:
  script:
  - |
    cat << EOF
      ---
      apiVersion: deckhouse.io/v1alpha1
      kind: ModulePullOverride
      metadata:
        name: virtualization
      spec:
        imageTag: ${MODULES_MODULE_TAG}
        source: deckhouse

      ---
      apiVersion: deckhouse.io/v1alpha1
      kind: ModuleConfig
      metadata:
        name: ${MODULE_NAME}
      spec:
        enabled: true
        settings:
          dvcr:
            storage:
              type: PersistentVolumeClaim
              persistentVolumeClaim:
                size: 50G
          vmCIDRs:
            - 10.66.10.0/24
            - 10.66.20.0/24
            - 10.66.30.0/24
        version: 1
    EOF

# Vars =================================================================================================================

variables:
  MODULE_NAME: virtualization

# DEV registry
.dev_vars:
  variables:
    MODULES_MODULE_TAG: ${CI_COMMIT_REF_SLUG}
    MODULES_REGISTRY_LOGIN: ${EXTERNAL_MODULES_DEV_REGISTRY_LOGIN}
    MODULES_REGISTRY_PASSWORD: ${EXTERNAL_MODULES_DEV_REGISTRY_PASSWORD}
    MODULES_REGISTRY: dev-registry.deckhouse.io
    MODULES_MODULE_SOURCE: ${MODULES_REGISTRY}/sys/deckhouse-oss/modules
    ENV: DEV

# PROD registry
.prod_vars:
  variables:
    MODULES_MODULE_TAG: ${CI_COMMIT_REF_NAME}
    MODULES_REGISTRY_LOGIN: ${EXTERNAL_MODULES_PROD_REGISTRY_LOGIN}
    MODULES_REGISTRY_PASSWORD: ${EXTERNAL_MODULES_PROD_REGISTRY_PASSWORD}
    MODULES_REGISTRY: registry.deckhouse.io
    MODULES_MODULE_SOURCE: ${MODULES_REGISTRY}/deckhouse/${EDITION}/modules
    ENV: PROD

# Templates ============================================================================================================

.dev_rules:
  only:
    - merge_requests
  when: always

.main_rules:
  only:
    refs:
      - main
  when: always

.prod_rules:
  only:
    - tags
  except:
    - main
  when: manual

.dev:
  extends:
  - .dev_vars
  - .dev_rules

.main:
  extends:
  - .dev_vars
  - .main_rules

.prod:
  extends:
  - .prod_vars
  - .prod_rules

# DCO ==================================================================================================================

# dco:
#  stage: lint
#  script:
#   - pip3 install -U dco-check
#   - |
#         if [ "${CI_MERGE_REQUEST_EVENT_TYPE:-}" = detached ]; then
#             git fetch -a  # so that we can resolve branch names below
#             export CI_COMMIT_BRANCH="$CI_COMMIT_REF_NAME";
#             export CI_MERGE_REQUEST_SOURCE_BRANCH_SHA="$(git rev-parse "origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME")";
#             export CI_MERGE_REQUEST_TARGET_BRANCH_SHA="$(git rev-parse "origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME")";
#         fi
#   - dco-check --default-branch-from-remote --verbose
#  extends:
#  - .dev

# Info =============================================================================================

show_dev_manifest:
  stage: info
  extends:
    - .info
    - .dev

show_main_manifest:
  stage: info
  extends:
    - .info
    - .main

show_prod_manifest:
  stage: info
  extends:
    - .info
    - .prod

# Linsers and Tests ====================================================================================================

lint:virtualization-controller:
  stage: lint
  script:
      - task virtualization-controller:init
      - task virtualization-controller:lint
      # TODO: need to fix this
      # - task virtualization-controller:dvcr:lint
  extends:
  - .dev

test:virtualization-controller:
  stage: test
  script:
      - task virtualization-controller:init
      - task virtualization-controller:test:unit
  extends:
  - .dev

test:hooks:
  stage: test
  script:
      - task hooks:test
  extends:
  - .dev

# Build ================================================================================================================

build_dev:
  stage: build
  extends:
    - .build
    - .dev

build_main:
  stage: build
  extends:
    - .build
    - .main

build_prod:
  stage: build
  extends:
    - .build
    - .prod
  parallel:
    matrix:
    - EDITION:
        - ce
        - ee
        - fe

# Deploy ===============================================================================================================

deploy_to_prod_alpha:
  stage: deploy_prod_alpha
  variables:
    RELEASE_CHANNEL: alpha
  needs: ['build_prod']
  extends:
    - .deploy
    - .prod
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
          - fe

deploy_to_prod_beta:
  stage: deploy_prod_beta
  variables:
    RELEASE_CHANNEL: beta
  needs: ['deploy_to_prod_alpha']
  extends:
    - .deploy
    - .prod
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
          - fe

deploy_to_prod_ea:
  stage: deploy_prod_ea
  variables:
    RELEASE_CHANNEL: early-access
  needs: ['deploy_to_prod_beta']
  extends:
    - .deploy
    - .prod
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
          - fe

deploy_to_prod_stable:
  stage: deploy_prod_stable
  variables:
    RELEASE_CHANNEL: stable
  needs: ['deploy_to_prod_ea']
  extends:
    - .deploy
    - .prod
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
          - fe

deploy_to_prod_rock_solid:
  stage: deploy_prod_rock_solid
  variables:
    RELEASE_CHANNEL: rock-solid
  needs: ['deploy_to_prod_stable']
  extends:
    - .deploy
    - .prod
  parallel:
    matrix:
      - EDITION:
          - ce
          - ee
          - fe

# Other ================================================================================================================

e2e_for_main:
  stage: e2e
  needs: ['build_main']
  resource_group: main
  extends:
    - .main
  script:
  - echo e2e
