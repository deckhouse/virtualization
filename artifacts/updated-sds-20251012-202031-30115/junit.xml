<?xml version="1.0" encoding="UTF-8"?>
  <testsuites tests="215" disabled="211" errors="1" failures="0" time="510.442067583">
      <testsuite name="Tests" package="/Users/antont/ansible_deckhouse/virtualization-full/tests/e2e" tests="215" disabled="0" skipped="211" errors="1" failures="0" time="510.442067583" timestamp="2025-10-12T21:50:34">
          <properties>
              <property name="SuiteSucceeded" value="false"></property>
              <property name="SuiteHasProgrammaticFocus" value="false"></property>
              <property name="SpecialSuiteFailureReason" value="Interrupted by User"></property>
              <property name="SuiteLabels" value="[]"></property>
              <property name="RandomSeed" value="1760295021"></property>
              <property name="RandomizeAllSpecs" value="false"></property>
              <property name="LabelFilter" value=""></property>
              <property name="FocusStrings" value=""></property>
              <property name="SkipStrings" value=""></property>
              <property name="FocusFiles" value=""></property>
              <property name="SkipFiles" value=""></property>
              <property name="FailOnPending" value="false"></property>
              <property name="FailOnEmpty" value="false"></property>
              <property name="FailFast" value="false"></property>
              <property name="FlakeAttempts" value="0"></property>
              <property name="DryRun" value="false"></property>
              <property name="ParallelTotal" value="1"></property>
              <property name="OutputInterceptorMode" value=""></property>
          </properties>
          <testcase name="[SynchronizedBeforeSuite]" classname="Tests" status="passed" time="4.862182667">
              <system-err>&gt; Enter [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/12/25 21:50:34.354&#xA;&lt; Exit [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/12/25 21:50:39.216 (4.862s)&#xA;&gt; Enter [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/12/25 21:50:39.216&#xA;&lt; Exit [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/12/25 21:50:39.216 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When resources are applied result should be succeeded" classname="Tests" status="passed" time="6.546602166">
              <system-err>&gt; Enter [BeforeAll] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:57 @ 10/12/25 21:50:39.221&#xA;&lt; Exit [BeforeAll] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:57 @ 10/12/25 21:50:41.243 (2.023s)&#xA;&gt; Enter [It] result should be succeeded - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:73 @ 10/12/25 21:50:41.243&#xA;&lt; Exit [It] result should be succeeded - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:73 @ 10/12/25 21:50:45.767 (4.524s)&#xA;&gt; Enter [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/12/25 21:50:45.767&#xA;&lt; Exit [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/12/25 21:50:45.767 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual images are applied checks VIs phases" classname="Tests" status="passed" time="46.419783208">
              <system-err>&gt; Enter [It] checks VIs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:96 @ 10/12/25 21:50:45.768&#xA;STEP: VIs should be in Ready phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:97 @ 10/12/25 21:50:45.768&#xA;&lt; Exit [It] checks VIs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:96 @ 10/12/25 21:51:32.187 (46.42s)&#xA;&gt; Enter [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/12/25 21:51:32.187&#xA;&lt; Exit [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/12/25 21:51:32.188 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual disks are applied checks VDs phases" classname="Tests" status="interrupted" time="452.605402875">
              <error message="Interrupted by User" type="interrupted">[INTERRUPTED] Interrupted by User&#xA;In [It] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107 @ 10/12/25 21:59:01.568&#xA;&#xA;This is the Progress Report generated when the interrupt was received:&#xA;  VirtualMachineConnectivity When virtual disks are applied checks VDs phases (Spec Runtime: 7m29.366s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;    In [It] (Node Runtime: 7m29.366s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;      At [By Step] VDs should be in Ready phase (Step Runtime: 7m29.366s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:108&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 103 [sync.WaitGroup.Wait, 8 minutes]&#xA;        sync.runtime_SemacquireWaitGroup(0x10022cb30?, 0xd0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x1400026f000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x14000292040, 0x2, 0x101ca5e58?}, {0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, {0x140006c9a40, 0x20}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x1019be204, 0x28}, {0x10197ceef, 0x5}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.5.1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:109&#xA;            | It(&#34;checks VDs phases&#34;, func() {&#xA;            | &#x9;By(fmt.Sprintf(&#34;VDs should be in %s phase&#34;, PhaseReady))&#xA;            &gt; &#x9;WaitPhaseByLabel(kc.ResourceVD, PhaseReady, kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 25&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 149 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x100e60620?, 0x12f9e7060?, 0x10459cf30?, 0x90?, 0x14000273808?, 0x14000208510?, 0x140009baa58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x140009baa88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400029c770?, 0x140009baac4, 0x14000e60620?, 0x1400029c700?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000720240)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000e47408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x14000171680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x14000171680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x1400029c620?}}, {0x102362488?, 0x1400029c620?}, {0x1400073a540?, 0xc2331d0c5aaf8ee8?}, {0x10233ad80, 0x140007201c0}, {0x10233ad80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x1400029c620}, {0x1400073a540, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x140004af698?}}, {0x1019be204, 0x28}, {0x140001360c0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 147 [sync.Cond.Wait, 8 minutes]&#xA;        sync.runtime_notifyListWait(0x140005f4c48, 0x8b)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x140005f4c38)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x140005f4c30, {0x14000879000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000879000?, 0x101e15b40?, 0x14000e63340?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x140005aa840)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x140005aa840)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x14000613908)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x14000613908)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x14000613908, {0x14000cba963, 0xe569d, 0x100371c74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x14000176848, {0x14000cba963, 0xe569d, 0xe569d})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000cba963?, 0x14000e669b8?, 0x14000cba814?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x140009bfda0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x140006ba420}, {0x10233b5a0, 0x14000075320})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 49 [sync.Cond.Wait, 8 minutes]&#xA;        sync.runtime_notifyListWait(0x14000171cc8, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x14000171cb8)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x14000171cb0, {0x14000878000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000878000?, 0x101e15b40?, 0x14000e188f0?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x140005aa780)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x140005aa780)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x14000612608)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x14000612608)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x14000612608, {0x14000ba3174, 0xfce8c, 0x100371c74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x140001762c8, {0x14000ba3174, 0xfce8c, 0xfce8c})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000ba3174?, 0x14000e1a778?, 0x14000ba30f2?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x14000901da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x1400076d230}, {0x10233b5a0, 0x14000075320})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 150 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x10026f040?, 0x12fbbea38?, 0x10459ca78?, 0x90?, 0x14000790008?, 0x14000f20090?, 0x14000606a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000606a88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x140004821c0?, 0x14000606ac4, 0x1400026f040?, 0x14000482150?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000470c40)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000f28408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x14000f24000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x14000f24000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x14000482000?}}, {0x102362488?, 0x14000482000?}, {0x14000f22000?, 0xc2331d0c5aafa658?}, {0x10233ad80, 0x14000470a40}, {0x10233ad80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x14000482000}, {0x14000f22000, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x0?}}, {0x1019be204, 0x28}, {0x140001360e0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      Other Goroutines&#xA;      goroutine 25 [running]&#xA;        github.com/onsi/ginkgo/v2/internal.extractRunningGoroutines()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:181&#xA;        github.com/onsi/ginkgo/v2/internal.NewProgressReport(_, {{0x14000a02000, 0x2, 0x2}, {0x1400029c230, 0x2, 0x2}, {0x140005b1d40, 0x2, 0x2}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:75&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).generateProgressReport(_, _)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:381&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode(_, {0xdc, 0x4, {0x101990e1e, 0x11}, 0x14000068d70, {{0x102a698e1, 0x55}, 0x6b, {0x0, ...}, ...}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:980&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).attemptSpec(0x14000dc17f0, 0x1, {{0x140005b3208?, 0x1400029c230?, 0x2?}, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:199&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).run(0x14000dc17f0, {0x140008906c8?, 0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:349&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runSpecs(0x14000013508, {0x10197cf2b, 0x5}, {0x10384f728, 0x0, 0x0}, {0x1400005a0f4, 0x3d}, 0x0, {0x14000092c08, ...})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:489&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).Run(_, {_, _}, {_, _, _}, {_, _}, _, {_, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:130&#xA;        github.com/onsi/ginkgo/v2.RunSpecs({0x10233a0a0, 0x14000432fc0}, {0x10197cf2b, 0x5}, {0x0, 0x0, 0x0})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/core_dsl.go:300&#xA;        github.com/deckhouse/virtualization/tests/e2e.TestE2E(0x14000432fc0)&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:76&#xA;        testing.tRunner(0x14000432fc0, 0x102329c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.(*T).Run in goroutine 1&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1997&#xA;&#xA;      goroutine 1 [chan receive, 8 minutes]&#xA;        testing.(*T).Run(0x14000432e00, {0x10197f99a?, 0x14000519b38?}, 0x102329c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2005&#xA;        testing.runTests.func1(0x14000432e00)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2477&#xA;        testing.tRunner(0x14000432e00, 0x14000519c68)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.runTests(0x1400000ec60, {0x1037d4fd0, 0x1, 0x1}, {0x14000293a80?, 0xf?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2475&#xA;        testing.(*M).Run(0x14000418500)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2337&#xA;        main.main()&#xA;          _testmain.go:45&#xA;&#xA;      goroutine 32 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x12fba5e00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140001d2f80?, 0x140001e7500?, 0x0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140001d2f80, {0x140001e7500, 0x3500, 0x3500})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        net.(*netFD).Read(0x140001d2f80, {0x140001e7500?, 0x140006c3818?, 0x1001f2c30?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/fd_posix.go:68&#xA;        net.(*conn).Read(0x14000126058, {0x140001e7500?, 0x103001e7500?, 0x12f9ea6c0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/net.go:196&#xA;        crypto/tls.(*atLeastReader).Read(0x14000404180, {0x140001e7500?, 0x140006c38d8?, 0x100507ed4?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:816&#xA;        bytes.(*Buffer).ReadFrom(0x140002ad7a8, {0x10233bde0, 0x14000404180})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bytes/buffer.go:217&#xA;        crypto/tls.(*Conn).readFromUntil(0x140002ad508, {0x12fbab000, 0x14000126058}, 0x140006c3980?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:838&#xA;        crypto/tls.(*Conn).readRecordOrCCS(0x140002ad508, 0x0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:627&#xA;        crypto/tls.(*Conn).readRecord(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:589&#xA;        crypto/tls.(*Conn).Read(0x140002ad508, {0x14000639000, 0x1000, 0x1400007ac08?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:1392&#xA;        bufio.(*Reader).Read(0x1400063a000, {0x140002a44a0, 0x9, 0x1001dfee8?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:245&#xA;        io.ReadAtLeast({0x10233a3c0, 0x1400063a000}, {0x140002a44a0, 0x9, 0x9}, 0x9)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:335&#xA;        io.ReadFull(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:354&#xA;        golang.org/x/net/http2.readFrameHeader({0x140002a44a0, 0x9, 0x140006c3d40?}, {0x10233a3c0?, 0x1400063a000?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:242&#xA;        golang.org/x/net/http2.(*Framer).ReadFrame(0x140002a4460)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:506&#xA;        golang.org/x/net/http2.(*clientConnReadLoop).run(0x140006c3f98)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2258&#xA;        golang.org/x/net/http2.(*ClientConn).readLoop(0x140005828c0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2127&#xA;        golang.org/x/net/http2.(*Transport).newClientConn in goroutine 31&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:912&#xA;&#xA;      goroutine 146 [select, 8 minutes]&#xA;        golang.org/x/net/http2.(*clientStream).writeRequest(0x140005f4c00, 0x14000039b80, 0x0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;        golang.org/x/net/http2.(*clientStream).doRequest(0x140005f4c00, 0x0?, 0x0?)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;        golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 12&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;      goroutine 46 [select]&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x0?)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 25&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;&#xA;      goroutine 11 [syscall]&#xA;        os/signal.signal_recv()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sigqueue.go:149&#xA;        os/signal.loop()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal_unix.go:23&#xA;        os/signal.Notify.func1.1 in goroutine 25&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal.go:152&#xA;&#xA;      goroutine 109 [select, 8 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x14000171680, 0x140006e89a0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 149&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 66 [select, 8 minutes]&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 25&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;&#xA;      goroutine 108 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12fba5600, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000075440?, 0x14000f92000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000075440, {0x14000f92000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140001262c0, {0x14000f92000?, 0x140004af5a8?, 0x1001efa18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10233ad80, 0x14000720200}, {0x102339ec8, 0x14000f90000}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400000fc01?, {0x10233ad80, 0x14000720200})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000720200?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10233ad80, 0x14000720200}, {0x102339fc0, 0x140001262c0}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400026eff8?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 149&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 70 [select, 8 minutes]&#xA;        golang.org/x/net/http2.(*clientStream).writeRequest(0x14000171c80, 0x140003d7900, 0x0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;        golang.org/x/net/http2.(*clientStream).doRequest(0x14000171c80, 0x100261b64?, 0x140004a6000?)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;        golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 12&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;      goroutine 151 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12fba6400, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140005aa360?, 0x14000ddc000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140005aa360, {0x14000ddc000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000f00028, {0x14000ddc000?, 0x140008205a8?, 0x1001efa18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10233ad80, 0x14000470a40}, {0x102339ec8, 0x1400048c130}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400000fc01?, {0x10233ad80, 0x14000470a40})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000470a40?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10233ad80, 0x14000470a40}, {0x102339fc0, 0x14000f00028}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400026eff8?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 107 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12fba6000, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000074420?, 0x14000f88000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000074420, {0x14000f88000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140001262a0, {0x14000f88000?, 0x140004adda8?, 0x1001efa18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10233ad80, 0x140007201c0}, {0x102339ec8, 0x14000428d20}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x140004ade01?, {0x10233ad80, 0x140007201c0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x140007201c0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10233ad80, 0x140007201c0}, {0x102339fc0, 0x140001262a0}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400011ae70?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 149&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 153 [select, 8 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x14000f24000, 0x14000f3e070)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 152 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12fba5c00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140005aa420?, 0x14000ece000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140005aa420, {0x14000ece000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000f00040, {0x14000ece000?, 0x140004b2da8?, 0x1001efa18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10233ad80, 0x14000470bc0}, {0x102339ec8, 0x14000594140}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400011b401?, {0x10233ad80, 0x14000470bc0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000470bc0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10233ad80, 0x14000470bc0}, {0x102339fc0, 0x14000f00040}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005f4480?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;There were additional failures detected after the initial failure. These are visible in the timeline&#xA;</error>
              <system-err>&gt; Enter [It] checks VDs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107 @ 10/12/25 21:51:32.188&#xA;STEP: VDs should be in Ready phase - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:108 @ 10/12/25 21:51:32.188&#xA;[INTERRUPTED] Interrupted by User&#xA;In [It] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107 @ 10/12/25 21:59:01.568&#xA;&#xA;This is the Progress Report generated when the interrupt was received:&#xA;  VirtualMachineConnectivity When virtual disks are applied checks VDs phases (Spec Runtime: 7m29.366s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;    In [It] (Node Runtime: 7m29.366s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;      At [By Step] VDs should be in Ready phase (Step Runtime: 7m29.366s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:108&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 103 [sync.WaitGroup.Wait, 8 minutes]&#xA;        sync.runtime_SemacquireWaitGroup(0x10022cb30?, 0xd0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x1400026f000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x14000292040, 0x2, 0x101ca5e58?}, {0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, {0x140006c9a40, 0x20}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x1019be204, 0x28}, {0x10197ceef, 0x5}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.5.1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:109&#xA;            | It(&#34;checks VDs phases&#34;, func() {&#xA;            | &#x9;By(fmt.Sprintf(&#34;VDs should be in %s phase&#34;, PhaseReady))&#xA;            &gt; &#x9;WaitPhaseByLabel(kc.ResourceVD, PhaseReady, kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 25&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 149 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x100e60620?, 0x12f9e7060?, 0x10459cf30?, 0x90?, 0x14000273808?, 0x14000208510?, 0x140009baa58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x140009baa88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400029c770?, 0x140009baac4, 0x14000e60620?, 0x1400029c700?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000720240)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000e47408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x14000171680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x14000171680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x1400029c620?}}, {0x102362488?, 0x1400029c620?}, {0x1400073a540?, 0xc2331d0c5aaf8ee8?}, {0x10233ad80, 0x140007201c0}, {0x10233ad80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x1400029c620}, {0x1400073a540, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x140004af698?}}, {0x1019be204, 0x28}, {0x140001360c0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 147 [sync.Cond.Wait, 8 minutes]&#xA;        sync.runtime_notifyListWait(0x140005f4c48, 0x8b)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x140005f4c38)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x140005f4c30, {0x14000879000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000879000?, 0x101e15b40?, 0x14000e63340?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x140005aa840)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x140005aa840)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x14000613908)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x14000613908)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x14000613908, {0x14000cba963, 0xe569d, 0x100371c74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x14000176848, {0x14000cba963, 0xe569d, 0xe569d})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000cba963?, 0x14000e669b8?, 0x14000cba814?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x140009bfda0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x140006ba420}, {0x10233b5a0, 0x14000075320})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 49 [sync.Cond.Wait, 8 minutes]&#xA;        sync.runtime_notifyListWait(0x14000171cc8, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x14000171cb8)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x14000171cb0, {0x14000878000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000878000?, 0x101e15b40?, 0x14000e188f0?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x140005aa780)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x140005aa780)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x14000612608)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x14000612608)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x14000612608, {0x14000ba3174, 0xfce8c, 0x100371c74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x140001762c8, {0x14000ba3174, 0xfce8c, 0xfce8c})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000ba3174?, 0x14000e1a778?, 0x14000ba30f2?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x14000901da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x1400076d230}, {0x10233b5a0, 0x14000075320})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 150 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x10026f040?, 0x12fbbea38?, 0x10459ca78?, 0x90?, 0x14000790008?, 0x14000f20090?, 0x14000606a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000606a88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x140004821c0?, 0x14000606ac4, 0x1400026f040?, 0x14000482150?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000470c40)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000f28408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x14000f24000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x14000f24000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x14000482000?}}, {0x102362488?, 0x14000482000?}, {0x14000f22000?, 0xc2331d0c5aafa658?}, {0x10233ad80, 0x14000470a40}, {0x10233ad80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x14000482000}, {0x14000f22000, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x0?}}, {0x1019be204, 0x28}, {0x140001360e0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      Other Goroutines&#xA;      goroutine 25 [running]&#xA;        github.com/onsi/ginkgo/v2/internal.extractRunningGoroutines()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:181&#xA;        github.com/onsi/ginkgo/v2/internal.NewProgressReport(_, {{0x14000a02000, 0x2, 0x2}, {0x1400029c230, 0x2, 0x2}, {0x140005b1d40, 0x2, 0x2}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:75&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).generateProgressReport(_, _)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:381&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode(_, {0xdc, 0x4, {0x101990e1e, 0x11}, 0x14000068d70, {{0x102a698e1, 0x55}, 0x6b, {0x0, ...}, ...}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:980&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).attemptSpec(0x14000dc17f0, 0x1, {{0x140005b3208?, 0x1400029c230?, 0x2?}, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:199&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).run(0x14000dc17f0, {0x140008906c8?, 0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:349&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runSpecs(0x14000013508, {0x10197cf2b, 0x5}, {0x10384f728, 0x0, 0x0}, {0x1400005a0f4, 0x3d}, 0x0, {0x14000092c08, ...})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:489&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).Run(_, {_, _}, {_, _, _}, {_, _}, _, {_, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:130&#xA;        github.com/onsi/ginkgo/v2.RunSpecs({0x10233a0a0, 0x14000432fc0}, {0x10197cf2b, 0x5}, {0x0, 0x0, 0x0})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/core_dsl.go:300&#xA;        github.com/deckhouse/virtualization/tests/e2e.TestE2E(0x14000432fc0)&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:76&#xA;        testing.tRunner(0x14000432fc0, 0x102329c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.(*T).Run in goroutine 1&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1997&#xA;&#xA;      goroutine 1 [chan receive, 8 minutes]&#xA;        testing.(*T).Run(0x14000432e00, {0x10197f99a?, 0x14000519b38?}, 0x102329c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2005&#xA;        testing.runTests.func1(0x14000432e00)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2477&#xA;        testing.tRunner(0x14000432e00, 0x14000519c68)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.runTests(0x1400000ec60, {0x1037d4fd0, 0x1, 0x1}, {0x14000293a80?, 0xf?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2475&#xA;        testing.(*M).Run(0x14000418500)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2337&#xA;        main.main()&#xA;          _testmain.go:45&#xA;&#xA;      goroutine 32 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x12fba5e00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140001d2f80?, 0x140001e7500?, 0x0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140001d2f80, {0x140001e7500, 0x3500, 0x3500})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        net.(*netFD).Read(0x140001d2f80, {0x140001e7500?, 0x140006c3818?, 0x1001f2c30?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/fd_posix.go:68&#xA;        net.(*conn).Read(0x14000126058, {0x140001e7500?, 0x103001e7500?, 0x12f9ea6c0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/net.go:196&#xA;        crypto/tls.(*atLeastReader).Read(0x14000404180, {0x140001e7500?, 0x140006c38d8?, 0x100507ed4?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:816&#xA;        bytes.(*Buffer).ReadFrom(0x140002ad7a8, {0x10233bde0, 0x14000404180})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bytes/buffer.go:217&#xA;        crypto/tls.(*Conn).readFromUntil(0x140002ad508, {0x12fbab000, 0x14000126058}, 0x140006c3980?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:838&#xA;        crypto/tls.(*Conn).readRecordOrCCS(0x140002ad508, 0x0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:627&#xA;        crypto/tls.(*Conn).readRecord(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:589&#xA;        crypto/tls.(*Conn).Read(0x140002ad508, {0x14000639000, 0x1000, 0x1400007ac08?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:1392&#xA;        bufio.(*Reader).Read(0x1400063a000, {0x140002a44a0, 0x9, 0x1001dfee8?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:245&#xA;        io.ReadAtLeast({0x10233a3c0, 0x1400063a000}, {0x140002a44a0, 0x9, 0x9}, 0x9)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:335&#xA;        io.ReadFull(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:354&#xA;        golang.org/x/net/http2.readFrameHeader({0x140002a44a0, 0x9, 0x140006c3d40?}, {0x10233a3c0?, 0x1400063a000?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:242&#xA;        golang.org/x/net/http2.(*Framer).ReadFrame(0x140002a4460)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:506&#xA;        golang.org/x/net/http2.(*clientConnReadLoop).run(0x140006c3f98)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2258&#xA;        golang.org/x/net/http2.(*ClientConn).readLoop(0x140005828c0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2127&#xA;        golang.org/x/net/http2.(*Transport).newClientConn in goroutine 31&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:912&#xA;&#xA;      goroutine 146 [select, 8 minutes]&#xA;        golang.org/x/net/http2.(*clientStream).writeRequest(0x140005f4c00, 0x14000039b80, 0x0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;        golang.org/x/net/http2.(*clientStream).doRequest(0x140005f4c00, 0x0?, 0x0?)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;        golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 12&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;      goroutine 46 [select]&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x0?)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 25&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;&#xA;      goroutine 11 [syscall]&#xA;        os/signal.signal_recv()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sigqueue.go:149&#xA;        os/signal.loop()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal_unix.go:23&#xA;        os/signal.Notify.func1.1 in goroutine 25&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal.go:152&#xA;&#xA;      goroutine 109 [select, 8 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x14000171680, 0x140006e89a0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 149&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 66 [select, 8 minutes]&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 25&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;&#xA;      goroutine 108 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12fba5600, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000075440?, 0x14000f92000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000075440, {0x14000f92000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140001262c0, {0x14000f92000?, 0x140004af5a8?, 0x1001efa18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10233ad80, 0x14000720200}, {0x102339ec8, 0x14000f90000}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400000fc01?, {0x10233ad80, 0x14000720200})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000720200?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10233ad80, 0x14000720200}, {0x102339fc0, 0x140001262c0}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400026eff8?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 149&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 70 [select, 8 minutes]&#xA;        golang.org/x/net/http2.(*clientStream).writeRequest(0x14000171c80, 0x140003d7900, 0x0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;        golang.org/x/net/http2.(*clientStream).doRequest(0x14000171c80, 0x100261b64?, 0x140004a6000?)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;        golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 12&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;      goroutine 151 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12fba6400, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140005aa360?, 0x14000ddc000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140005aa360, {0x14000ddc000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000f00028, {0x14000ddc000?, 0x140008205a8?, 0x1001efa18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10233ad80, 0x14000470a40}, {0x102339ec8, 0x1400048c130}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400000fc01?, {0x10233ad80, 0x14000470a40})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000470a40?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10233ad80, 0x14000470a40}, {0x102339fc0, 0x14000f00028}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400026eff8?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 107 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12fba6000, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000074420?, 0x14000f88000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000074420, {0x14000f88000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140001262a0, {0x14000f88000?, 0x140004adda8?, 0x1001efa18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10233ad80, 0x140007201c0}, {0x102339ec8, 0x14000428d20}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x140004ade01?, {0x10233ad80, 0x140007201c0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x140007201c0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10233ad80, 0x140007201c0}, {0x102339fc0, 0x140001262a0}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400011ae70?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 149&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 153 [select, 8 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x14000f24000, 0x14000f3e070)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 152 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12fba5c00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140005aa420?, 0x14000ece000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140005aa420, {0x14000ece000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000f00040, {0x14000ece000?, 0x140004b2da8?, 0x1001efa18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10233ad80, 0x14000470bc0}, {0x102339ec8, 0x14000594140}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400011b401?, {0x10233ad80, 0x14000470bc0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000470bc0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10233ad80, 0x14000470bc0}, {0x102339fc0, 0x14000f00040}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005f4480?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;Interrupted by User&#xA;First interrupt received; Ginkgo will run any cleanup and reporting nodes but will skip all remaining specs.  Interrupt again to skip cleanup.&#xA;Here&#39;s a current progress report:&#xA;  VirtualMachineConnectivity When virtual disks are applied checks VDs phases (Spec Runtime: 7m29.366s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;    In [It] (Node Runtime: 7m29.366s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;      At [By Step] VDs should be in Ready phase (Step Runtime: 7m29.366s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:108&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 103 [sync.WaitGroup.Wait, 8 minutes]&#xA;        sync.runtime_SemacquireWaitGroup(0x10022cb30?, 0xd0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x1400026f000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x14000292040, 0x2, 0x101ca5e58?}, {0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, {0x140006c9a40, 0x20}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x1019be204, 0x28}, {0x10197ceef, 0x5}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.5.1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:109&#xA;            | It(&#34;checks VDs phases&#34;, func() {&#xA;            | &#x9;By(fmt.Sprintf(&#34;VDs should be in %s phase&#34;, PhaseReady))&#xA;            &gt; &#x9;WaitPhaseByLabel(kc.ResourceVD, PhaseReady, kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 25&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 149 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x100e60620?, 0x12f9e7060?, 0x10459cf30?, 0x90?, 0x14000273808?, 0x14000208510?, 0x140009baa58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x140009baa88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400029c770?, 0x140009baac4, 0x14000e60620?, 0x1400029c700?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000720240)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000e47408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x14000171680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x14000171680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x1400029c620?}}, {0x102362488?, 0x1400029c620?}, {0x1400073a540?, 0xc2331d0c5aaf8ee8?}, {0x10233ad80, 0x140007201c0}, {0x10233ad80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x1400029c620}, {0x1400073a540, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x140004af698?}}, {0x1019be204, 0x28}, {0x140001360c0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 147 [sync.Cond.Wait, 8 minutes]&#xA;        sync.runtime_notifyListWait(0x140005f4c48, 0x8b)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x140005f4c38)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x140005f4c30, {0x14000879000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000879000?, 0x101e15b40?, 0x14000e63340?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x140005aa840)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x140005aa840)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x14000613908)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x14000613908)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x14000613908, {0x14000cba963, 0xe569d, 0x100371c74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x14000176848, {0x14000cba963, 0xe569d, 0xe569d})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000cba963?, 0x14000e669b8?, 0x14000cba814?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x140009bfda0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x140006ba420}, {0x10233b5a0, 0x14000075320})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 49 [sync.Cond.Wait, 8 minutes]&#xA;        sync.runtime_notifyListWait(0x14000171cc8, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x14000171cb8)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x14000171cb0, {0x14000878000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000878000?, 0x101e15b40?, 0x14000e188f0?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x140005aa780)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x140005aa780)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x14000612608)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x14000612608)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x14000612608, {0x14000ba3174, 0xfce8c, 0x100371c74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x140001762c8, {0x14000ba3174, 0xfce8c, 0xfce8c})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000ba3174?, 0x14000e1a778?, 0x14000ba30f2?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x14000901da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x1400076d230}, {0x10233b5a0, 0x14000075320})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 150 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x10026f040?, 0x12fbbea38?, 0x10459ca78?, 0x90?, 0x14000790008?, 0x14000f20090?, 0x14000606a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000606a88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x140004821c0?, 0x14000606ac4, 0x1400026f040?, 0x14000482150?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000470c40)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000f28408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x14000f24000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x14000f24000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x14000482000?}}, {0x102362488?, 0x14000482000?}, {0x14000f22000?, 0xc2331d0c5aafa658?}, {0x10233ad80, 0x14000470a40}, {0x10233ad80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x14000482000}, {0x14000f22000, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x0?}}, {0x1019be204, 0x28}, {0x140001360e0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&lt; Exit [It] checks VDs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107 @ 10/12/25 21:59:01.571 (7m29.368s)&#xA;&gt; Enter [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/12/25 21:59:01.571&#xA;[INTERRUPTED] Interrupted by User&#xA;In [AfterEach] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/12/25 21:59:04.806&#xA;&#xA;This is the Progress Report generated when the interrupt was received:&#xA;  VirtualMachineConnectivity When virtual disks are applied checks VDs phases (Spec Runtime: 7m32.604s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;    In [AfterEach] (Node Runtime: 3.235s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66&#xA;&#xA;    Spec Goroutine&#xA;    goroutine 103 [sync.WaitGroup.Wait, 8 minutes]&#xA;      sync.runtime_SemacquireWaitGroup(0x10022cb30?, 0xd0?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;      sync.(*WaitGroup).Wait(0x1400026f000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x14000292040, 0x2, 0x101ca5e58?}, {0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, ...}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;          | &#x9;&#x9;}()&#xA;          | &#x9;}&#xA;          &gt; &#x9;wg.Wait()&#xA;          | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;          | }&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, {0x140006c9a40, 0x20}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;          | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;          | &#x9;}&#xA;          &gt; &#x9;WaitResources(resources, resource, opts)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x1019be204, 0x28}, {0x10197ceef, 0x5}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;          | &#x9;GinkgoHelper()&#xA;          | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;          &gt; &#x9;WaitByLabel(resource, opts)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.5.1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:109&#xA;          | It(&#34;checks VDs phases&#34;, func() {&#xA;          | &#x9;By(fmt.Sprintf(&#34;VDs should be in %s phase&#34;, PhaseReady))&#xA;          &gt; &#x9;WaitPhaseByLabel(kc.ResourceVD, PhaseReady, kc.WaitOptions{&#xA;          | &#x9;&#x9;Labels:    testCaseLabel,&#xA;          | &#x9;&#x9;Namespace: ns,&#xA;      github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 25&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;    Goroutines of Interest&#xA;    goroutine 149 [syscall, 8 minutes]&#xA;      syscall.syscall6(0x100e60620?, 0x12f9e7060?, 0x10459cf30?, 0x90?, 0x14000273808?, 0x14000208510?, 0x140009baa58?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;      syscall.wait4(0x140009baa88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;      syscall.Wait4(0x1400029c770?, 0x140009baac4, 0x14000e60620?, 0x1400029c700?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;      os.(*Process).pidWait.func1(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;      os.ignoringEINTR2[...](...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;      os.(*Process).pidWait(0x14000720240)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;      os.(*Process).wait(0x14000e47408?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;      os.(*Process).Wait(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;      os/exec.(*Cmd).Wait(0x14000171680)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;      os/exec.(*Cmd).Run(0x14000171680)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x1400029c620?}}, {0x102362488?, 0x1400029c620?}, {0x1400073a540?, 0xc2331d0c5aaf8ee8?}, {0x10233ad80, 0x140007201c0}, {0x10233ad80, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;          | &#x9;cmd.Stderr = stderr&#xA;          | &#x9;cmd.Stdout = stdout&#xA;          &gt; &#x9;return cmd.Run()&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x1400029c620}, {0x1400073a540, 0xbf})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;          | stdout := new(Buffer)&#xA;          | stderr := new(Buffer)&#xA;          &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;          | cmdResult := &amp;CMDResult{&#xA;          | &#x9;stdOut:  stdout,&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x140004af698?}}, {0x1019be204, 0x28}, {0x140001360c0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;          | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;          | &#x9;defer cancel()&#xA;          &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;          | go func() {&#xA;          | &#x9;defer wg.Done()&#xA;          &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;          | &#x9;if res.Error() != nil {&#xA;          | &#x9;&#x9;mu.Lock()&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;          | for _, name := range resources {&#xA;          | &#x9;wg.Add(1)&#xA;          &gt; &#x9;go func() {&#xA;          | &#x9;&#x9;defer wg.Done()&#xA;          | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;    goroutine 147 [sync.Cond.Wait, 8 minutes]&#xA;      sync.runtime_notifyListWait(0x140005f4c48, 0x8b)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;      sync.(*Cond).Wait(0x140005f4c38)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;      golang.org/x/net/http2.(*pipe).Read(0x140005f4c30, {0x14000879000, 0x1000, 0x1000})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;      golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000879000?, 0x101e15b40?, 0x14000e63340?})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;      bufio.(*Reader).fill(0x140005aa840)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;      bufio.(*Reader).ReadByte(0x140005aa840)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;      compress/flate.(*decompressor).moreBits(0x14000613908)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;      compress/flate.(*decompressor).nextBlock(0x14000613908)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;      compress/flate.(*decompressor).Read(0x14000613908, {0x14000cba963, 0xe569d, 0x100371c74?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;      compress/gzip.(*Reader).Read(0x14000176848, {0x14000cba963, 0xe569d, 0xe569d})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;      golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000cba963?, 0x14000e669b8?, 0x14000cba814?})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;      bufio.(*Scanner).Scan(0x140009bfda0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x140006ba420}, {0x10233b5a0, 0x14000075320})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;          | num := 0&#xA;          | &#xA;          &gt; for scanner.Scan() {&#xA;          | &#x9;rawEntry := scanner.Bytes()&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;          | defer l.wg.Done()&#xA;          | &#xA;          &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;          | l.mu.Lock()&#xA;          | defer l.mu.Unlock()&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;          | &#xA;          | l.wg.Add(1)&#xA;          &gt; go func() {&#xA;          | &#x9;defer l.wg.Done()&#xA;          | &#xA;&#xA;    goroutine 49 [sync.Cond.Wait, 8 minutes]&#xA;      sync.runtime_notifyListWait(0x14000171cc8, 0x1)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;      sync.(*Cond).Wait(0x14000171cb8)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;      golang.org/x/net/http2.(*pipe).Read(0x14000171cb0, {0x14000878000, 0x1000, 0x1000})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;      golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000878000?, 0x101e15b40?, 0x14000e188f0?})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;      bufio.(*Reader).fill(0x140005aa780)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;      bufio.(*Reader).ReadByte(0x140005aa780)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;      compress/flate.(*decompressor).moreBits(0x14000612608)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;      compress/flate.(*decompressor).nextBlock(0x14000612608)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;      compress/flate.(*decompressor).Read(0x14000612608, {0x14000ba3174, 0xfce8c, 0x100371c74?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;      compress/gzip.(*Reader).Read(0x140001762c8, {0x14000ba3174, 0xfce8c, 0xfce8c})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;      golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000ba3174?, 0x14000e1a778?, 0x14000ba30f2?})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;      bufio.(*Scanner).Scan(0x14000901da0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x1400076d230}, {0x10233b5a0, 0x14000075320})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;          | num := 0&#xA;          | &#xA;          &gt; for scanner.Scan() {&#xA;          | &#x9;rawEntry := scanner.Bytes()&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;          | defer l.wg.Done()&#xA;          | &#xA;          &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;          | l.mu.Lock()&#xA;          | defer l.mu.Unlock()&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;          | &#xA;          | l.wg.Add(1)&#xA;          &gt; go func() {&#xA;          | &#x9;defer l.wg.Done()&#xA;          | &#xA;&#xA;    goroutine 150 [syscall, 8 minutes]&#xA;      syscall.syscall6(0x10026f040?, 0x12fbbea38?, 0x10459ca78?, 0x90?, 0x14000790008?, 0x14000f20090?, 0x14000606a58?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;      syscall.wait4(0x14000606a88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;      syscall.Wait4(0x140004821c0?, 0x14000606ac4, 0x1400026f040?, 0x14000482150?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;      os.(*Process).pidWait.func1(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;      os.ignoringEINTR2[...](...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;      os.(*Process).pidWait(0x14000470c40)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;      os.(*Process).wait(0x14000f28408?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;      os.(*Process).Wait(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;      os/exec.(*Cmd).Wait(0x14000f24000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;      os/exec.(*Cmd).Run(0x14000f24000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x14000482000?}}, {0x102362488?, 0x14000482000?}, {0x14000f22000?, 0xc2331d0c5aafa658?}, {0x10233ad80, 0x14000470a40}, {0x10233ad80, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;          | &#x9;cmd.Stderr = stderr&#xA;          | &#x9;cmd.Stdout = stdout&#xA;          &gt; &#x9;return cmd.Run()&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x14000482000}, {0x14000f22000, 0xbf})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;          | stdout := new(Buffer)&#xA;          | stderr := new(Buffer)&#xA;          &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;          | cmdResult := &amp;CMDResult{&#xA;          | &#x9;stdOut:  stdout,&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x0?}}, {0x1019be204, 0x28}, {0x140001360e0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;          | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;          | &#x9;defer cancel()&#xA;          &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;          | go func() {&#xA;          | &#x9;defer wg.Done()&#xA;          &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;          | &#x9;if res.Error() != nil {&#xA;          | &#x9;&#x9;mu.Lock()&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;          | for _, name := range resources {&#xA;          | &#x9;wg.Add(1)&#xA;          &gt; &#x9;go func() {&#xA;          | &#x9;&#x9;defer wg.Done()&#xA;          | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;    goroutine 194 [syscall]&#xA;      syscall.syscall6(0x10090f9a0?, 0x12fbbea38?, 0x10459cf30?, 0x90?, 0x14000100008?, 0x14000f20b40?, 0x14000902b08?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;      syscall.wait4(0x14000902b38?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;      syscall.Wait4(0x14000482770?, 0x14000902b74, 0x1400090f9a0?, 0x14000482700?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;      os.(*Process).pidWait.func1(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;      os.ignoringEINTR2[...](...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;      os.(*Process).pidWait(0x140007846c0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;      os.(*Process).wait(0x14000051008?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;      os.(*Process).Wait(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;      os/exec.(*Cmd).Wait(0x140005ca000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;      os/exec.(*Cmd).Run(0x140005ca000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x14000482620?}}, {0x102362488?, 0x14000482620?}, {0x14000924840?, 0xc2331c84e20b9380?}, {0x10233ad80, 0x140007845c0}, {0x10233ad80, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;          | &#x9;cmd.Stderr = stderr&#xA;          | &#x9;cmd.Stdout = stdout&#xA;          &gt; &#x9;return cmd.Run()&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x14000482620}, {0x14000924840, 0xb0})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;          | stdout := new(Buffer)&#xA;          | stderr := new(Buffer)&#xA;          &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;          | cmdResult := &amp;CMDResult{&#xA;          | &#x9;stdOut:  stdout,&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.Get({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x140007a3c80?}}, {0x1019d72e2, 0x31}, {{0x0, 0x0, 0x0}, 0x0, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:208&#xA;          | &#x9;ctx, cancel := context.WithTimeout(context.Background(), MediumTimeout)&#xA;          | &#x9;defer cancel()&#xA;          &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.SaveTestCaseResources(0x14000796b70, {0x14000719a28, 0x11}, {0x140006d9f50, 0x25}, {0x10197c370, 0x4})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:765&#xA;          | errorFileName := fmt.Sprintf(&#34;%s/e2e_failed__%s__%s_error.txt&#34;, dumpPath, labels[&#34;testcase&#34;], additional)&#xA;          | &#xA;          &gt; cmdr := kubectl.Get(&#xA;          | &#x9;&#34;virtualization,cvi,vmc,intvirt,pod,volumesnapshot&#34;,&#xA;          | &#x9;kc.GetOptions{&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.SaveTestCaseDump(0x14000796b70, {0x101990e1e, 0x11}, {0x140006d9f50, 0x25})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:757&#xA;          | &#x9;}&#xA;          | &#xA;          &gt; &#x9;SaveTestCaseResources(labels, additional, namespace, tmpDir)&#xA;          | &#x9;SavePodLogsAndDescriptions(labels, additional, namespace, tmpDir)&#xA;          | }&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.2()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:68&#xA;          | AfterEach(func() {&#xA;          | &#x9;if CurrentSpecReport().Failed() {&#xA;          &gt; &#x9;&#x9;SaveTestCaseDump(testCaseLabel, CurrentSpecReport().LeafNodeText, ns)&#xA;          | &#x9;}&#xA;          | })&#xA;      github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 25&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;    Other Goroutines&#xA;    goroutine 25 [running]&#xA;      github.com/onsi/ginkgo/v2/internal.extractRunningGoroutines()&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:181&#xA;      github.com/onsi/ginkgo/v2/internal.NewProgressReport(_, {{0x14000a02000, 0x2, 0x2}, {0x1400029c230, 0x2, 0x2}, {0x140005b1d40, 0x2, 0x2}, ...}, ...)&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:75&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).generateProgressReport(_, _)&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:381&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode(_, {0xd6, 0x20, {0x0, 0x0}, 0x14000068ba0, {{0x102a698e1, 0x55}, 0x42, {0x0, ...}, ...}, ...}, ...)&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:980&#xA;      github.com/onsi/ginkgo/v2/internal.(*group).attemptSpec(0x14000dc17f0, 0x1, {{0x140005b3208?, 0x1400029c230?, 0x2?}, 0x0?})&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:286&#xA;      github.com/onsi/ginkgo/v2/internal.(*group).run(0x14000dc17f0, {0x140008906c8?, 0x0?, 0x0?})&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:349&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runSpecs(0x14000013508, {0x10197cf2b, 0x5}, {0x10384f728, 0x0, 0x0}, {0x1400005a0f4, 0x3d}, 0x0, {0x14000092c08, ...})&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:489&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).Run(_, {_, _}, {_, _, _}, {_, _}, _, {_, ...}, ...)&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:130&#xA;      github.com/onsi/ginkgo/v2.RunSpecs({0x10233a0a0, 0x14000432fc0}, {0x10197cf2b, 0x5}, {0x0, 0x0, 0x0})&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/core_dsl.go:300&#xA;      github.com/deckhouse/virtualization/tests/e2e.TestE2E(0x14000432fc0)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:76&#xA;      testing.tRunner(0x14000432fc0, 0x102329c50)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;      testing.(*T).Run in goroutine 1&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1997&#xA;&#xA;    goroutine 1 [chan receive, 8 minutes]&#xA;      testing.(*T).Run(0x14000432e00, {0x10197f99a?, 0x14000519b38?}, 0x102329c50)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2005&#xA;      testing.runTests.func1(0x14000432e00)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2477&#xA;      testing.tRunner(0x14000432e00, 0x14000519c68)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;      testing.runTests(0x1400000ec60, {0x1037d4fd0, 0x1, 0x1}, {0x14000293a80?, 0xf?, 0x0?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2475&#xA;      testing.(*M).Run(0x14000418500)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2337&#xA;      main.main()&#xA;        _testmain.go:45&#xA;&#xA;    goroutine 32 [IO wait]&#xA;      internal/poll.runtime_pollWait(0x12fba5e00, 0x72)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;      internal/poll.(*pollDesc).wait(0x140001d2f80?, 0x140001e7500?, 0x0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0x140001d2f80, {0x140001e7500, 0x3500, 0x3500})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;      net.(*netFD).Read(0x140001d2f80, {0x140001e7500?, 0x140006c3818?, 0x1001f2c30?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/fd_posix.go:68&#xA;      net.(*conn).Read(0x14000126058, {0x140001e7500?, 0x103001e7500?, 0x12f9ea6c0?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/net.go:196&#xA;      crypto/tls.(*atLeastReader).Read(0x14000404180, {0x140001e7500?, 0x140006c38d8?, 0x100507ed4?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:816&#xA;      bytes.(*Buffer).ReadFrom(0x140002ad7a8, {0x10233bde0, 0x14000404180})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bytes/buffer.go:217&#xA;      crypto/tls.(*Conn).readFromUntil(0x140002ad508, {0x12fbab000, 0x14000126058}, 0x140006c3980?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:838&#xA;      crypto/tls.(*Conn).readRecordOrCCS(0x140002ad508, 0x0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:627&#xA;      crypto/tls.(*Conn).readRecord(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:589&#xA;      crypto/tls.(*Conn).Read(0x140002ad508, {0x14000639000, 0x1000, 0x1400007ac08?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:1392&#xA;      bufio.(*Reader).Read(0x1400063a000, {0x140002a44a0, 0x9, 0x1001dfee8?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:245&#xA;      io.ReadAtLeast({0x10233a3c0, 0x1400063a000}, {0x140002a44a0, 0x9, 0x9}, 0x9)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:335&#xA;      io.ReadFull(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:354&#xA;      golang.org/x/net/http2.readFrameHeader({0x140002a44a0, 0x9, 0x140006c3d40?}, {0x10233a3c0?, 0x1400063a000?})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:242&#xA;      golang.org/x/net/http2.(*Framer).ReadFrame(0x140002a4460)&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:506&#xA;      golang.org/x/net/http2.(*clientConnReadLoop).run(0x140006c3f98)&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2258&#xA;      golang.org/x/net/http2.(*ClientConn).readLoop(0x140005828c0)&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2127&#xA;      golang.org/x/net/http2.(*Transport).newClientConn in goroutine 31&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:912&#xA;&#xA;    goroutine 146 [select, 8 minutes]&#xA;      golang.org/x/net/http2.(*clientStream).writeRequest(0x140005f4c00, 0x14000039b80, 0x0)&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;      golang.org/x/net/http2.(*clientStream).doRequest(0x140005f4c00, 0x0?, 0x0?)&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;      golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 12&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;    goroutine 46 [select]&#xA;      github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x0?)&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;      github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 25&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;&#xA;    goroutine 11 [syscall]&#xA;      os/signal.signal_recv()&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sigqueue.go:149&#xA;      os/signal.loop()&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal_unix.go:23&#xA;      os/signal.Notify.func1.1 in goroutine 25&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal.go:152&#xA;&#xA;    goroutine 109 [select, 8 minutes]&#xA;      os/exec.(*Cmd).watchCtx(0x14000171680, 0x140006e89a0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;      os/exec.(*Cmd).Start in goroutine 149&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;    goroutine 66 [select, 8 minutes]&#xA;      github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;      github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 25&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;&#xA;    goroutine 108 [IO wait, 8 minutes]&#xA;      internal/poll.runtime_pollWait(0x12fba5600, 0x72)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;      internal/poll.(*pollDesc).wait(0x14000075440?, 0x14000f92000?, 0x1)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0x14000075440, {0x14000f92000, 0x8000, 0x8000})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;      os.(*File).read(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;      os.(*File).Read(0x140001262c0, {0x14000f92000?, 0x140004af5a8?, 0x1001efa18?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;      io.copyBuffer({0x10233ad80, 0x14000720200}, {0x102339ec8, 0x14000f90000}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os.genericWriteTo(0x1400000fc01?, {0x10233ad80, 0x14000720200})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;      os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000720200?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;      io.copyBuffer({0x10233ad80, 0x14000720200}, {0x102339fc0, 0x140001262c0}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os/exec.(*Cmd).writerDescriptor.func1()&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;      os/exec.(*Cmd).Start.func2(0x1400026eff8?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;      os/exec.(*Cmd).Start in goroutine 149&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;    goroutine 70 [select, 8 minutes]&#xA;      golang.org/x/net/http2.(*clientStream).writeRequest(0x14000171c80, 0x140003d7900, 0x0)&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;      golang.org/x/net/http2.(*clientStream).doRequest(0x14000171c80, 0x100261b64?, 0x140004a6000?)&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;      golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 12&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;    goroutine 151 [IO wait, 8 minutes]&#xA;      internal/poll.runtime_pollWait(0x12fba6400, 0x72)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;      internal/poll.(*pollDesc).wait(0x140005aa360?, 0x14000ddc000?, 0x1)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0x140005aa360, {0x14000ddc000, 0x8000, 0x8000})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;      os.(*File).read(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;      os.(*File).Read(0x14000f00028, {0x14000ddc000?, 0x140008205a8?, 0x1001efa18?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;      io.copyBuffer({0x10233ad80, 0x14000470a40}, {0x102339ec8, 0x1400048c130}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os.genericWriteTo(0x1400000fc01?, {0x10233ad80, 0x14000470a40})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;      os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000470a40?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;      io.copyBuffer({0x10233ad80, 0x14000470a40}, {0x102339fc0, 0x14000f00028}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os/exec.(*Cmd).writerDescriptor.func1()&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;      os/exec.(*Cmd).Start.func2(0x1400026eff8?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;      os/exec.(*Cmd).Start in goroutine 150&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;    goroutine 107 [IO wait, 8 minutes]&#xA;      internal/poll.runtime_pollWait(0x12fba6000, 0x72)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;      internal/poll.(*pollDesc).wait(0x14000074420?, 0x14000f88000?, 0x1)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0x14000074420, {0x14000f88000, 0x8000, 0x8000})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;      os.(*File).read(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;      os.(*File).Read(0x140001262a0, {0x14000f88000?, 0x140004adda8?, 0x1001efa18?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;      io.copyBuffer({0x10233ad80, 0x140007201c0}, {0x102339ec8, 0x14000428d20}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os.genericWriteTo(0x140004ade01?, {0x10233ad80, 0x140007201c0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;      os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x140007201c0?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;      io.copyBuffer({0x10233ad80, 0x140007201c0}, {0x102339fc0, 0x140001262a0}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os/exec.(*Cmd).writerDescriptor.func1()&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;      os/exec.(*Cmd).Start.func2(0x1400011ae70?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;      os/exec.(*Cmd).Start in goroutine 149&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;    goroutine 153 [select, 8 minutes]&#xA;      os/exec.(*Cmd).watchCtx(0x14000f24000, 0x14000f3e070)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;      os/exec.(*Cmd).Start in goroutine 150&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;    goroutine 152 [IO wait, 8 minutes]&#xA;      internal/poll.runtime_pollWait(0x12fba5c00, 0x72)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;      internal/poll.(*pollDesc).wait(0x140005aa420?, 0x14000ece000?, 0x1)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0x140005aa420, {0x14000ece000, 0x8000, 0x8000})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;      os.(*File).read(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;      os.(*File).Read(0x14000f00040, {0x14000ece000?, 0x140004b2da8?, 0x1001efa18?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;      io.copyBuffer({0x10233ad80, 0x14000470bc0}, {0x102339ec8, 0x14000594140}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os.genericWriteTo(0x1400011b401?, {0x10233ad80, 0x14000470bc0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;      os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000470bc0?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;      io.copyBuffer({0x10233ad80, 0x14000470bc0}, {0x102339fc0, 0x14000f00040}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os/exec.(*Cmd).writerDescriptor.func1()&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;      os/exec.(*Cmd).Start.func2(0x140005f4480?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;      os/exec.(*Cmd).Start in goroutine 150&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;    goroutine 195 [IO wait]&#xA;      internal/poll.runtime_pollWait(0x12fbf9000, 0x72)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;      internal/poll.(*pollDesc).wait(0x1400063a480?, 0x1400082c000?, 0x1)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0x1400063a480, {0x1400082c000, 0x8000, 0x8000})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;      os.(*File).read(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;      os.(*File).Read(0x1400048c088, {0x1400082c000?, 0x14000604da8?, 0x1001efa18?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;      io.copyBuffer({0x10233ad80, 0x140007845c0}, {0x102339ec8, 0x14000428000}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os.genericWriteTo(0x1?, {0x10233ad80, 0x140007845c0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;      os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x140007845c0?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;      io.copyBuffer({0x10233ad80, 0x140007845c0}, {0x102339fc0, 0x1400048c088}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os/exec.(*Cmd).writerDescriptor.func1()&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;      os/exec.(*Cmd).Start.func2(0x14000664008?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;      os/exec.(*Cmd).Start in goroutine 194&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;    goroutine 196 [IO wait]&#xA;      internal/poll.runtime_pollWait(0x12fba5800, 0x72)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;      internal/poll.(*pollDesc).wait(0x1400063a540?, 0x14000df4000?, 0x1)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;      internal/poll.(*pollDesc).waitRead(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;      internal/poll.(*FD).Read(0x1400063a540, {0x14000df4000, 0x8000, 0x8000})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;      os.(*File).read(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;      os.(*File).Read(0x1400048c0c8, {0x14000df4000?, 0x1400009cda8?, 0x1001efa18?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;      io.copyBuffer({0x10233ad80, 0x14000784640}, {0x102339ec8, 0x14000f00000}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os.genericWriteTo(0x1?, {0x10233ad80, 0x14000784640})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;      os.(*File).WriteTo(0x1037d5230?, {0x10233ad80?, 0x14000784640?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;      io.copyBuffer({0x10233ad80, 0x14000784640}, {0x102339fc0, 0x1400048c0c8}, {0x0, 0x0, 0x0})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;      io.Copy(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;      os/exec.(*Cmd).writerDescriptor.func1()&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;      os/exec.(*Cmd).Start.func2(0x1400026e030?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;      os/exec.(*Cmd).Start in goroutine 194&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;    goroutine 197 [select]&#xA;      os/exec.(*Cmd).watchCtx(0x140005ca000, 0x14000f3f9d0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;      os/exec.(*Cmd).Start in goroutine 194&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;Interrupted by User&#xA;Second interrupt received; Ginkgo will run any reporting nodes but will skip all remaining specs and cleanup nodes.  Interrupt again to bail immediately.&#xA;Here&#39;s a current progress report:&#xA;  VirtualMachineConnectivity When virtual disks are applied checks VDs phases (Spec Runtime: 7m32.604s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;    In [AfterEach] (Node Runtime: 3.235s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66&#xA;&#xA;    Spec Goroutine&#xA;    goroutine 103 [sync.WaitGroup.Wait, 8 minutes]&#xA;      sync.runtime_SemacquireWaitGroup(0x10022cb30?, 0xd0?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;      sync.(*WaitGroup).Wait(0x1400026f000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x14000292040, 0x2, 0x101ca5e58?}, {0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, ...}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;          | &#x9;&#x9;}()&#xA;          | &#x9;}&#xA;          &gt; &#x9;wg.Wait()&#xA;          | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;          | }&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x1019be204, 0x28}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, {0x140006c9a40, 0x20}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;          | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;          | &#x9;}&#xA;          &gt; &#x9;WaitResources(resources, resource, opts)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x1019be204, 0x28}, {0x10197ceef, 0x5}, {{0x0, 0x0, 0x0}, 0x14000796b70, {0x140006d9f50, 0x25}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;          | &#x9;GinkgoHelper()&#xA;          | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;          &gt; &#x9;WaitByLabel(resource, opts)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.5.1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:109&#xA;          | It(&#34;checks VDs phases&#34;, func() {&#xA;          | &#x9;By(fmt.Sprintf(&#34;VDs should be in %s phase&#34;, PhaseReady))&#xA;          &gt; &#x9;WaitPhaseByLabel(kc.ResourceVD, PhaseReady, kc.WaitOptions{&#xA;          | &#x9;&#x9;Labels:    testCaseLabel,&#xA;          | &#x9;&#x9;Namespace: ns,&#xA;      github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 25&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;    Goroutines of Interest&#xA;    goroutine 149 [syscall, 8 minutes]&#xA;      syscall.syscall6(0x100e60620?, 0x12f9e7060?, 0x10459cf30?, 0x90?, 0x14000273808?, 0x14000208510?, 0x140009baa58?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;      syscall.wait4(0x140009baa88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;      syscall.Wait4(0x1400029c770?, 0x140009baac4, 0x14000e60620?, 0x1400029c700?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;      os.(*Process).pidWait.func1(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;      os.ignoringEINTR2[...](...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;      os.(*Process).pidWait(0x14000720240)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;      os.(*Process).wait(0x14000e47408?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;      os.(*Process).Wait(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;      os/exec.(*Cmd).Wait(0x14000171680)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;      os/exec.(*Cmd).Run(0x14000171680)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x1400029c620?}}, {0x102362488?, 0x1400029c620?}, {0x1400073a540?, 0xc2331d0c5aaf8ee8?}, {0x10233ad80, 0x140007201c0}, {0x10233ad80, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;          | &#x9;cmd.Stderr = stderr&#xA;          | &#x9;cmd.Stdout = stdout&#xA;          &gt; &#x9;return cmd.Run()&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x1400029c620}, {0x1400073a540, 0xbf})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;          | stdout := new(Buffer)&#xA;          | stderr := new(Buffer)&#xA;          &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;          | cmdResult := &amp;CMDResult{&#xA;          | &#x9;stdOut:  stdout,&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x140004af698?}}, {0x1019be204, 0x28}, {0x140001360c0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;          | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;          | &#x9;defer cancel()&#xA;          &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;          | go func() {&#xA;          | &#x9;defer wg.Done()&#xA;          &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;          | &#x9;if res.Error() != nil {&#xA;          | &#x9;&#x9;mu.Lock()&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;          | for _, name := range resources {&#xA;          | &#x9;wg.Add(1)&#xA;          &gt; &#x9;go func() {&#xA;          | &#x9;&#x9;defer wg.Done()&#xA;          | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;    goroutine 147 [sync.Cond.Wait, 8 minutes]&#xA;      sync.runtime_notifyListWait(0x140005f4c48, 0x8b)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;      sync.(*Cond).Wait(0x140005f4c38)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;      golang.org/x/net/http2.(*pipe).Read(0x140005f4c30, {0x14000879000, 0x1000, 0x1000})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;      golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000879000?, 0x101e15b40?, 0x14000e63340?})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;      bufio.(*Reader).fill(0x140005aa840)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;      bufio.(*Reader).ReadByte(0x140005aa840)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;      compress/flate.(*decompressor).moreBits(0x14000613908)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;      compress/flate.(*decompressor).nextBlock(0x14000613908)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;      compress/flate.(*decompressor).Read(0x14000613908, {0x14000cba963, 0xe569d, 0x100371c74?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;      compress/gzip.(*Reader).Read(0x14000176848, {0x14000cba963, 0xe569d, 0xe569d})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;      golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000cba963?, 0x14000e669b8?, 0x14000cba814?})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;      bufio.(*Scanner).Scan(0x140009bfda0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x140006ba420}, {0x10233b5a0, 0x14000075320})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;          | num := 0&#xA;          | &#xA;          &gt; for scanner.Scan() {&#xA;          | &#x9;rawEntry := scanner.Bytes()&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;          | defer l.wg.Done()&#xA;          | &#xA;          &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;          | l.mu.Lock()&#xA;          | defer l.mu.Unlock()&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;          | &#xA;          | l.wg.Add(1)&#xA;          &gt; go func() {&#xA;          | &#x9;defer l.wg.Done()&#xA;          | &#xA;&#xA;    goroutine 49 [sync.Cond.Wait, 8 minutes]&#xA;      sync.runtime_notifyListWait(0x14000171cc8, 0x1)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;      sync.(*Cond).Wait(0x14000171cb8)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;      golang.org/x/net/http2.(*pipe).Read(0x14000171cb0, {0x14000878000, 0x1000, 0x1000})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;      golang.org/x/net/http2.transportResponseBody.Read({0x1400076d440?}, {0x14000878000?, 0x101e15b40?, 0x14000e188f0?})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;      bufio.(*Reader).fill(0x140005aa780)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;      bufio.(*Reader).ReadByte(0x140005aa780)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;      compress/flate.(*decompressor).moreBits(0x14000612608)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;      compress/flate.(*decompressor).nextBlock(0x14000612608)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;      compress/flate.(*decompressor).Read(0x14000612608, {0x14000ba3174, 0xfce8c, 0x100371c74?})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;      compress/gzip.(*Reader).Read(0x140001762c8, {0x14000ba3174, 0xfce8c, 0xfce8c})&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;      golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000ba3174?, 0x14000e1a778?, 0x14000ba30f2?})&#xA;        /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;      bufio.(*Scanner).Scan(0x14000901da0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x1400059a210, {0x12fdcba60, 0x1400076d230}, {0x10233b5a0, 0x14000075320})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;          | num := 0&#xA;          | &#xA;          &gt; for scanner.Scan() {&#xA;          | &#x9;rawEntry := scanner.Bytes()&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;          | defer l.wg.Done()&#xA;          | &#xA;          &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;          | l.mu.Lock()&#xA;          | defer l.mu.Unlock()&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 12&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;          | &#xA;          | l.wg.Add(1)&#xA;          &gt; go func() {&#xA;          | &#x9;defer l.wg.Done()&#xA;          | &#xA;&#xA;    goroutine 150 [syscall, 8 minutes]&#xA;      syscall.syscall6(0x10026f040?, 0x12fbbea38?, 0x10459ca78?, 0x90?, 0x14000790008?, 0x14000f20090?, 0x14000606a58?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;      syscall.wait4(0x14000606a88?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;      syscall.Wait4(0x140004821c0?, 0x14000606ac4, 0x1400026f040?, 0x14000482150?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;      os.(*Process).pidWait.func1(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;      os.ignoringEINTR2[...](...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;      os.(*Process).pidWait(0x14000470c40)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;      os.(*Process).wait(0x14000f28408?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;      os.(*Process).Wait(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;      os/exec.(*Cmd).Wait(0x14000f24000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;      os/exec.(*Cmd).Run(0x14000f24000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x14000482000?}}, {0x102362488?, 0x14000482000?}, {0x14000f22000?, 0xc2331d0c5aafa658?}, {0x10233ad80, 0x14000470a40}, {0x10233ad80, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;          | &#x9;cmd.Stderr = stderr&#xA;          | &#x9;cmd.Stdout = stdout&#xA;          &gt; &#x9;return cmd.Run()&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x14000482000}, {0x14000f22000, 0xbf})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;          | stdout := new(Buffer)&#xA;          | stderr := new(Buffer)&#xA;          &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;          | cmdResult := &amp;CMDResult{&#xA;          | &#x9;stdOut:  stdout,&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x0?}}, {0x1019be204, 0x28}, {0x140001360e0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;          | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;          | &#x9;defer cancel()&#xA;          &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;          | go func() {&#xA;          | &#x9;defer wg.Done()&#xA;          &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;          | &#x9;if res.Error() != nil {&#xA;          | &#x9;&#x9;mu.Lock()&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 103&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;          | for _, name := range resources {&#xA;          | &#x9;wg.Add(1)&#xA;          &gt; &#x9;go func() {&#xA;          | &#x9;&#x9;defer wg.Done()&#xA;          | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;    goroutine 194 [syscall]&#xA;      syscall.syscall6(0x10090f9a0?, 0x12fbbea38?, 0x10459cf30?, 0x90?, 0x14000100008?, 0x14000f20b40?, 0x14000902b08?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;      syscall.wait4(0x14000902b38?, 0x1002ae6fc?, 0x90?, 0x1022aa120?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;      syscall.Wait4(0x14000482770?, 0x14000902b74, 0x1400090f9a0?, 0x14000482700?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;      os.(*Process).pidWait.func1(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;      os.ignoringEINTR2[...](...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;      os.(*Process).pidWait(0x140007846c0)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;      os.(*Process).wait(0x14000051008?)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;      os.(*Process).Wait(...)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;      os/exec.(*Cmd).Wait(0x140005ca000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;      os/exec.(*Cmd).Run(0x140005ca000)&#xA;        /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x102341e88?, 0x14000482620?}}, {0x102362488?, 0x14000482620?}, {0x14000924840?, 0xc2331c84e20b9380?}, {0x10233ad80, 0x140007845c0}, {0x10233ad80, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;          | &#x9;cmd.Stderr = stderr&#xA;          | &#x9;cmd.Stdout = stdout&#xA;          &gt; &#x9;return cmd.Run()&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x10384f728?, 0x103825fa0?}}, {0x102362488, 0x14000482620}, {0x14000924840, 0xb0})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;          | stdout := new(Buffer)&#xA;          | stderr := new(Buffer)&#xA;          &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;          | cmdResult := &amp;CMDResult{&#xA;          | &#x9;stdOut:  stdout,&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.Get({{0x102366a38?, 0x1400000fc68?}, {0x10197ffba?, 0x140007a3c80?}}, {0x1019d72e2, 0x31}, {{0x0, 0x0, 0x0}, 0x0, ...})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:208&#xA;          | &#x9;ctx, cancel := context.WithTimeout(context.Background(), MediumTimeout)&#xA;          | &#x9;defer cancel()&#xA;          &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;          | }&#xA;          | &#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.SaveTestCaseResources(0x14000796b70, {0x14000719a28, 0x11}, {0x140006d9f50, 0x25}, {0x10197c370, 0x4})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:765&#xA;          | errorFileName := fmt.Sprintf(&#34;%s/e2e_failed__%s__%s_error.txt&#34;, dumpPath, labels[&#34;testcase&#34;], additional)&#xA;          | &#xA;          &gt; cmdr := kubectl.Get(&#xA;          | &#x9;&#34;virtualization,cvi,vmc,intvirt,pod,volumesnapshot&#34;,&#xA;          | &#x9;kc.GetOptions{&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.SaveTestCaseDump(0x14000796b70, {0x101990e1e, 0x11}, {0x140006d9f50, 0x25})&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:757&#xA;          | &#x9;}&#xA;          | &#xA;          &gt; &#x9;SaveTestCaseResources(labels, additional, namespace, tmpDir)&#xA;          | &#x9;SavePodLogsAndDescriptions(labels, additional, namespace, tmpDir)&#xA;          | }&#xA;    &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.2()&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:68&#xA;          | AfterEach(func() {&#xA;          | &#x9;if CurrentSpecReport().Failed() {&#xA;          &gt; &#x9;&#x9;SaveTestCaseDump(testCaseLabel, CurrentSpecReport().LeafNodeText, ns)&#xA;          | &#x9;}&#xA;          | })&#xA;      github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;      github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 25&#xA;        /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&lt; Exit [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/12/25 21:59:04.808 (3.237s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When run curl-helper status should be in Running phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets VMs and SVCs objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready check ssh connection via `d8 v` to VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks VMs connection to external network" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready check nginx status via `d8 v` on VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-b" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready changes selector in service head-5073ae15-vm-connectivity-a with selector from service head-5073ae15-vm-connectivity-b" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready changes back selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual images are applied: checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual disks are applied: checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines are applied: checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machine block device attachments are applied: checks VMBDAs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When unattached VDs in phase Ready: creates VDs snapshots with `requiredConsistency`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When unattached VDs in phase Ready: checks snapshots of unattached VDs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase creates snapshots with `requiredConsistency` of attached VDs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase creates `vdSnapshots` concurrently" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase checks snapshots" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase checks `FileSystemFrozen` status of VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtualization resources are applied result should be succeeded [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtualization resources are applied should fill empty virtualMachineClassName with the default class name [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual images are applied checks VIs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When cluster virtual images are applied checks CVIs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machine classes are applied checks VMClasses phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines IP addresses are applied patches custom VMIP with unassigned address [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines IP addresses are applied checks VMIPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual disks are applied checks VDs phases with consumers [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual disks are applied checks VDs phases with no consumers [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines are applied checks VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machine block device attachments are applied checks VMBDAs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest External connection When Virtual machine agents are ready checks VMs external connectivity [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs stops VMs by VMOPs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs checks VMOPs and VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs cleanup AlwaysOn VM VMOPs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are starting starts VMs by VMOP [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are starting checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh stops VMs by ssh [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh checks VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh start not AlwaysOn VMs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by VMOP reboot VMs by VMOP [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by VMOP checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by ssh reboot VMs by ssh [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting after deleting their pods reboots the VMs by deleting their pods [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting after deleting their pods checks VMs external connection after reboot [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When Virtual machine agents are ready starts migrations [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When VMs migrations are applied checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When VMs migrations are applied checks VMs external connection after migrations [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When test is completed deletes test case resources [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the virtualization resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the virtualization resources are applied checks the resources phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use retrieves the test objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use retrieves the disk count before the images attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use attaches the images into the `VirtualMachine`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use checks the `VirtualMachine` and the `VirtualMachineBlockDeviceAttachments` phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use compares the disk count before and after attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use checks that the `ISO` image is attached as `CD-ROM`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use check that the images are attached as the `ReadOnly` devices" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use detaches the images" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use compares the disk count after detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual images are applied checks `VirtualImages` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual disks are applied checks `VirtualDisks` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine are applied checks `VirtualMachine` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine are applied retrieves the test objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine block device attachment is applied checks `VirtualMachineBlockDeviceAttachment` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready obtains the disks metadata before resizing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready resizes the disks" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready checks `VirtualDisks`, `VirtualMachine` and `VirtualMachineBlockDeviceAttachment` phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready obtains and compares the disks metadata after resizing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLiveMigrationTCPSession checks TCP connection [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual disks are applied should be in Ready phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual machines are applied should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine agents are ready changes the number of processor cores" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine is patched checks the number of processor cores in specification" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine is restarted should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine agents are ready checks that the number of processor cores was changed" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is in Running phase changes the number of processor cores" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is patched checks the number of processor cores in specification" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is restarted should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine agents are ready checks that the number of processor cores was changed" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when only root disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when root disk changed storage class and one local additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when root disk changed storage class and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when only additional disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when only root disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when root disk changed storage class and one local additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when root disk changed storage class and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when only additional disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful two migrations in a row [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running marks VMs with label map[&#34;specialKey&#34;:&#34;specialValue&#34;]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running checks VMs and pods labels after VMs labeling" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running removes label map[specialKey:specialValue] from VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running checks VMs and pods labels after VMs unlabeling" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase marks VMs with annotation map[&#34;specialKey&#34;:&#34;specialValue&#34;]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase checks VMs and pods annotations after VMs annotating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase removes annotation map[specialKey:specialValue] from VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase checks VMs and pods annotations after VMs unannotating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When base virtual resources are ready checks VD phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When base virtual resources are ready checks VDSnapshot phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When virtual images are applied checks CVIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual disks are applied checks VDs phases with map[vm:not-existing-vmclass-with-changing] and map[vm:not-existing-vmclass-with-creating] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual disks are applied checks VDs phases with map[vm:existing-vmclass] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines are applied checks VMs phases with map[vm:not-existing-vmclass-with-changing] and map[vm:not-existing-vmclass-with-creating] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines are applied checks VMs phases with map[vm:existing-vmclass] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending checks condition status before changing &#39;virtulaMachineCLass` field with existing class" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending changes VMClassName in VM specification with existing VMClass" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending checks VM phase and condition status after changing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending checks condition status before creating `VirtualMachineClass`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending changes VMClassName in VM specification with not existing VMClass which have correct prefix for creating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending creates new `VirtualMachineClass`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending checks VM phase and condition after creating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines in phase Running checks sizing policy match" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when only root disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when root disk on local storage and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when only additional disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when only root disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when root disk on local storage and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when only additional disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful two migrations in a row [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted first and completed second [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted because virtual machine stopped when virtual machine deleting [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted because virtual machine stopped when virtual machine stopped from OS [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration Migrate to not matched node should reverted because migration canceled when pod pending [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be failed with RWO VMBDA [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When resources are applied result should be succeeded [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machines are applied checks VMs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machines are applied checks network availability [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machine agents and network are ready starts migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks VMs and VMOPs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks VMs external connection after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks network availability after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When test is completed deletes test case resources [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] IPAM vmip with type Auto Creates vmip with type Auto" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] IPAM vmip with type Static Creates vmip with type Static" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When resources are applied result should be succeeded [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When virtual machines are applied checks VMs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When virtual machine agents are ready starts migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When VMs migrations are applied checks VMs and VMOPs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When VMs migrations are applied checks VMs external connection after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When test is completed deletes test case resources [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy Project creates project" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy Project checks project readiness" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual images are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual disks are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual machines are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineCancelMigration Cancel migrate [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready get disk count before attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready attaches virtual disk" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready checks VM and VMBDA phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready compares disk count before and after attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases get disk count before detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases detaches virtual disk" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases checks VM phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases compares disk count before and after detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied result should be succeeded [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied checks the resources phase [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied add additional interface to virtual machines [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the resources are ready to use restore the `VirtualMachines` with `Safe` mode [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the resources are ready to use check the .status.networks of each VM after restore [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When test is completed deletes test case resources [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtualization resources are applied: checks the resources phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machines agents are ready checks the `status.nodeName` field of the `VirtualMachines`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machine `node-selector` agent is ready sets the `spec.nodeSelector` field" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machine `node-affinity` agent is ready sets the `spec.affinity.nodeAffinity` field" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineEvacuation Evacuation [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual disks are applied: checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are applied: checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are ready: has qemu version in the status" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are ready: has libvirt version in the status" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied result should be succeeded [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied checks the resources phase [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied add additional interface to virtual machines [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the resources are ready to use restore the `VirtualMachines` with `forced` mode [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the resources are ready to use check the .status.networks of each VM after restore [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When test is completed deletes test case resources [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[SynchronizedAfterSuite]" classname="Tests" status="skipped" time="5.84e-07">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[DeferCleanup (Suite)]" classname="Tests" status="skipped" time="1.66e-07">
              <skipped message="skipped"></skipped>
          </testcase>
      </testsuite>
  </testsuites>