<?xml version="1.0" encoding="UTF-8"?>
  <testsuites tests="215" disabled="209" errors="1" failures="1" time="336.745921542">
      <testsuite name="Tests" package="/Users/antont/ansible_deckhouse/virtualization-full/tests/e2e" tests="215" disabled="0" skipped="209" errors="1" failures="1" time="336.745921542" timestamp="2025-10-11T18:36:29">
          <properties>
              <property name="SuiteSucceeded" value="false"></property>
              <property name="SuiteHasProgrammaticFocus" value="false"></property>
              <property name="SpecialSuiteFailureReason" value="Interrupted by User"></property>
              <property name="SuiteLabels" value="[]"></property>
              <property name="RandomSeed" value="1760195936"></property>
              <property name="RandomizeAllSpecs" value="false"></property>
              <property name="LabelFilter" value=""></property>
              <property name="FocusStrings" value=""></property>
              <property name="SkipStrings" value=""></property>
              <property name="FocusFiles" value=""></property>
              <property name="SkipFiles" value=""></property>
              <property name="FailOnPending" value="false"></property>
              <property name="FailOnEmpty" value="false"></property>
              <property name="FailFast" value="false"></property>
              <property name="FlakeAttempts" value="0"></property>
              <property name="DryRun" value="false"></property>
              <property name="ParallelTotal" value="1"></property>
              <property name="OutputInterceptorMode" value=""></property>
          </properties>
          <testcase name="[SynchronizedBeforeSuite]" classname="Tests" status="passed" time="4.899628541">
              <system-err>&gt; Enter [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 18:36:29.726&#xA;&lt; Exit [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 18:36:34.63 (4.9s)&#xA;&gt; Enter [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 18:36:34.63&#xA;&lt; Exit [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 18:36:34.63 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When resources are applied result should be succeeded" classname="Tests" status="passed" time="6.529187">
              <system-err>&gt; Enter [BeforeAll] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:57 @ 10/11/25 18:36:34.634&#xA;&lt; Exit [BeforeAll] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:57 @ 10/11/25 18:36:36.626 (1.991s)&#xA;&gt; Enter [It] result should be succeeded - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:73 @ 10/11/25 18:36:36.627&#xA;&lt; Exit [It] result should be succeeded - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:73 @ 10/11/25 18:36:41.167 (4.538s)&#xA;&gt; Enter [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/11/25 18:36:41.167&#xA;&lt; Exit [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/11/25 18:36:41.167 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual images are applied checks VIs phases" classname="Tests" status="passed" time="34.583424667">
              <system-err>&gt; Enter [It] checks VIs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:96 @ 10/11/25 18:36:41.168&#xA;STEP: VIs should be in Ready phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:97 @ 10/11/25 18:36:41.168&#xA;&lt; Exit [It] checks VIs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:96 @ 10/11/25 19:26:32.428 (34.583s)&#xA;&gt; Enter [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/11/25 19:26:32.428&#xA;&lt; Exit [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/11/25 19:26:32.428 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual disks are applied checks VDs phases" classname="Tests" status="interrupted" time="286.057727417">
              <error message="Interrupted by User" type="interrupted">[INTERRUPTED] Interrupted by User&#xA;In [It] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107 @ 10/11/25 21:13:13.636&#xA;&#xA;This is the Progress Report generated when the interrupt was received:&#xA;  VirtualMachineConnectivity When virtual disks are applied checks VDs phases (Spec Runtime: 4m35.212s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;    In [It] (Node Runtime: 4m35.212s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;      At [By Step] VDs should be in Ready phase (Step Runtime: 4m35.212s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:108&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 78 [sync.WaitGroup.Wait, 5 minutes]&#xA;        sync.runtime_SemacquireWaitGroup(0x102104b30?, 0xe0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x14000900dc0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x140007ac8e0, 0x2, 0x103b7de58?}, {0x103896204, 0x28}, {{0x0, 0x0, 0x0}, 0x140000351a0, {0x14000d0a180, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x103896204, 0x28}, {{0x0, 0x0, 0x0}, 0x140000351a0, {0x14000d0a180, 0x25}, {0x14000167660, 0x20}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x103896204, 0x28}, {0x103854eef, 0x5}, {{0x0, 0x0, 0x0}, 0x140000351a0, {0x14000d0a180, 0x25}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.5.1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:109&#xA;            | It(&#34;checks VDs phases&#34;, func() {&#xA;            | &#x9;By(fmt.Sprintf(&#34;VDs should be in %s phase&#34;, PhaseReady))&#xA;            &gt; &#x9;WaitPhaseByLabel(kc.ResourceVD, PhaseReady, kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 6&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 169 [syscall, 5 minutes]&#xA;        syscall.syscall6(0x1006c0dd0?, 0x111ad8168?, 0x106474108?, 0x90?, 0x14000580008?, 0x14000932240?, 0x14000571a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000571a88?, 0x1021866fc?, 0x90?, 0x104182120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x14000270690?, 0x14000571ac4, 0x140006c0dd0?, 0x14000270620?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000287680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000a55408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x1400093a180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x1400093a180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x104219e88?, 0x14000270540?}}, {0x10423a488?, 0x14000270540?}, {0x140003463c0?, 0xc232c02d7558b148?}, {0x104212d80, 0x14000286600}, {0x104212d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x105727728?, 0x1056fdfa0?}}, {0x10423a488, 0x14000270540}, {0x140003463c0, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10423ea38?, 0x140004a1c20?}, {0x103857fba?, 0x14000571e88?}}, {0x103896204, 0x28}, {0x14000431480, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 78&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 170 [syscall, 5 minutes]&#xA;        syscall.syscall6(0x100900e00?, 0x10655b060?, 0x1064745c0?, 0x90?, 0x14000273808?, 0x140002085a0?, 0x14000948a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000948a88?, 0x1021866fc?, 0x90?, 0x104182120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x140002890a0?, 0x14000948ac4, 0x14000900e00?, 0x14000289030?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x140006d64c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000bd6808?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140005ae480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140005ae480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x104219e88?, 0x14000288f50?}}, {0x10423a488?, 0x14000288f50?}, {0x140006f0480?, 0xc232c02d7558ad60?}, {0x104212d80, 0x140006d6440}, {0x104212d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x105727728?, 0x1056fdfa0?}}, {0x10423a488, 0x14000288f50}, {0x140006f0480, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10423ea38?, 0x140004a1c20?}, {0x103857fba?, 0x2d7375656874656d?}}, {0x103896204, 0x28}, {0x140004314a0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 78&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      Other Goroutines&#xA;      goroutine 6 [running]&#xA;        github.com/onsi/ginkgo/v2/internal.extractRunningGoroutines()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:181&#xA;        github.com/onsi/ginkgo/v2/internal.NewProgressReport(_, {{0x140005ac080, 0x2, 0x2}, {0x140002700e0, 0x2, 0x2}, {0x14000280a80, 0x2, 0x2}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:75&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).generateProgressReport(_, _)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:381&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode(_, {0xdc, 0x4, {0x103868e1e, 0x11}, 0x140002fb610, {{0x1049418e1, 0x55}, 0x6b, {0x0, ...}, ...}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:980&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).attemptSpec(0x140004ff7f0, 0x1, {{0x140006b7208?, 0x140002700e0?, 0x2?}, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:199&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).run(0x140004ff7f0, {0x140008c8fc8?, 0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:349&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runSpecs(0x14000021508, {0x103854f2b, 0x5}, {0x105727728, 0x0, 0x0}, {0x1400005a0f4, 0x3d}, 0x0, {0x14000092c08, ...})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:489&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).Run(_, {_, _}, {_, _, _}, {_, _}, _, {_, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:130&#xA;        github.com/onsi/ginkgo/v2.RunSpecs({0x1042120a0, 0x14000583340}, {0x103854f2b, 0x5}, {0x0, 0x0, 0x0})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/core_dsl.go:300&#xA;        github.com/deckhouse/virtualization/tests/e2e.TestE2E(0x14000583340)&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:76&#xA;        testing.tRunner(0x14000583340, 0x104201c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.(*T).Run in goroutine 1&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1997&#xA;&#xA;      goroutine 1 [chan receive, 5 minutes]&#xA;        testing.(*T).Run(0x14000583180, {0x10385799a?, 0x14000517b38?}, 0x104201c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2005&#xA;        testing.runTests.func1(0x14000583180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2477&#xA;        testing.tRunner(0x14000583180, 0x14000517c68)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.runTests(0x140004a0c00, {0x1056acfd0, 0x1, 0x1}, {0x140005ad0e0?, 0xf?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2475&#xA;        testing.(*M).Run(0x140004e12c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2337&#xA;        main.main()&#xA;          _testmain.go:45&#xA;&#xA;      goroutine 32 [select, 5 minutes]&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 6&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;&#xA;      goroutine 178 [IO wait, 5 minutes]&#xA;        internal/poll.runtime_pollWait(0x111cd9a00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x1400060e660?, 0x14000f98000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x1400060e660, {0x14000f98000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140007000b0, {0x14000f98000?, 0x1400045cda8?, 0x1020c7a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x104212d80, 0x14000286600}, {0x104211ec8, 0x140000a2020}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400011b001?, {0x104212d80, 0x14000286600})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1056ad230?, {0x104212d80?, 0x14000286600?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x104212d80, 0x14000286600}, {0x104211fc0, 0x140007000b0}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400093a000?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 169&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 70 [select]&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x104242480?)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 6&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;&#xA;      goroutine 82 [syscall]&#xA;        os/signal.signal_recv()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sigqueue.go:149&#xA;        os/signal.loop()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal_unix.go:23&#xA;        os/signal.Notify.func1.1 in goroutine 6&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal.go:152&#xA;&#xA;      goroutine 179 [IO wait, 3 minutes]&#xA;        internal/poll.runtime_pollWait(0x111cd9800, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x1400060e720?, 0x14000fa0000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x1400060e720, {0x14000fa0000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140007000c8, {0x14000fa0000?, 0x129?, 0x8000?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x104212d80, 0x14000287600}, {0x104211ec8, 0x140000a2028}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x140000b3e01?, {0x104212d80, 0x14000287600})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1056ad230?, {0x104212d80?, 0x14000287600?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x104212d80, 0x14000287600}, {0x104211fc0, 0x140007000c8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400011aee0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 169&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 173 [select, 5 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x140005ae480, 0x1400057e9a0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 170&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 172 [IO wait, 3 minutes]&#xA;        internal/poll.runtime_pollWait(0x111cd9e00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x1400069c6c0?, 0x14000f90000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x1400069c6c0, {0x14000f90000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000592a98, {0x14000f90000?, 0x129?, 0x8000?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x104212d80, 0x140006d6480}, {0x104211ec8, 0x140000a2018}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400057e701?, {0x104212d80, 0x140006d6480})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1056ad230?, {0x104212d80?, 0x140006d6480?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x104212d80, 0x140006d6480}, {0x104211fc0, 0x14000592a98}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005ae300?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 170&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 171 [IO wait, 5 minutes]&#xA;        internal/poll.runtime_pollWait(0x111cda200, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x1400069c600?, 0x14000f1e000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x1400069c600, {0x14000f1e000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000592a80, {0x14000f1e000?, 0x14000949da8?, 0x1020c7a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x104212d80, 0x140006d6440}, {0x104211ec8, 0x140001260c8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x3a2270756f726701?, {0x104212d80, 0x140006d6440})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1056ad230?, {0x104212d80?, 0x140006d6440?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x104212d80, 0x140006d6440}, {0x104211fc0, 0x14000592a80}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x2265746164707522?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 170&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 180 [select, 5 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x1400093a180, 0x1400011b1f0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 169&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;</error>
              <system-err>&gt; Enter [It] checks VDs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107 @ 10/11/25 19:26:32.428&#xA;STEP: VDs should be in Ready phase - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:108 @ 10/11/25 19:26:32.428&#xA;[INTERRUPTED] Interrupted by User&#xA;In [It] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107 @ 10/11/25 21:13:13.636&#xA;&#xA;This is the Progress Report generated when the interrupt was received:&#xA;  VirtualMachineConnectivity When virtual disks are applied checks VDs phases (Spec Runtime: 4m35.212s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;    In [It] (Node Runtime: 4m35.212s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;      At [By Step] VDs should be in Ready phase (Step Runtime: 4m35.212s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:108&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 78 [sync.WaitGroup.Wait, 5 minutes]&#xA;        sync.runtime_SemacquireWaitGroup(0x102104b30?, 0xe0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x14000900dc0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x140007ac8e0, 0x2, 0x103b7de58?}, {0x103896204, 0x28}, {{0x0, 0x0, 0x0}, 0x140000351a0, {0x14000d0a180, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x103896204, 0x28}, {{0x0, 0x0, 0x0}, 0x140000351a0, {0x14000d0a180, 0x25}, {0x14000167660, 0x20}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x103896204, 0x28}, {0x103854eef, 0x5}, {{0x0, 0x0, 0x0}, 0x140000351a0, {0x14000d0a180, 0x25}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.5.1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:109&#xA;            | It(&#34;checks VDs phases&#34;, func() {&#xA;            | &#x9;By(fmt.Sprintf(&#34;VDs should be in %s phase&#34;, PhaseReady))&#xA;            &gt; &#x9;WaitPhaseByLabel(kc.ResourceVD, PhaseReady, kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 6&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 169 [syscall, 5 minutes]&#xA;        syscall.syscall6(0x1006c0dd0?, 0x111ad8168?, 0x106474108?, 0x90?, 0x14000580008?, 0x14000932240?, 0x14000571a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000571a88?, 0x1021866fc?, 0x90?, 0x104182120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x14000270690?, 0x14000571ac4, 0x140006c0dd0?, 0x14000270620?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000287680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000a55408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x1400093a180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x1400093a180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x104219e88?, 0x14000270540?}}, {0x10423a488?, 0x14000270540?}, {0x140003463c0?, 0xc232c02d7558b148?}, {0x104212d80, 0x14000286600}, {0x104212d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x105727728?, 0x1056fdfa0?}}, {0x10423a488, 0x14000270540}, {0x140003463c0, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10423ea38?, 0x140004a1c20?}, {0x103857fba?, 0x14000571e88?}}, {0x103896204, 0x28}, {0x14000431480, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 78&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 170 [syscall, 5 minutes]&#xA;        syscall.syscall6(0x100900e00?, 0x10655b060?, 0x1064745c0?, 0x90?, 0x14000273808?, 0x140002085a0?, 0x14000948a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000948a88?, 0x1021866fc?, 0x90?, 0x104182120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x140002890a0?, 0x14000948ac4, 0x14000900e00?, 0x14000289030?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x140006d64c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000bd6808?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140005ae480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140005ae480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x104219e88?, 0x14000288f50?}}, {0x10423a488?, 0x14000288f50?}, {0x140006f0480?, 0xc232c02d7558ad60?}, {0x104212d80, 0x140006d6440}, {0x104212d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x105727728?, 0x1056fdfa0?}}, {0x10423a488, 0x14000288f50}, {0x140006f0480, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10423ea38?, 0x140004a1c20?}, {0x103857fba?, 0x2d7375656874656d?}}, {0x103896204, 0x28}, {0x140004314a0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 78&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      Other Goroutines&#xA;      goroutine 6 [running]&#xA;        github.com/onsi/ginkgo/v2/internal.extractRunningGoroutines()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:181&#xA;        github.com/onsi/ginkgo/v2/internal.NewProgressReport(_, {{0x140005ac080, 0x2, 0x2}, {0x140002700e0, 0x2, 0x2}, {0x14000280a80, 0x2, 0x2}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:75&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).generateProgressReport(_, _)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:381&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode(_, {0xdc, 0x4, {0x103868e1e, 0x11}, 0x140002fb610, {{0x1049418e1, 0x55}, 0x6b, {0x0, ...}, ...}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:980&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).attemptSpec(0x140004ff7f0, 0x1, {{0x140006b7208?, 0x140002700e0?, 0x2?}, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:199&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).run(0x140004ff7f0, {0x140008c8fc8?, 0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:349&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runSpecs(0x14000021508, {0x103854f2b, 0x5}, {0x105727728, 0x0, 0x0}, {0x1400005a0f4, 0x3d}, 0x0, {0x14000092c08, ...})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:489&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).Run(_, {_, _}, {_, _, _}, {_, _}, _, {_, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:130&#xA;        github.com/onsi/ginkgo/v2.RunSpecs({0x1042120a0, 0x14000583340}, {0x103854f2b, 0x5}, {0x0, 0x0, 0x0})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/core_dsl.go:300&#xA;        github.com/deckhouse/virtualization/tests/e2e.TestE2E(0x14000583340)&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:76&#xA;        testing.tRunner(0x14000583340, 0x104201c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.(*T).Run in goroutine 1&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1997&#xA;&#xA;      goroutine 1 [chan receive, 5 minutes]&#xA;        testing.(*T).Run(0x14000583180, {0x10385799a?, 0x14000517b38?}, 0x104201c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2005&#xA;        testing.runTests.func1(0x14000583180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2477&#xA;        testing.tRunner(0x14000583180, 0x14000517c68)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.runTests(0x140004a0c00, {0x1056acfd0, 0x1, 0x1}, {0x140005ad0e0?, 0xf?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2475&#xA;        testing.(*M).Run(0x140004e12c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2337&#xA;        main.main()&#xA;          _testmain.go:45&#xA;&#xA;      goroutine 32 [select, 5 minutes]&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 6&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;&#xA;      goroutine 178 [IO wait, 5 minutes]&#xA;        internal/poll.runtime_pollWait(0x111cd9a00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x1400060e660?, 0x14000f98000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x1400060e660, {0x14000f98000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140007000b0, {0x14000f98000?, 0x1400045cda8?, 0x1020c7a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x104212d80, 0x14000286600}, {0x104211ec8, 0x140000a2020}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400011b001?, {0x104212d80, 0x14000286600})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1056ad230?, {0x104212d80?, 0x14000286600?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x104212d80, 0x14000286600}, {0x104211fc0, 0x140007000b0}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400093a000?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 169&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 70 [select]&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x104242480?)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 6&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;&#xA;      goroutine 82 [syscall]&#xA;        os/signal.signal_recv()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sigqueue.go:149&#xA;        os/signal.loop()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal_unix.go:23&#xA;        os/signal.Notify.func1.1 in goroutine 6&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal.go:152&#xA;&#xA;      goroutine 179 [IO wait, 3 minutes]&#xA;        internal/poll.runtime_pollWait(0x111cd9800, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x1400060e720?, 0x14000fa0000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x1400060e720, {0x14000fa0000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140007000c8, {0x14000fa0000?, 0x129?, 0x8000?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x104212d80, 0x14000287600}, {0x104211ec8, 0x140000a2028}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x140000b3e01?, {0x104212d80, 0x14000287600})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1056ad230?, {0x104212d80?, 0x14000287600?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x104212d80, 0x14000287600}, {0x104211fc0, 0x140007000c8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x1400011aee0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 169&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 173 [select, 5 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x140005ae480, 0x1400057e9a0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 170&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 172 [IO wait, 3 minutes]&#xA;        internal/poll.runtime_pollWait(0x111cd9e00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x1400069c6c0?, 0x14000f90000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x1400069c6c0, {0x14000f90000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000592a98, {0x14000f90000?, 0x129?, 0x8000?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x104212d80, 0x140006d6480}, {0x104211ec8, 0x140000a2018}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1400057e701?, {0x104212d80, 0x140006d6480})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1056ad230?, {0x104212d80?, 0x140006d6480?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x104212d80, 0x140006d6480}, {0x104211fc0, 0x14000592a98}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005ae300?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 170&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 171 [IO wait, 5 minutes]&#xA;        internal/poll.runtime_pollWait(0x111cda200, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x1400069c600?, 0x14000f1e000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x1400069c600, {0x14000f1e000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000592a80, {0x14000f1e000?, 0x14000949da8?, 0x1020c7a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x104212d80, 0x140006d6440}, {0x104211ec8, 0x140001260c8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x3a2270756f726701?, {0x104212d80, 0x140006d6440})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1056ad230?, {0x104212d80?, 0x140006d6440?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x104212d80, 0x140006d6440}, {0x104211fc0, 0x14000592a80}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x2265746164707522?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 170&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 180 [select, 5 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x1400093a180, 0x1400011b1f0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 169&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;Interrupted by User&#xA;First interrupt received; Ginkgo will run any cleanup and reporting nodes but will skip all remaining specs.  Interrupt again to skip cleanup.&#xA;Here&#39;s a current progress report:&#xA;  VirtualMachineConnectivity When virtual disks are applied checks VDs phases (Spec Runtime: 4m35.212s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;    In [It] (Node Runtime: 4m35.212s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107&#xA;      At [By Step] VDs should be in Ready phase (Step Runtime: 4m35.212s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:108&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 78 [sync.WaitGroup.Wait, 5 minutes]&#xA;        sync.runtime_SemacquireWaitGroup(0x102104b30?, 0xe0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x14000900dc0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x140007ac8e0, 0x2, 0x103b7de58?}, {0x103896204, 0x28}, {{0x0, 0x0, 0x0}, 0x140000351a0, {0x14000d0a180, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x103896204, 0x28}, {{0x0, 0x0, 0x0}, 0x140000351a0, {0x14000d0a180, 0x25}, {0x14000167660, 0x20}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x103896204, 0x28}, {0x103854eef, 0x5}, {{0x0, 0x0, 0x0}, 0x140000351a0, {0x14000d0a180, 0x25}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func12.5.1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:109&#xA;            | It(&#34;checks VDs phases&#34;, func() {&#xA;            | &#x9;By(fmt.Sprintf(&#34;VDs should be in %s phase&#34;, PhaseReady))&#xA;            &gt; &#x9;WaitPhaseByLabel(kc.ResourceVD, PhaseReady, kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 6&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 169 [syscall, 5 minutes]&#xA;        syscall.syscall6(0x1006c0dd0?, 0x111ad8168?, 0x106474108?, 0x90?, 0x14000580008?, 0x14000932240?, 0x14000571a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000571a88?, 0x1021866fc?, 0x90?, 0x104182120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x14000270690?, 0x14000571ac4, 0x140006c0dd0?, 0x14000270620?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000287680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000a55408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x1400093a180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x1400093a180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x104219e88?, 0x14000270540?}}, {0x10423a488?, 0x14000270540?}, {0x140003463c0?, 0xc232c02d7558b148?}, {0x104212d80, 0x14000286600}, {0x104212d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x105727728?, 0x1056fdfa0?}}, {0x10423a488, 0x14000270540}, {0x140003463c0, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10423ea38?, 0x140004a1c20?}, {0x103857fba?, 0x14000571e88?}}, {0x103896204, 0x28}, {0x14000431480, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 78&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 170 [syscall, 5 minutes]&#xA;        syscall.syscall6(0x100900e00?, 0x10655b060?, 0x1064745c0?, 0x90?, 0x14000273808?, 0x140002085a0?, 0x14000948a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000948a88?, 0x1021866fc?, 0x90?, 0x104182120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x140002890a0?, 0x14000948ac4, 0x14000900e00?, 0x14000289030?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x140006d64c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000bd6808?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140005ae480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140005ae480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a34b0?, 0x104219e88?, 0x14000288f50?}}, {0x10423a488?, 0x14000288f50?}, {0x140006f0480?, 0xc232c02d7558ad60?}, {0x104212d80, 0x140006d6440}, {0x104212d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a34b0?, 0x105727728?, 0x1056fdfa0?}}, {0x10423a488, 0x14000288f50}, {0x140006f0480, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10423ea38?, 0x140004a1c20?}, {0x103857fba?, 0x2d7375656874656d?}}, {0x103896204, 0x28}, {0x140004314a0, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 78&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&lt; Exit [It] checks VDs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:107 @ 10/11/25 21:13:13.64 (4m35.215s)&#xA;&gt; Enter [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/11/25 21:13:13.64&#xA;&lt; Exit [AfterEach] VirtualMachineConnectivity - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_connectivity_test.go:66 @ 10/11/25 21:13:24.482 (10.843s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When run curl-helper status should be in Running phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets VMs and SVCs objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready check ssh connection via `d8 v` to VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks VMs connection to external network" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready check nginx status via `d8 v` on VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-b" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready changes selector in service head-5073ae15-vm-connectivity-a with selector from service head-5073ae15-vm-connectivity-b" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready changes back selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineEvacuation Evacuation [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual disks are applied: checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are applied: checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are ready: has qemu version in the status" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are ready: has libvirt version in the status" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When base virtual resources are ready checks VD phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When base virtual resources are ready checks VDSnapshot phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When virtual images are applied checks CVIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual disks are applied should be in Ready phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual machines are applied should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine agents are ready changes the number of processor cores" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine is patched checks the number of processor cores in specification" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine is restarted should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine agents are ready checks that the number of processor cores was changed" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is in Running phase changes the number of processor cores" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is patched checks the number of processor cores in specification" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is restarted should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine agents are ready checks that the number of processor cores was changed" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied result should be succeeded [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied checks the resources phase [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied add additional interface to virtual machines [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the resources are ready to use restore the `VirtualMachines` with `forced` mode [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the resources are ready to use check the .status.networks of each VM after restore [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When test is completed deletes test case resources [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready get disk count before attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready attaches virtual disk" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready checks VM and VMBDA phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready compares disk count before and after attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases get disk count before detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases detaches virtual disk" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases checks VM phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases compares disk count before and after detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy Project creates project" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy Project checks project readiness" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual images are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual disks are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual machines are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the virtualization resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the virtualization resources are applied checks the resources phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use retrieves the test objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use retrieves the disk count before the images attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use attaches the images into the `VirtualMachine`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use checks the `VirtualMachine` and the `VirtualMachineBlockDeviceAttachments` phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use compares the disk count before and after attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use checks that the `ISO` image is attached as `CD-ROM`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use check that the images are attached as the `ReadOnly` devices" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use detaches the images" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use compares the disk count after detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] IPAM vmip with type Auto Creates vmip with type Auto" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] IPAM vmip with type Static Creates vmip with type Static" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtualization resources are applied result should be succeeded [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtualization resources are applied should fill empty virtualMachineClassName with the default class name [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual images are applied checks VIs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When cluster virtual images are applied checks CVIs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machine classes are applied checks VMClasses phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines IP addresses are applied patches custom VMIP with unassigned address [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines IP addresses are applied checks VMIPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual disks are applied checks VDs phases with consumers [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual disks are applied checks VDs phases with no consumers [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines are applied checks VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machine block device attachments are applied checks VMBDAs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest External connection When Virtual machine agents are ready checks VMs external connectivity [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs stops VMs by VMOPs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs checks VMOPs and VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs cleanup AlwaysOn VM VMOPs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are starting starts VMs by VMOP [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are starting checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh stops VMs by ssh [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh checks VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh start not AlwaysOn VMs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by VMOP reboot VMs by VMOP [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by VMOP checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by ssh reboot VMs by ssh [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting after deleting their pods reboots the VMs by deleting their pods [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting after deleting their pods checks VMs external connection after reboot [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When Virtual machine agents are ready starts migrations [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When VMs migrations are applied checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When VMs migrations are applied checks VMs external connection after migrations [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When test is completed deletes test case resources [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual images are applied checks `VirtualImages` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual disks are applied checks `VirtualDisks` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine are applied checks `VirtualMachine` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine are applied retrieves the test objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine block device attachment is applied checks `VirtualMachineBlockDeviceAttachment` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready obtains the disks metadata before resizing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready resizes the disks" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready checks `VirtualDisks`, `VirtualMachine` and `VirtualMachineBlockDeviceAttachment` phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready obtains and compares the disks metadata after resizing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when only root disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when root disk changed storage class and one local additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when root disk changed storage class and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when only additional disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when only root disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when root disk changed storage class and one local additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when root disk changed storage class and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when only additional disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful two migrations in a row [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual disks are applied checks VDs phases with map[vm:not-existing-vmclass-with-changing] and map[vm:not-existing-vmclass-with-creating] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual disks are applied checks VDs phases with map[vm:existing-vmclass] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines are applied checks VMs phases with map[vm:not-existing-vmclass-with-changing] and map[vm:not-existing-vmclass-with-creating] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines are applied checks VMs phases with map[vm:existing-vmclass] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending checks condition status before changing &#39;virtulaMachineCLass` field with existing class" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending changes VMClassName in VM specification with existing VMClass" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending checks VM phase and condition status after changing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending checks condition status before creating `VirtualMachineClass`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending changes VMClassName in VM specification with not existing VMClass which have correct prefix for creating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending creates new `VirtualMachineClass`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending checks VM phase and condition after creating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines in phase Running checks sizing policy match" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual images are applied: checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual disks are applied: checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines are applied: checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machine block device attachments are applied: checks VMBDAs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When unattached VDs in phase Ready: creates VDs snapshots with `requiredConsistency`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When unattached VDs in phase Ready: checks snapshots of unattached VDs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase creates snapshots with `requiredConsistency` of attached VDs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase creates `vdSnapshots` concurrently" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase checks snapshots" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase checks `FileSystemFrozen` status of VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When resources are applied result should be succeeded [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When virtual machines are applied checks VMs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When virtual machine agents are ready starts migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When VMs migrations are applied checks VMs and VMOPs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When VMs migrations are applied checks VMs external connection after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When test is completed deletes test case resources [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when only root disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when root disk on local storage and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when only additional disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when only root disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when root disk on local storage and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when only additional disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful two migrations in a row [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted first and completed second [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted because virtual machine stopped when virtual machine deleting [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted because virtual machine stopped when virtual machine stopped from OS [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration Migrate to not matched node should reverted because migration canceled when pod pending [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be failed with RWO VMBDA [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineCancelMigration Cancel migrate [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When resources are applied result should be succeeded [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machines are applied checks VMs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machines are applied checks network availability [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machine agents and network are ready starts migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks VMs and VMOPs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks VMs external connection after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks network availability after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When test is completed deletes test case resources [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtualization resources are applied: checks the resources phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machines agents are ready checks the `status.nodeName` field of the `VirtualMachines`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machine `node-selector` agent is ready sets the `spec.nodeSelector` field" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machine `node-affinity` agent is ready sets the `spec.affinity.nodeAffinity` field" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied result should be succeeded [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied checks the resources phase [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied add additional interface to virtual machines [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the resources are ready to use restore the `VirtualMachines` with `Safe` mode [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the resources are ready to use check the .status.networks of each VM after restore [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When test is completed deletes test case resources [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running marks VMs with label map[&#34;specialKey&#34;:&#34;specialValue&#34;]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running checks VMs and pods labels after VMs labeling" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running removes label map[specialKey:specialValue] from VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running checks VMs and pods labels after VMs unlabeling" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase marks VMs with annotation map[&#34;specialKey&#34;:&#34;specialValue&#34;]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase checks VMs and pods annotations after VMs annotating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase removes annotation map[specialKey:specialValue] from VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase checks VMs and pods annotations after VMs unannotating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLiveMigrationTCPSession checks TCP connection [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[SynchronizedAfterSuite]" classname="Tests" status="failed" time="1.019565291">
              <failure message="Expected success, but got an error:&#xA;    &lt;*errors.joinError | 0x14000a7e390&gt;: &#xA;    the container &#34;virtualization-controller&#34; was not found: virtualization-controller-86578b98f6-t2wr5&#xA;    the container &#34;virtualization-controller&#34; was restarted: virtualization-controller-9c76787d-vv5ng&#xA;    {&#xA;        errs: [&#xA;            &lt;*errors.joinError | 0x14000a7e378&gt;{&#xA;                errs: [&#xA;                    &lt;*errors.errorString | 0x140002a29f0&gt;{&#xA;                        s: &#34;the container \&#34;virtualization-controller\&#34; was not found: virtualization-controller-86578b98f6-t2wr5&#34;,&#xA;                    },&#xA;                ],&#xA;            },&#xA;            &lt;*errors.errorString | 0x140002a2aa0&gt;{&#xA;                s: &#34;the container \&#34;virtualization-controller\&#34; was restarted: virtualization-controller-9c76787d-vv5ng&#34;,&#xA;            },&#xA;        ],&#xA;    }" type="failed">[FAILED] Expected success, but got an error:&#xA;    &lt;*errors.joinError | 0x14000a7e390&gt;: &#xA;    the container &#34;virtualization-controller&#34; was not found: virtualization-controller-86578b98f6-t2wr5&#xA;    the container &#34;virtualization-controller&#34; was restarted: virtualization-controller-9c76787d-vv5ng&#xA;    {&#xA;        errs: [&#xA;            &lt;*errors.joinError | 0x14000a7e378&gt;{&#xA;                errs: [&#xA;                    &lt;*errors.errorString | 0x140002a29f0&gt;{&#xA;                        s: &#34;the container \&#34;virtualization-controller\&#34; was not found: virtualization-controller-86578b98f6-t2wr5&#34;,&#xA;                    },&#xA;                ],&#xA;            },&#xA;            &lt;*errors.errorString | 0x140002a2aa0&gt;{&#xA;                s: &#34;the container \&#34;virtualization-controller\&#34; was restarted: virtualization-controller-9c76787d-vv5ng&#34;,&#xA;            },&#xA;        ],&#xA;    }&#xA;In [SynchronizedAfterSuite] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:183 @ 10/11/25 21:13:25.507&#xA;</failure>
              <system-err>&gt; Enter [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 21:13:24.487&#xA;&lt; Exit [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 21:13:24.487 (0s)&#xA;&gt; Enter [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 21:13:24.487&#xA;[FAILED] Expected success, but got an error:&#xA;    &lt;*errors.joinError | 0x14000a7e390&gt;: &#xA;    the container &#34;virtualization-controller&#34; was not found: virtualization-controller-86578b98f6-t2wr5&#xA;    the container &#34;virtualization-controller&#34; was restarted: virtualization-controller-9c76787d-vv5ng&#xA;    {&#xA;        errs: [&#xA;            &lt;*errors.joinError | 0x14000a7e378&gt;{&#xA;                errs: [&#xA;                    &lt;*errors.errorString | 0x140002a29f0&gt;{&#xA;                        s: &#34;the container \&#34;virtualization-controller\&#34; was not found: virtualization-controller-86578b98f6-t2wr5&#34;,&#xA;                    },&#xA;                ],&#xA;            },&#xA;            &lt;*errors.errorString | 0x140002a2aa0&gt;{&#xA;                s: &#34;the container \&#34;virtualization-controller\&#34; was restarted: virtualization-controller-9c76787d-vv5ng&#34;,&#xA;            },&#xA;        ],&#xA;    }&#xA;In [SynchronizedAfterSuite] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:183 @ 10/11/25 21:13:25.507&#xA;&lt; Exit [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 21:13:25.507 (1.02s)&#xA;</system-err>
          </testcase>
          <testcase name="[DeferCleanup (Suite)]" classname="Tests" status="passed" time="3.645765416">
              <system-err>&gt; Enter [DeferCleanup (Suite)] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:175 @ 10/11/25 21:13:25.507&#xA;&lt; Exit [DeferCleanup (Suite)] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:175 @ 10/11/25 21:13:29.153 (3.646s)&#xA;</system-err>
          </testcase>
      </testsuite>
  </testsuites>