<?xml version="1.0" encoding="UTF-8"?>
  <testsuites tests="215" disabled="211" errors="1" failures="2" time="522.7948015">
      <testsuite name="Tests" package="/Users/antont/ansible_deckhouse/virtualization-full/tests/e2e" tests="215" disabled="0" skipped="211" errors="1" failures="2" time="522.7948015" timestamp="2025-10-11T21:34:52">
          <properties>
              <property name="SuiteSucceeded" value="false"></property>
              <property name="SuiteHasProgrammaticFocus" value="false"></property>
              <property name="SpecialSuiteFailureReason" value="Interrupted by User"></property>
              <property name="SuiteLabels" value="[]"></property>
              <property name="RandomSeed" value="1760207678"></property>
              <property name="RandomizeAllSpecs" value="false"></property>
              <property name="LabelFilter" value=""></property>
              <property name="FocusStrings" value=""></property>
              <property name="SkipStrings" value=""></property>
              <property name="FocusFiles" value=""></property>
              <property name="SkipFiles" value=""></property>
              <property name="FailOnPending" value="false"></property>
              <property name="FailOnEmpty" value="false"></property>
              <property name="FailFast" value="false"></property>
              <property name="FlakeAttempts" value="0"></property>
              <property name="DryRun" value="false"></property>
              <property name="ParallelTotal" value="1"></property>
              <property name="OutputInterceptorMode" value=""></property>
          </properties>
          <testcase name="[SynchronizedBeforeSuite]" classname="Tests" status="passed" time="4.739354916">
              <system-err>&gt; Enter [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 21:34:52.839&#xA;&lt; Exit [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 21:34:57.578 (4.739s)&#xA;&gt; Enter [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 21:34:57.578&#xA;&lt; Exit [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 21:34:57.578 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineEvacuation Evacuation [SIG-Migration]" classname="Tests" status="interrupted" time="517.148809792">
              <error message="Interrupted by User" type="interrupted">[INTERRUPTED] Interrupted by User&#xA;In [It] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96 @ 10/11/25 22:28:31.47&#xA;&#xA;This is the Progress Report generated when the interrupt was received:&#xA;  VirtualMachineEvacuation Evacuation (Spec Runtime: 8m9.737s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96&#xA;    In [It] (Node Runtime: 8m1.49s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96&#xA;      At [By Step] Virtual machine agents should be ready (Step Runtime: 8m1.49s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:97&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 146 [sync.WaitGroup.Wait, 8 minutes]&#xA;        sync.runtime_SemacquireWaitGroup(0x100200b30?, 0x60?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x140005bd110)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x140001aa060, 0x2, 0x101c79e58?}, {0x101996a2d, 0x2a}, {{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x101996a2d, 0x2a}, {{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, 0x26}, {0x1400040ef00, 0x22}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x101996a2d, 0x2a}, {0x101953a0a, 0x7}, {{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, 0x26}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitVMAgentReady({{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, 0x26}, {0x0, 0x0}, 0xe8d4a51000})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:274&#xA;            | func WaitVMAgentReady(opts kc.WaitOptions) {&#xA;            | &#x9;GinkgoHelper()&#xA;            &gt; &#x9;WaitPhaseByLabel(kc.ResourceVM, PhaseRunning, opts)&#xA;            | &#x9;WaitConditionIsTrueByLabel(kc.ResourceVM, vmcondition.TypeAgentReady.String(), opts)&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func17.5()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:98&#xA;            | It(&#34;Evacuation&#34;, func() {&#xA;            | &#x9;By(&#34;Virtual machine agents should be ready&#34;)&#xA;            &gt; &#x9;WaitVMAgentReady(kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 150 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x100010990?, 0x12de212c0?, 0x104570a78?, 0x90?, 0x14000980008?, 0x14000888090?, 0x14000561a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000561a88?, 0x1002826fc?, 0x90?, 0x10227e120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x14000312700?, 0x14000561ac4, 0x14000010990?, 0x14000312540?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x140004c42c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x140008a6408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140008a4000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140008a4000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140003319e0?, 0x102315e88?, 0x140003120e0?}}, {0x102336488?, 0x140003120e0?}, {0x140008a2000?, 0xc232c7b5b94f8240?}, {0x10230ed80, 0x140004c4000}, {0x10230ed80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140003319e0?, 0x103823728?, 0x1037f9fa0?}}, {0x102336488, 0x140003120e0}, {0x140008a2000, 0xc4})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10233aa38?, 0x14000627e78?}, {0x101953fba?, 0x1400019fe98?}}, {0x101996a2d, 0x2a}, {0x1400059ca00, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 146&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 151 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x1005bd150?, 0x12de10a00?, 0x1045705c0?, 0x90?, 0x14000a00008?, 0x14000916240?, 0x14000899a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000899a88?, 0x1002826fc?, 0x90?, 0x10227e120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400031eaf0?, 0x14000899ac4, 0x140005bd150?, 0x1400031ea80?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000487680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000decc08?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140005a4480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140005a4480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140003319e0?, 0x102315e88?, 0x1400031e9a0?}}, {0x102336488?, 0x1400031e9a0?}, {0x14000df0000?, 0xc232c7b5b94f5b30?}, {0x10230ed80, 0x14000487580}, {0x10230ed80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140003319e0?, 0x103823728?, 0x1037f9fa0?}}, {0x102336488, 0x1400031e9a0}, {0x14000df0000, 0xc4})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10233aa38?, 0x14000627e78?}, {0x101953fba?, 0x1400009fe68?}}, {0x101996a2d, 0x2a}, {0x1400059ca20, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 146&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      Other Goroutines&#xA;      goroutine 8 [running]&#xA;        github.com/onsi/ginkgo/v2/internal.extractRunningGoroutines()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:181&#xA;        github.com/onsi/ginkgo/v2/internal.NewProgressReport(_, {{0x140006be000, 0x1, 0x1}, {0x14000486c00, 0x1, 0x1}, {0x14000882048, 0x1, 0x1}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:75&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).generateProgressReport(_, _)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:381&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode(_, {0x147, 0x4, {0x10195889b, 0xa}, 0x140007957c0, {{0x102a3db2f, 0x53}, 0x60, {0x0, ...}, ...}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:980&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).attemptSpec(0x14000ddb7f0, 0x1, {{0x140005e8008?, 0x14000486c00?, 0x1?}, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:199&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).run(0x14000ddb7f0, {0x140003d2e40?, 0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:349&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runSpecs(0x14000029508, {0x101950f2b, 0x5}, {0x103823728, 0x0, 0x0}, {0x1400005a0f4, 0x3d}, 0x0, {0x14000092c08, ...})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:489&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).Run(_, {_, _}, {_, _, _}, {_, _}, _, {_, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:130&#xA;        github.com/onsi/ginkgo/v2.RunSpecs({0x10230e0a0, 0x14000582a80}, {0x101950f2b, 0x5}, {0x0, 0x0, 0x0})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/core_dsl.go:300&#xA;        github.com/deckhouse/virtualization/tests/e2e.TestE2E(0x14000582a80)&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:76&#xA;        testing.tRunner(0x14000582a80, 0x1022fdc50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.(*T).Run in goroutine 1&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1997&#xA;&#xA;      goroutine 1 [chan receive, 8 minutes]&#xA;        testing.(*T).Run(0x140005828c0, {0x10195399a?, 0x14000599b38?}, 0x1022fdc50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2005&#xA;        testing.runTests.func1(0x140005828c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2477&#xA;        testing.tRunner(0x140005828c0, 0x14000599c68)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.runTests(0x14000626d80, {0x1037a8fd0, 0x1, 0x1}, {0x140003295c0?, 0xf?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2475&#xA;        testing.(*M).Run(0x140005061e0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2337&#xA;        main.main()&#xA;          _testmain.go:45&#xA;&#xA;      goroutine 56 [syscall]&#xA;        os/signal.signal_recv()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sigqueue.go:149&#xA;        os/signal.loop()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal_unix.go:23&#xA;        os/signal.Notify.func1.1 in goroutine 8&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal.go:152&#xA;&#xA;      goroutine 57 [select]&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x0?)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;&#xA;      goroutine 58 [select, 8 minutes]&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;&#xA;      goroutine 163 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12ddf8400, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000118360?, 0x14000998000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000118360, {0x14000998000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000128048, {0x14000998000?, 0x140001995a8?, 0x1001c3a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10230ed80, 0x140004c4200}, {0x10230dec8, 0x14000612008}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x140000de401?, {0x10230ed80, 0x140004c4200})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037a9230?, {0x10230ed80?, 0x140004c4200?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10230ed80, 0x140004c4200}, {0x10230dfc0, 0x14000128048}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005a4180?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 162 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12ddf8c00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140001181e0?, 0x14000900000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140001181e0, {0x14000900000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000128028, {0x14000900000?, 0x1400019fda8?, 0x1001c3a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10230ed80, 0x140004c4000}, {0x10230dec8, 0x140000a3258}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x14000627e01?, {0x10230ed80, 0x140004c4000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037a9230?, {0x10230ed80?, 0x140004c4000?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10230ed80, 0x140004c4000}, {0x10230dfc0, 0x14000128028}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005bd108?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 164 [select, 8 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x140008a4000, 0x140008c6070)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 152 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12ddf8800, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140007186c0?, 0x14000d60000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140007186c0, {0x14000d60000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140004c2228, {0x14000d60000?, 0x1400009fda8?, 0x1001c3a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10230ed80, 0x14000487580}, {0x10230dec8, 0x140006b20a8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x14000627e01?, {0x10230ed80, 0x14000487580})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037a9230?, {0x10230ed80?, 0x14000487580?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10230ed80, 0x14000487580}, {0x10230dfc0, 0x140004c2228}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005bd108?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 151&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 153 [IO wait, 4 minutes]&#xA;        internal/poll.runtime_pollWait(0x12ddf8600, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000718780?, 0x14000848000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000718780, {0x14000848000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140004c2250, {0x14000848000?, 0x129?, 0x8000?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10230ed80, 0x14000487600}, {0x10230dec8, 0x140000a3250}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x10230ed80, 0x14000487600})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037a9230?, {0x10230ed80?, 0x14000487600?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10230ed80, 0x14000487600}, {0x10230dfc0, 0x140004c2250}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140001829a0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 151&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 154 [select, 8 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x140005a4480, 0x140000de850)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 151&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;There were additional failures detected after the initial failure. These are visible in the timeline&#xA;</error>
              <system-err>&gt; Enter [BeforeAll] VirtualMachineEvacuation - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:42 @ 10/11/25 21:34:57.58&#xA;&lt; Exit [BeforeAll] VirtualMachineEvacuation - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:42 @ 10/11/25 21:34:59.105 (1.525s)&#xA;&gt; Enter [BeforeEach] VirtualMachineEvacuation - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:51 @ 10/11/25 21:34:59.105&#xA;&lt; Exit [BeforeEach] VirtualMachineEvacuation - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:51 @ 10/11/25 21:35:05.827 (6.721s)&#xA;&gt; Enter [It] Evacuation - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96 @ 10/11/25 21:35:05.827&#xA;STEP: Virtual machine agents should be ready - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:97 @ 10/11/25 21:35:05.827&#xA;[INTERRUPTED] Interrupted by User&#xA;In [It] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96 @ 10/11/25 22:28:31.47&#xA;&#xA;This is the Progress Report generated when the interrupt was received:&#xA;  VirtualMachineEvacuation Evacuation (Spec Runtime: 8m9.737s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96&#xA;    In [It] (Node Runtime: 8m1.49s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96&#xA;      At [By Step] Virtual machine agents should be ready (Step Runtime: 8m1.49s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:97&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 146 [sync.WaitGroup.Wait, 8 minutes]&#xA;        sync.runtime_SemacquireWaitGroup(0x100200b30?, 0x60?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x140005bd110)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x140001aa060, 0x2, 0x101c79e58?}, {0x101996a2d, 0x2a}, {{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x101996a2d, 0x2a}, {{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, 0x26}, {0x1400040ef00, 0x22}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x101996a2d, 0x2a}, {0x101953a0a, 0x7}, {{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, 0x26}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitVMAgentReady({{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, 0x26}, {0x0, 0x0}, 0xe8d4a51000})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:274&#xA;            | func WaitVMAgentReady(opts kc.WaitOptions) {&#xA;            | &#x9;GinkgoHelper()&#xA;            &gt; &#x9;WaitPhaseByLabel(kc.ResourceVM, PhaseRunning, opts)&#xA;            | &#x9;WaitConditionIsTrueByLabel(kc.ResourceVM, vmcondition.TypeAgentReady.String(), opts)&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func17.5()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:98&#xA;            | It(&#34;Evacuation&#34;, func() {&#xA;            | &#x9;By(&#34;Virtual machine agents should be ready&#34;)&#xA;            &gt; &#x9;WaitVMAgentReady(kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 150 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x100010990?, 0x12de212c0?, 0x104570a78?, 0x90?, 0x14000980008?, 0x14000888090?, 0x14000561a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000561a88?, 0x1002826fc?, 0x90?, 0x10227e120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x14000312700?, 0x14000561ac4, 0x14000010990?, 0x14000312540?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x140004c42c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x140008a6408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140008a4000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140008a4000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140003319e0?, 0x102315e88?, 0x140003120e0?}}, {0x102336488?, 0x140003120e0?}, {0x140008a2000?, 0xc232c7b5b94f8240?}, {0x10230ed80, 0x140004c4000}, {0x10230ed80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140003319e0?, 0x103823728?, 0x1037f9fa0?}}, {0x102336488, 0x140003120e0}, {0x140008a2000, 0xc4})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10233aa38?, 0x14000627e78?}, {0x101953fba?, 0x1400019fe98?}}, {0x101996a2d, 0x2a}, {0x1400059ca00, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 146&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 151 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x1005bd150?, 0x12de10a00?, 0x1045705c0?, 0x90?, 0x14000a00008?, 0x14000916240?, 0x14000899a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000899a88?, 0x1002826fc?, 0x90?, 0x10227e120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400031eaf0?, 0x14000899ac4, 0x140005bd150?, 0x1400031ea80?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000487680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000decc08?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140005a4480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140005a4480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140003319e0?, 0x102315e88?, 0x1400031e9a0?}}, {0x102336488?, 0x1400031e9a0?}, {0x14000df0000?, 0xc232c7b5b94f5b30?}, {0x10230ed80, 0x14000487580}, {0x10230ed80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140003319e0?, 0x103823728?, 0x1037f9fa0?}}, {0x102336488, 0x1400031e9a0}, {0x14000df0000, 0xc4})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10233aa38?, 0x14000627e78?}, {0x101953fba?, 0x1400009fe68?}}, {0x101996a2d, 0x2a}, {0x1400059ca20, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 146&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      Other Goroutines&#xA;      goroutine 8 [running]&#xA;        github.com/onsi/ginkgo/v2/internal.extractRunningGoroutines()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:181&#xA;        github.com/onsi/ginkgo/v2/internal.NewProgressReport(_, {{0x140006be000, 0x1, 0x1}, {0x14000486c00, 0x1, 0x1}, {0x14000882048, 0x1, 0x1}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:75&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).generateProgressReport(_, _)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:381&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode(_, {0x147, 0x4, {0x10195889b, 0xa}, 0x140007957c0, {{0x102a3db2f, 0x53}, 0x60, {0x0, ...}, ...}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:980&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).attemptSpec(0x14000ddb7f0, 0x1, {{0x140005e8008?, 0x14000486c00?, 0x1?}, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:199&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).run(0x14000ddb7f0, {0x140003d2e40?, 0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:349&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runSpecs(0x14000029508, {0x101950f2b, 0x5}, {0x103823728, 0x0, 0x0}, {0x1400005a0f4, 0x3d}, 0x0, {0x14000092c08, ...})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:489&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).Run(_, {_, _}, {_, _, _}, {_, _}, _, {_, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:130&#xA;        github.com/onsi/ginkgo/v2.RunSpecs({0x10230e0a0, 0x14000582a80}, {0x101950f2b, 0x5}, {0x0, 0x0, 0x0})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/core_dsl.go:300&#xA;        github.com/deckhouse/virtualization/tests/e2e.TestE2E(0x14000582a80)&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:76&#xA;        testing.tRunner(0x14000582a80, 0x1022fdc50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.(*T).Run in goroutine 1&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1997&#xA;&#xA;      goroutine 1 [chan receive, 8 minutes]&#xA;        testing.(*T).Run(0x140005828c0, {0x10195399a?, 0x14000599b38?}, 0x1022fdc50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2005&#xA;        testing.runTests.func1(0x140005828c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2477&#xA;        testing.tRunner(0x140005828c0, 0x14000599c68)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.runTests(0x14000626d80, {0x1037a8fd0, 0x1, 0x1}, {0x140003295c0?, 0xf?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2475&#xA;        testing.(*M).Run(0x140005061e0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2337&#xA;        main.main()&#xA;          _testmain.go:45&#xA;&#xA;      goroutine 56 [syscall]&#xA;        os/signal.signal_recv()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sigqueue.go:149&#xA;        os/signal.loop()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal_unix.go:23&#xA;        os/signal.Notify.func1.1 in goroutine 8&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal.go:152&#xA;&#xA;      goroutine 57 [select]&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x0?)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;        github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;&#xA;      goroutine 58 [select, 8 minutes]&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;        github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;&#xA;      goroutine 163 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12ddf8400, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000118360?, 0x14000998000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000118360, {0x14000998000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000128048, {0x14000998000?, 0x140001995a8?, 0x1001c3a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10230ed80, 0x140004c4200}, {0x10230dec8, 0x14000612008}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x140000de401?, {0x10230ed80, 0x140004c4200})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037a9230?, {0x10230ed80?, 0x140004c4200?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10230ed80, 0x140004c4200}, {0x10230dfc0, 0x14000128048}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005a4180?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 162 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12ddf8c00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140001181e0?, 0x14000900000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140001181e0, {0x14000900000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000128028, {0x14000900000?, 0x1400019fda8?, 0x1001c3a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10230ed80, 0x140004c4000}, {0x10230dec8, 0x140000a3258}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x14000627e01?, {0x10230ed80, 0x140004c4000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037a9230?, {0x10230ed80?, 0x140004c4000?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10230ed80, 0x140004c4000}, {0x10230dfc0, 0x14000128028}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005bd108?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 164 [select, 8 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x140008a4000, 0x140008c6070)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 150&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 152 [IO wait, 8 minutes]&#xA;        internal/poll.runtime_pollWait(0x12ddf8800, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140007186c0?, 0x14000d60000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140007186c0, {0x14000d60000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140004c2228, {0x14000d60000?, 0x1400009fda8?, 0x1001c3a18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10230ed80, 0x14000487580}, {0x10230dec8, 0x140006b20a8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x14000627e01?, {0x10230ed80, 0x14000487580})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037a9230?, {0x10230ed80?, 0x14000487580?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10230ed80, 0x14000487580}, {0x10230dfc0, 0x140004c2228}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140005bd108?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 151&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 153 [IO wait, 4 minutes]&#xA;        internal/poll.runtime_pollWait(0x12ddf8600, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000718780?, 0x14000848000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000718780, {0x14000848000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140004c2250, {0x14000848000?, 0x129?, 0x8000?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x10230ed80, 0x14000487600}, {0x10230dec8, 0x140000a3250}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x10230ed80, 0x14000487600})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x1037a9230?, {0x10230ed80?, 0x14000487600?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x10230ed80, 0x14000487600}, {0x10230dfc0, 0x140004c2250}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x140001829a0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 151&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 154 [select, 8 minutes]&#xA;        os/exec.(*Cmd).watchCtx(0x140005a4480, 0x140000de850)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 151&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;Interrupted by User&#xA;First interrupt received; Ginkgo will run any cleanup and reporting nodes but will skip all remaining specs.  Interrupt again to skip cleanup.&#xA;Here&#39;s a current progress report:&#xA;  VirtualMachineEvacuation Evacuation (Spec Runtime: 8m9.737s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96&#xA;    In [It] (Node Runtime: 8m1.49s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96&#xA;      At [By Step] Virtual machine agents should be ready (Step Runtime: 8m1.49s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:97&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 146 [sync.WaitGroup.Wait, 8 minutes]&#xA;        sync.runtime_SemacquireWaitGroup(0x100200b30?, 0x60?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x140005bd110)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x140001aa060, 0x2, 0x101c79e58?}, {0x101996a2d, 0x2a}, {{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x101996a2d, 0x2a}, {{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, 0x26}, {0x1400040ef00, 0x22}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x101996a2d, 0x2a}, {0x101953a0a, 0x7}, {{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, 0x26}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitVMAgentReady({{0x0, 0x0, 0x0}, 0x1400067b320, {0x1400040e720, 0x26}, {0x0, 0x0}, 0xe8d4a51000})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:274&#xA;            | func WaitVMAgentReady(opts kc.WaitOptions) {&#xA;            | &#x9;GinkgoHelper()&#xA;            &gt; &#x9;WaitPhaseByLabel(kc.ResourceVM, PhaseRunning, opts)&#xA;            | &#x9;WaitConditionIsTrueByLabel(kc.ResourceVM, vmcondition.TypeAgentReady.String(), opts)&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func17.5()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:98&#xA;            | It(&#34;Evacuation&#34;, func() {&#xA;            | &#x9;By(&#34;Virtual machine agents should be ready&#34;)&#xA;            &gt; &#x9;WaitVMAgentReady(kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 150 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x100010990?, 0x12de212c0?, 0x104570a78?, 0x90?, 0x14000980008?, 0x14000888090?, 0x14000561a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000561a88?, 0x1002826fc?, 0x90?, 0x10227e120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x14000312700?, 0x14000561ac4, 0x14000010990?, 0x14000312540?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x140004c42c0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x140008a6408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140008a4000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140008a4000)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140003319e0?, 0x102315e88?, 0x140003120e0?}}, {0x102336488?, 0x140003120e0?}, {0x140008a2000?, 0xc232c7b5b94f8240?}, {0x10230ed80, 0x140004c4000}, {0x10230ed80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140003319e0?, 0x103823728?, 0x1037f9fa0?}}, {0x102336488, 0x140003120e0}, {0x140008a2000, 0xc4})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10233aa38?, 0x14000627e78?}, {0x101953fba?, 0x1400019fe98?}}, {0x101996a2d, 0x2a}, {0x1400059ca00, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 146&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 151 [syscall, 8 minutes]&#xA;        syscall.syscall6(0x1005bd150?, 0x12de10a00?, 0x1045705c0?, 0x90?, 0x14000a00008?, 0x14000916240?, 0x14000899a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000899a88?, 0x1002826fc?, 0x90?, 0x10227e120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400031eaf0?, 0x14000899ac4, 0x140005bd150?, 0x1400031ea80?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000487680)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x14000decc08?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140005a4480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140005a4480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140003319e0?, 0x102315e88?, 0x1400031e9a0?}}, {0x102336488?, 0x1400031e9a0?}, {0x14000df0000?, 0xc232c7b5b94f5b30?}, {0x10230ed80, 0x14000487580}, {0x10230ed80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140003319e0?, 0x103823728?, 0x1037f9fa0?}}, {0x102336488, 0x1400031e9a0}, {0x14000df0000, 0xc4})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x10233aa38?, 0x14000627e78?}, {0x101953fba?, 0x1400009fe68?}}, {0x101996a2d, 0x2a}, {0x1400059ca20, 0x1f}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 146&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&lt; Exit [It] Evacuation - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:96 @ 10/11/25 22:28:31.475 (8m1.495s)&#xA;&gt; Enter [AfterEach] VirtualMachineEvacuation - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:59 @ 10/11/25 22:28:31.475&#xA;Failed to get logs:&#xA;PodName: virt-launcher-head-5073ae15-vm-migration-bios-596s7&#xA;Error: Error from server (BadRequest): container &#34;d8v-compute&#34; in pod &#34;virt-launcher-head-5073ae15-vm-migration-bios-596s7&#34; is waiting to start: ContainerCreating&#xA;&#xA;STEP: Response on deletion request should be successful - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:604 @ 10/11/25 22:28:42.734&#xA;END STEP: Response on deletion request should be successful - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:604 @ 10/11/25 22:28:58.881 (16.147s)&#xA;[FAILED] cannot delete test case resources&#xA;cmd: kubectl delete virtualmachineoperations.virtualization.deckhouse.io --namespace head-5073ae15-end-to-end-vm-evacuation -l &#39;testcase=vm-evacuation&#39;&#xA;stderr: E1011 22:28:55.766456   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server is currently unable to handle the request&#34;&#xA;E1011 22:28:56.738429   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;E1011 22:28:56.996501   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;E1011 22:28:57.229269   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;E1011 22:28:57.472235   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;E1011 22:28:57.707857   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;E1011 22:28:57.940804   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;E1011 22:28:58.173560   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;E1011 22:28:58.404391   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;E1011 22:28:58.634304   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;E1011 22:28:58.874581   51152 memcache.go:265] &#34;Unhandled Error&#34; err=&#34;couldn&#39;t get current server API group list: the server could not find the requested resource&#34;&#xA;Error from server (NotFound): the server could not find the requested resource&#xA;&#xA;Unexpected error:&#xA;    &lt;*exec.ExitError | 0x140005de040&gt;: &#xA;    exit status 1&#xA;    {&#xA;        ProcessState: {&#xA;            pid: 51152,&#xA;            status: 256,&#xA;            rusage: {&#xA;                Utime: {&#xA;                    Sec: 0,&#xA;                    Usec: 99422,&#xA;                    Pad_cgo_0: [0, 0, 0, 0],&#xA;                },&#xA;                Stime: {&#xA;                    Sec: 0,&#xA;                    Usec: 92695,&#xA;                    Pad_cgo_0: [0, 0, 0, 0],&#xA;                },&#xA;                Maxrss: 51970048,&#xA;                Ixrss: 0,&#xA;                Idrss: 0,&#xA;                Isrss: 0,&#xA;                Minflt: 3987,&#xA;                Majflt: 5,&#xA;                Nswap: 0,&#xA;                Inblock: 0,&#xA;                Oublock: 0,&#xA;                Msgsnd: 44,&#xA;                Msgrcv: 44,&#xA;                Nsignals: 77,&#xA;                Nvcsw: 32,&#xA;                Nivcsw: 2527,&#xA;            },&#xA;        },&#xA;        Stderr: nil,&#xA;    }&#xA;occurred&#xA;In [AfterEach] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:626 @ 10/11/25 22:28:58.881&#xA;&lt; Exit [AfterEach] VirtualMachineEvacuation - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_evacuation_test.go:59 @ 10/11/25 22:28:58.881 (27.407s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready get disk count before attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready attaches virtual disk" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready checks VM and VMBDA phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready compares disk count before and after attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases get disk count before detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases detaches virtual disk" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases checks VM phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases compares disk count before and after detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When resources are applied result should be succeeded [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machines are applied checks VMs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machines are applied checks network availability [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machine agents and network are ready starts migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks VMs and VMOPs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks VMs external connection after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks network availability after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When test is completed deletes test case resources [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When resources are applied result should be succeeded [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When virtual machines are applied checks VMs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When virtual machine agents are ready starts migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When VMs migrations are applied checks VMs and VMOPs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When VMs migrations are applied checks VMs external connection after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When test is completed deletes test case resources [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running marks VMs with label map[&#34;specialKey&#34;:&#34;specialValue&#34;]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running checks VMs and pods labels after VMs labeling" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running removes label map[specialKey:specialValue] from VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running checks VMs and pods labels after VMs unlabeling" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase marks VMs with annotation map[&#34;specialKey&#34;:&#34;specialValue&#34;]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase checks VMs and pods annotations after VMs annotating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase removes annotation map[specialKey:specialValue] from VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase checks VMs and pods annotations after VMs unannotating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When run curl-helper status should be in Running phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets VMs and SVCs objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready check ssh connection via `d8 v` to VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks VMs connection to external network" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready check nginx status via `d8 v` on VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-b" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready changes selector in service head-5073ae15-vm-connectivity-a with selector from service head-5073ae15-vm-connectivity-b" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready changes back selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied result should be succeeded [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied checks the resources phase [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied add additional interface to virtual machines [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the resources are ready to use restore the `VirtualMachines` with `forced` mode [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the resources are ready to use check the .status.networks of each VM after restore [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When test is completed deletes test case resources [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual images are applied checks `VirtualImages` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual disks are applied checks `VirtualDisks` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine are applied checks `VirtualMachine` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine are applied retrieves the test objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine block device attachment is applied checks `VirtualMachineBlockDeviceAttachment` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready obtains the disks metadata before resizing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready resizes the disks" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready checks `VirtualDisks`, `VirtualMachine` and `VirtualMachineBlockDeviceAttachment` phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready obtains and compares the disks metadata after resizing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual images are applied: checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual disks are applied: checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines are applied: checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machine block device attachments are applied: checks VMBDAs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When unattached VDs in phase Ready: creates VDs snapshots with `requiredConsistency`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When unattached VDs in phase Ready: checks snapshots of unattached VDs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase creates snapshots with `requiredConsistency` of attached VDs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase creates `vdSnapshots` concurrently" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase checks snapshots" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase checks `FileSystemFrozen` status of VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] IPAM vmip with type Auto Creates vmip with type Auto" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] IPAM vmip with type Static Creates vmip with type Static" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the virtualization resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the virtualization resources are applied checks the resources phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use retrieves the test objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use retrieves the disk count before the images attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use attaches the images into the `VirtualMachine`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use checks the `VirtualMachine` and the `VirtualMachineBlockDeviceAttachments` phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use compares the disk count before and after attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use checks that the `ISO` image is attached as `CD-ROM`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use check that the images are attached as the `ReadOnly` devices" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use detaches the images" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use compares the disk count after detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtualization resources are applied: checks the resources phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machines agents are ready checks the `status.nodeName` field of the `VirtualMachines`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machine `node-selector` agent is ready sets the `spec.nodeSelector` field" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machine `node-affinity` agent is ready sets the `spec.affinity.nodeAffinity` field" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied result should be succeeded [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied checks the resources phase [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied add additional interface to virtual machines [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the resources are ready to use restore the `VirtualMachines` with `Safe` mode [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the resources are ready to use check the .status.networks of each VM after restore [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When test is completed deletes test case resources [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineCancelMigration Cancel migrate [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual disks are applied should be in Ready phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual machines are applied should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine agents are ready changes the number of processor cores" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine is patched checks the number of processor cores in specification" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine is restarted should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine agents are ready checks that the number of processor cores was changed" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is in Running phase changes the number of processor cores" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is patched checks the number of processor cores in specification" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is restarted should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine agents are ready checks that the number of processor cores was changed" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when only root disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when root disk changed storage class and one local additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when root disk changed storage class and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when only additional disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when only root disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when root disk changed storage class and one local additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when root disk changed storage class and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when only additional disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful two migrations in a row [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy Project creates project" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy Project checks project readiness" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual images are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual disks are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual machines are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual disks are applied: checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are applied: checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are ready: has qemu version in the status" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are ready: has libvirt version in the status" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLiveMigrationTCPSession checks TCP connection [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When base virtual resources are ready checks VD phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When base virtual resources are ready checks VDSnapshot phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When virtual images are applied checks CVIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual disks are applied checks VDs phases with map[vm:not-existing-vmclass-with-changing] and map[vm:not-existing-vmclass-with-creating] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual disks are applied checks VDs phases with map[vm:existing-vmclass] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines are applied checks VMs phases with map[vm:not-existing-vmclass-with-changing] and map[vm:not-existing-vmclass-with-creating] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines are applied checks VMs phases with map[vm:existing-vmclass] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending checks condition status before changing &#39;virtulaMachineCLass` field with existing class" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending changes VMClassName in VM specification with existing VMClass" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending checks VM phase and condition status after changing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending checks condition status before creating `VirtualMachineClass`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending changes VMClassName in VM specification with not existing VMClass which have correct prefix for creating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending creates new `VirtualMachineClass`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending checks VM phase and condition after creating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines in phase Running checks sizing policy match" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtualization resources are applied result should be succeeded [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtualization resources are applied should fill empty virtualMachineClassName with the default class name [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual images are applied checks VIs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When cluster virtual images are applied checks CVIs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machine classes are applied checks VMClasses phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines IP addresses are applied patches custom VMIP with unassigned address [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines IP addresses are applied checks VMIPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual disks are applied checks VDs phases with consumers [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual disks are applied checks VDs phases with no consumers [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines are applied checks VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machine block device attachments are applied checks VMBDAs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest External connection When Virtual machine agents are ready checks VMs external connectivity [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs stops VMs by VMOPs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs checks VMOPs and VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs cleanup AlwaysOn VM VMOPs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are starting starts VMs by VMOP [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are starting checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh stops VMs by ssh [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh checks VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh start not AlwaysOn VMs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by VMOP reboot VMs by VMOP [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by VMOP checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by ssh reboot VMs by ssh [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting after deleting their pods reboots the VMs by deleting their pods [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting after deleting their pods checks VMs external connection after reboot [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When Virtual machine agents are ready starts migrations [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When VMs migrations are applied checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When VMs migrations are applied checks VMs external connection after migrations [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When test is completed deletes test case resources [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when only root disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when root disk on local storage and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when only additional disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when only root disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when root disk on local storage and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when only additional disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful two migrations in a row [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted first and completed second [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted because virtual machine stopped when virtual machine deleting [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted because virtual machine stopped when virtual machine stopped from OS [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration Migrate to not matched node should reverted because migration canceled when pod pending [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be failed with RWO VMBDA [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[SynchronizedAfterSuite]" classname="Tests" status="failed" time="0.780906083">
              <failure message="Expected success, but got an error:&#xA;    &lt;*errors.StatusError | 0x140008fe960&gt;: &#xA;    the server could not find the requested resource (get pods)&#xA;    {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource (get pods)&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;pods&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;&lt;html&gt;\r\n&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;\r\n&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }" type="failed">[FAILED] Expected success, but got an error:&#xA;    &lt;*errors.StatusError | 0x140008fe960&gt;: &#xA;    the server could not find the requested resource (get pods)&#xA;    {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource (get pods)&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;pods&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;&lt;html&gt;\r\n&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;\r\n&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;In [SynchronizedAfterSuite] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:183 @ 10/11/25 22:28:59.667&#xA;</failure>
              <system-err>&gt; Enter [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 22:28:58.886&#xA;&lt; Exit [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 22:28:58.886 (0s)&#xA;&gt; Enter [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 22:28:58.886&#xA;[FAILED] Expected success, but got an error:&#xA;    &lt;*errors.StatusError | 0x140008fe960&gt;: &#xA;    the server could not find the requested resource (get pods)&#xA;    {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource (get pods)&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;&#34;,&#xA;                Kind: &#34;pods&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;&lt;html&gt;\r\n&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;\r\n&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;In [SynchronizedAfterSuite] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:183 @ 10/11/25 22:28:59.667&#xA;&lt; Exit [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 22:28:59.667 (781ms)&#xA;</system-err>
          </testcase>
          <testcase name="[DeferCleanup (Suite)]" classname="Tests" status="failed" time="0.115894666">
              <failure message="Expected success, but got an error:&#xA;    &lt;*errors.StatusError | 0x14000684320&gt;: &#xA;    the server could not find the requested resource (get projects.deckhouse.io)&#xA;    {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource (get projects.deckhouse.io)&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;deckhouse.io&#34;,&#xA;                Kind: &#34;projects&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;&lt;html&gt;\r\n&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;\r\n&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }" type="failed">[FAILED] Expected success, but got an error:&#xA;    &lt;*errors.StatusError | 0x14000684320&gt;: &#xA;    the server could not find the requested resource (get projects.deckhouse.io)&#xA;    {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource (get projects.deckhouse.io)&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;deckhouse.io&#34;,&#xA;                Kind: &#34;projects&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;&lt;html&gt;\r\n&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;\r\n&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;In [DeferCleanup (Suite)] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:177 @ 10/11/25 22:28:59.783&#xA;</failure>
              <system-err>&gt; Enter [DeferCleanup (Suite)] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:175 @ 10/11/25 22:28:59.667&#xA;[FAILED] Expected success, but got an error:&#xA;    &lt;*errors.StatusError | 0x14000684320&gt;: &#xA;    the server could not find the requested resource (get projects.deckhouse.io)&#xA;    {&#xA;        ErrStatus: {&#xA;            TypeMeta: {Kind: &#34;&#34;, APIVersion: &#34;&#34;},&#xA;            ListMeta: {&#xA;                SelfLink: &#34;&#34;,&#xA;                ResourceVersion: &#34;&#34;,&#xA;                Continue: &#34;&#34;,&#xA;                RemainingItemCount: nil,&#xA;            },&#xA;            Status: &#34;Failure&#34;,&#xA;            Message: &#34;the server could not find the requested resource (get projects.deckhouse.io)&#34;,&#xA;            Reason: &#34;NotFound&#34;,&#xA;            Details: {&#xA;                Name: &#34;&#34;,&#xA;                Group: &#34;deckhouse.io&#34;,&#xA;                Kind: &#34;projects&#34;,&#xA;                UID: &#34;&#34;,&#xA;                Causes: [&#xA;                    {&#xA;                        Type: &#34;UnexpectedServerResponse&#34;,&#xA;                        Message: &#34;&lt;html&gt;\r\n&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;\r\n&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;&#34;,&#xA;                        Field: &#34;&#34;,&#xA;                    },&#xA;                ],&#xA;                RetryAfterSeconds: 0,&#xA;            },&#xA;            Code: 404,&#xA;        },&#xA;    }&#xA;In [DeferCleanup (Suite)] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:177 @ 10/11/25 22:28:59.783&#xA;&lt; Exit [DeferCleanup (Suite)] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:175 @ 10/11/25 22:28:59.783 (116ms)&#xA;</system-err>
          </testcase>
      </testsuite>
  </testsuites>