<?xml version="1.0" encoding="UTF-8"?>
  <testsuites tests="215" disabled="199" errors="1" failures="1" time="136.264553417">
      <testsuite name="Tests" package="/Users/antont/ansible_deckhouse/virtualization-full/tests/e2e" tests="215" disabled="0" skipped="199" errors="1" failures="1" time="136.264553417" timestamp="2025-10-11T22:26:28">
          <properties>
              <property name="SuiteSucceeded" value="false"></property>
              <property name="SuiteHasProgrammaticFocus" value="false"></property>
              <property name="SpecialSuiteFailureReason" value="Interrupted by User"></property>
              <property name="SuiteLabels" value="[]"></property>
              <property name="RandomSeed" value="1760210782"></property>
              <property name="RandomizeAllSpecs" value="false"></property>
              <property name="LabelFilter" value=""></property>
              <property name="FocusStrings" value=""></property>
              <property name="SkipStrings" value=""></property>
              <property name="FocusFiles" value=""></property>
              <property name="SkipFiles" value=""></property>
              <property name="FailOnPending" value="false"></property>
              <property name="FailOnEmpty" value="false"></property>
              <property name="FailFast" value="false"></property>
              <property name="FlakeAttempts" value="0"></property>
              <property name="DryRun" value="false"></property>
              <property name="ParallelTotal" value="1"></property>
              <property name="OutputInterceptorMode" value=""></property>
          </properties>
          <testcase name="[SynchronizedBeforeSuite]" classname="Tests" status="passed" time="4.577706458">
              <system-err>&gt; Enter [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 22:26:28.228&#xA;&lt; Exit [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 22:26:32.805 (4.577s)&#xA;&gt; Enter [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 22:26:32.805&#xA;&lt; Exit [SynchronizedBeforeSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:137 @ 10/11/25 22:26:32.805 (1ms)&#xA;</system-err>
          </testcase>
          <testcase name="[It] IPAM vmip with type Auto Creates vmip with type Auto" classname="Tests" status="passed" time="4.289543666">
              <system-err>&gt; Enter [BeforeAll] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:50 @ 10/11/25 22:26:32.808&#xA;&lt; Exit [BeforeAll] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:50 @ 10/11/25 22:26:36.361 (3.554s)&#xA;&gt; Enter [BeforeEach] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:65 @ 10/11/25 22:26:36.361&#xA;&lt; Exit [BeforeEach] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:65 @ 10/11/25 22:26:36.361 (0s)&#xA;&gt; Enter [It] Creates vmip with type Auto - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:80 @ 10/11/25 22:26:36.361&#xA;STEP: Create a vmip automatically and check its binding with a lease - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:81 @ 10/11/25 22:26:36.361&#xA;STEP: Remove label from the lease - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:87 @ 10/11/25 22:26:36.732&#xA;STEP: Wait for the label to be restored by the controller - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:96 @ 10/11/25 22:26:36.858&#xA;&lt; Exit [It] Creates vmip with type Auto - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:80 @ 10/11/25 22:26:37.097 (735ms)&#xA;&gt; Enter [AfterEach] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:157 @ 10/11/25 22:26:37.097&#xA;&lt; Exit [AfterEach] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:157 @ 10/11/25 22:26:37.097 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] IPAM vmip with type Static Creates vmip with type Static" classname="Tests" status="passed" time="1.6143634580000001">
              <system-err>&gt; Enter [BeforeEach] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:65 @ 10/11/25 22:26:37.097&#xA;&lt; Exit [BeforeEach] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:65 @ 10/11/25 22:26:37.097 (0s)&#xA;&gt; Enter [It] Creates vmip with type Static - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:108 @ 10/11/25 22:26:37.097&#xA;STEP: Create an intermediate vmip automatically to allocate a new ip address - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:109 @ 10/11/25 22:26:37.097&#xA;STEP: Delete the intermediate vmip automatically and check that the lease is released - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:115 @ 10/11/25 22:26:37.462&#xA;STEP: Reuse the released lease with a static vmip - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:124 @ 10/11/25 22:26:37.705&#xA;STEP: Delete the static vmip and lease, then create another static vmip with this ip address - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:132 @ 10/11/25 22:26:38.078&#xA;&lt; Exit [It] Creates vmip with type Static - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:108 @ 10/11/25 22:26:38.711 (1.614s)&#xA;&gt; Enter [AfterEach] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:157 @ 10/11/25 22:26:38.711&#xA;&lt; Exit [AfterEach] IPAM - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/ipam_test.go:157 @ 10/11/25 22:26:38.711 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtualization resources are applied: result should be succeeded" classname="Tests" status="passed" time="4.581904542">
              <system-err>&gt; Enter [BeforeAll] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:35 @ 10/11/25 22:26:38.712&#xA;&lt; Exit [BeforeAll] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:35 @ 10/11/25 22:26:40.674 (1.963s)&#xA;&gt; Enter [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:26:40.674&#xA;&lt; Exit [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:26:40.674 (0s)&#xA;&gt; Enter [It] result should be succeeded - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:57 @ 10/11/25 22:26:40.674&#xA;&lt; Exit [It] result should be succeeded - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:57 @ 10/11/25 22:26:43.293 (2.619s)&#xA;&gt; Enter [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:26:43.293&#xA;&lt; Exit [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:26:43.293 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual disks are applied: checks VDs phases" classname="Tests" status="passed" time="17.147949542">
              <system-err>&gt; Enter [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:26:43.294&#xA;&lt; Exit [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:26:43.294 (0s)&#xA;&gt; Enter [It] checks VDs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:67 @ 10/11/25 22:26:43.294&#xA;STEP: VDs should be in Ready phase - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:68 @ 10/11/25 22:26:43.294&#xA;&lt; Exit [It] checks VDs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:67 @ 10/11/25 22:27:00.441 (17.148s)&#xA;&gt; Enter [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:27:00.441&#xA;&lt; Exit [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:27:00.441 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are applied: checks VMs phases" classname="Tests" status="passed" time="2.886517833">
              <system-err>&gt; Enter [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:27:00.441&#xA;&lt; Exit [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:27:00.441 (0s)&#xA;&gt; Enter [It] checks VMs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:78 @ 10/11/25 22:27:00.441&#xA;STEP: VM should be in Running phase - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:79 @ 10/11/25 22:27:00.441&#xA;&lt; Exit [It] checks VMs phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:78 @ 10/11/25 22:27:03.328 (2.886s)&#xA;&gt; Enter [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:27:03.328&#xA;&lt; Exit [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:27:03.328 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are ready: has qemu version in the status" classname="Tests" status="passed" time="0.000114">
              <system-err>&gt; Enter [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:27:03.328&#xA;&lt; Exit [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:27:03.328 (0s)&#xA;&gt; Enter [It] has qemu version in the status - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:97 @ 10/11/25 22:27:03.328&#xA;&lt; Exit [It] has qemu version in the status - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:97 @ 10/11/25 22:27:03.328 (0s)&#xA;&gt; Enter [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:27:03.328&#xA;&lt; Exit [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:27:03.328 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When virtual machines are ready: has libvirt version in the status" classname="Tests" status="passed" time="0.000101208">
              <system-err>&gt; Enter [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:27:03.328&#xA;&lt; Exit [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:27:03.328 (0s)&#xA;&gt; Enter [It] has libvirt version in the status - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:103 @ 10/11/25 22:27:03.328&#xA;&lt; Exit [It] has libvirt version in the status - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:103 @ 10/11/25 22:27:03.328 (0s)&#xA;&gt; Enter [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:27:03.328&#xA;&lt; Exit [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:27:03.328 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] VirtualMachineVersions When test is completed deletes test case resources" classname="Tests" status="passed" time="68.404879">
              <system-err>&gt; Enter [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:27:03.329&#xA;&lt; Exit [BeforeEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:44 @ 10/11/25 22:27:03.329 (0s)&#xA;&gt; Enter [It] deletes test case resources - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:114 @ 10/11/25 22:27:03.329&#xA;STEP: Response on deletion request should be successful - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:604 @ 10/11/25 22:27:03.329&#xA;END STEP: Response on deletion request should be successful - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:604 @ 10/11/25 22:28:11.732 (1m8.405s)&#xA;&lt; Exit [It] deletes test case resources - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:114 @ 10/11/25 22:28:11.733 (1m8.405s)&#xA;&gt; Enter [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:28:11.733&#xA;&lt; Exit [AfterEach] VirtualMachineVersions - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/vm_version_test.go:50 @ 10/11/25 22:28:11.733 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy Project creates project" classname="Tests" status="passed" time="1.23669">
              <system-err>&gt; Enter [BeforeAll] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:36 @ 10/11/25 22:28:11.733&#xA;&lt; Exit [BeforeAll] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:36 @ 10/11/25 22:28:11.734 (1ms)&#xA;&gt; Enter [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:11.734&#xA;&lt; Exit [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:11.734 (0s)&#xA;&gt; Enter [It] creates project - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:61 @ 10/11/25 22:28:11.734&#xA;&lt; Exit [It] creates project - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:61 @ 10/11/25 22:28:12.969 (1.235s)&#xA;&gt; Enter [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:12.97&#xA;&lt; Exit [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:12.97 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy Project checks project readiness" classname="Tests" status="passed" time="2.758111083">
              <system-err>&gt; Enter [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:12.97&#xA;&lt; Exit [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:12.97 (0s)&#xA;&gt; Enter [It] checks project readiness - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:72 @ 10/11/25 22:28:12.97&#xA;STEP: Project should be deployed - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:73 @ 10/11/25 22:28:12.97&#xA;&lt; Exit [It] checks project readiness - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:72 @ 10/11/25 22:28:15.728 (2.758s)&#xA;&gt; Enter [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:15.728&#xA;&lt; Exit [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:15.728 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied result should be succeeded" classname="Tests" status="passed" time="3.0021775">
              <system-err>&gt; Enter [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:15.728&#xA;&lt; Exit [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:15.728 (0s)&#xA;&gt; Enter [It] result should be succeeded - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:83 @ 10/11/25 22:28:15.728&#xA;&lt; Exit [It] result should be succeeded - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:83 @ 10/11/25 22:28:18.73 (3.002s)&#xA;&gt; Enter [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:18.73&#xA;&lt; Exit [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:18.73 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual images are applied" classname="Tests" status="passed" time="7.073638666">
              <system-err>&gt; Enter [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:18.731&#xA;&lt; Exit [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:18.731 (0s)&#xA;&gt; Enter [It] When virtual images are applied - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:101 @ 10/11/25 22:28:18.731&#xA;STEP: VIs should be in Ready phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:94 @ 10/11/25 22:28:18.731&#xA;&lt; Exit [It] When virtual images are applied - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:101 @ 10/11/25 22:28:25.804 (7.074s)&#xA;&gt; Enter [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:25.804&#xA;&lt; Exit [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:25.804 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual disks are applied" classname="Tests" status="interrupted" time="14.369140584">
              <error message="Interrupted by User" type="interrupted">[INTERRUPTED] Interrupted by User&#xA;In [It] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102 @ 10/11/25 22:28:31.47&#xA;&#xA;This is the Progress Report generated when the interrupt was received:&#xA;  ImporterNetworkPolicy When resources are applied When virtual disks are applied (Spec Runtime: 5.665s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102&#xA;    In [It] (Node Runtime: 5.665s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102&#xA;      At [By Step] VDs should be in Ready phases (Step Runtime: 5.665s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:94&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 234 [sync.WaitGroup.Wait]&#xA;        sync.runtime_SemacquireWaitGroup(0x104cb8b30?, 0x10?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x14000a18da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x14001082520, 0x2, 0x106731e58?}, {0x10644a204, 0x28}, {{0x0, 0x0, 0x0}, 0x140005fea80, {0x14000057a10, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x10644a204, 0x28}, {{0x0, 0x0, 0x0}, 0x140005fea80, {0x14000057a10, 0x30}, {0x14000055900, 0x20}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x10644a204, 0x28}, {0x106408eef, 0x5}, {{0x0, 0x0, 0x0}, 0x140005fea80, {0x14000057a10, 0x30}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func7.7({0x10640795c?, 0x0?}, {0x10644a204, 0x28}, {0x106408eef, 0x5})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:95&#xA;            | func(resourceShortName string, resource kc.Resource, phase string) {&#xA;            | &#x9;By(fmt.Sprintf(&#34;%ss should be in %s phases&#34;, resourceShortName, phase))&#xA;            &gt; &#x9;WaitPhaseByLabel(resource, phase, kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        reflect.Value.call({0x1069ae7e0?, 0x14000404e70?, 0x140000b4e18?}, {0x106408530, 0x4}, {0x140002c81e0, 0x3, 0x1050e11b0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/reflect/value.go:581&#xA;        reflect.Value.Call({0x1069ae7e0?, 0x14000404e70?, 0x106e18ca0?}, {0x140002c81e0?, 0x0?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/reflect/value.go:365&#xA;      &gt; github.com/onsi/ginkgo/v2.invokeFunction({0x1069ae7e0, 0x14000404e70}, {0x1400061e800, 0x3, 0x14000771000?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/table_dsl.go:339&#xA;            | &#x9;}&#xA;            | &#xA;            &gt; &#x9;return reflect.ValueOf(function).Call(inValues)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/onsi/ginkgo/v2.generateTable.func2.2()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/table_dsl.go:303&#xA;            | &#x9;&#x9;&#x9;panic(err)&#xA;            | &#x9;&#x9;}&#xA;            &gt; &#x9;&#x9;invokeFunction(internalBody, entry.parameters)&#xA;            | &#x9;})&#xA;            | }&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x14000653c50?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;            | &#xA;            | &#x9;body := arg.(func())&#xA;            &gt; &#x9;return func(SpecContext) { body() }, false&#xA;            | }&#xA;            | &#xA;      &gt; github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;            | &#x9;}()&#xA;            | &#xA;            &gt; &#x9;node.Body(sc)&#xA;            | &#x9;finished = true&#xA;            | }()&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;            | failureC := make(chan types.Failure)&#xA;            | &#xA;            &gt; go func() {&#xA;            | &#x9;finished := false&#xA;            | &#x9;defer func() {&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 28 [select, 2 minutes]&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;            | go func() {&#xA;            | &#x9;for {&#xA;            &gt; &#x9;&#x9;select {&#xA;            | &#x9;&#x9;case &lt;-signalChannel:&#xA;            | &#x9;&#x9;&#x9;handler()&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;            | }&#xA;            | ctx, cancel := context.WithCancel(context.Background())&#xA;            &gt; go func() {&#xA;            | &#x9;for {&#xA;            | &#x9;&#x9;select {&#xA;&#xA;      goroutine 100 [sync.Cond.Wait]&#xA;        sync.runtime_notifyListWait(0x14000764648, 0x1c)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x14000764638)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x14000764630, {0x1400099c000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400099a150?}, {0x1400099c000?, 0x1068a1b40?, 0x140010b9080?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x140000a2ae0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x140000a2ae0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x140007d6008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x140007d6008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x140007d6008, {0x14000b060db, 0xf9f25, 0x104dfdc74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x14000329348, {0x14000b060db, 0xf9f25, 0xf9f25})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000b060db?, 0x1400063d7c8?, 0x14000b05e61?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x140009c9da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x140004323c0, {0x114708798, 0x1400099a030}, {0x106dc75a0, 0x140000753e0})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 71&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 39 [select]&#xA;      &gt; github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x0?)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;            | var interruptCause InterruptCause&#xA;            | for {&#xA;            &gt; &#x9;select {&#xA;            | &#x9;case &lt;-signalChannel:&#xA;            | &#x9;&#x9;interruptCause = InterruptCauseSignal&#xA;      &gt; github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;            | }&#xA;            | &#xA;            &gt; go func(abortChannel chan interface{}) {&#xA;            | &#x9;var interruptCause InterruptCause&#xA;            | &#x9;for {&#xA;&#xA;      goroutine 102 [sync.Cond.Wait]&#xA;        sync.runtime_notifyListWait(0x140000dcf48, 0xa0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x140000dcf38)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x140000dcf30, {0x140005c4000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400099a150?}, {0x140005c4000?, 0x1068a1b40?, 0x1400070d550?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x14000075f20)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x14000075f20)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x14000aa0008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x14000aa0008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x14000aa0008, {0x14000c19a84, 0xe657c, 0x104dfdc74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x1400026c008, {0x14000c19a84, 0xe657c, 0xe657c})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000c19a84?, 0x140004ebdf8?, 0x14000c19963?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x14000033da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x140004323c0, {0x114708798, 0x1400099af60}, {0x106dc75a0, 0x140000753e0})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 71&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 239 [syscall]&#xA;        syscall.syscall6(0x100a18de0?, 0x11465e308?, 0x109028a78?, 0x90?, 0x140004a1808?, 0x1400028e2d0?, 0x14000982a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000982a88?, 0x104d3a6fc?, 0x90?, 0x106d36120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400019d110?, 0x14000982ac4, 0x14000a18de0?, 0x1400019d0a0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000754640)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x140000dbc08?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140000dc480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140000dc480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a3490?, 0x106dcde88?, 0x1400019cfc0?}}, {0x106dee488?, 0x1400019cfc0?}, {0x14000564240?, 0xc232cad5b38f99a8?}, {0x106dc6d80, 0x140007545c0}, {0x106dc6d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a3490?, 0x1082db728?, 0x1082b1fa0?}}, {0x106dee488, 0x1400019cfc0}, {0x14000564240, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x106df2a38?, 0x140004bd350?}, {0x10640bfba?, 0x25?}}, {0x10644a204, 0x28}, {0x14000a05901, 0x14}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 234&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 238 [syscall]&#xA;        syscall.syscall6(0x1009147b0?, 0x11479d048?, 0x109028108?, 0x90?, 0x140000a5008?, 0x140010d21b0?, 0x140000b4a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x140000b4a88?, 0x104d3a6fc?, 0x90?, 0x106d36120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400029c540?, 0x140000b4ac4, 0x140009147b0?, 0x1400029c4d0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x1400059c200)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x140010d5408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x14000628180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x14000628180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a3490?, 0x106dcde88?, 0x1400029c3f0?}}, {0x106dee488?, 0x1400029c3f0?}, {0x140010fe000?, 0xc232cad5b38fd440?}, {0x106dc6d80, 0x1400059c180}, {0x106dc6d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a3490?, 0x1082db728?, 0x1082b1fa0?}}, {0x106dee488, 0x1400029c3f0}, {0x140010fe000, 0xbb})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x106df2a38?, 0x140004bd350?}, {0x10640bfba?, 0x140000b4e88?}}, {0x10644a204, 0x28}, {0x14000a058f0, 0x10}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 234&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      Other Goroutines&#xA;      goroutine 8 [running]&#xA;        github.com/onsi/ginkgo/v2/internal.extractRunningGoroutines()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:181&#xA;        github.com/onsi/ginkgo/v2/internal.NewProgressReport(_, {{0x14001082360, 0x2, 0x2}, {0x1400019ca10, 0x2, 0x2}, {0x14000a139e0, 0x2, 0x2}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:75&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).generateProgressReport(_, _)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:381&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode(_, {0x5e, 0x4, {0x106435596, 0x1e}, 0x140002a3560, {{0x1074f578d, 0x5d}, 0x66, {0x0, ...}, ...}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:980&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).attemptSpec(0x140008077f0, 0x1, {{0x1400051b008?, 0x1400019ca10?, 0x2?}, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:199&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).run(0x140008077f0, {0x140006e2000?, 0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:349&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runSpecs(0x1400047f508, {0x106408f2b, 0x5}, {0x1082db728, 0x0, 0x0}, {0x1400005a0f4, 0x3d}, 0x0, {0x14000092c08, ...})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:489&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).Run(_, {_, _}, {_, _, _}, {_, _}, _, {_, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:130&#xA;        github.com/onsi/ginkgo/v2.RunSpecs({0x106dc60a0, 0x14000502e00}, {0x106408f2b, 0x5}, {0x0, 0x0, 0x0})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/core_dsl.go:300&#xA;        github.com/deckhouse/virtualization/tests/e2e.TestE2E(0x14000502e00)&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:76&#xA;        testing.tRunner(0x14000502e00, 0x106db5c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.(*T).Run in goroutine 1&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1997&#xA;&#xA;      goroutine 1 [chan receive, 2 minutes]&#xA;        testing.(*T).Run(0x14000502c40, {0x10640b99a?, 0x14000597b38?}, 0x106db5c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2005&#xA;        testing.runTests.func1(0x14000502c40)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2477&#xA;        testing.tRunner(0x14000502c40, 0x14000597c68)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.runTests(0x140004bc7b0, {0x108260fd0, 0x1, 0x1}, {0x140004e5780?, 0xf?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2475&#xA;        testing.(*M).Run(0x140005af0e0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2337&#xA;        main.main()&#xA;          _testmain.go:45&#xA;&#xA;      goroutine 244 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fb600, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140000754a0?, 0x140009d8000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140000754a0, {0x140009d8000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140004281b8, {0x140009d8000?, 0x14001155da8?, 0x104c7ba18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x106dc6d80, 0x1400059c1c0}, {0x106dc5ec8, 0x140004980c8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x106dc6d80, 0x1400059c1c0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x108261230?, {0x106dc6d80?, 0x1400059c1c0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x106dc6d80, 0x1400059c1c0}, {0x106dc5fc0, 0x140004281b8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 238&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 53 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fba00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140005b0f80?, 0x1400083e500?, 0x0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140005b0f80, {0x1400083e500, 0x2500, 0x2500})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        net.(*netFD).Read(0x140005b0f80, {0x1400083e500?, 0x14000031818?, 0x104c7eb28?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/fd_posix.go:68&#xA;        net.(*conn).Read(0x14000428000, {0x1400083e500?, 0x30083e500?, 0x1145aa8e0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/net.go:196&#xA;        crypto/tls.(*atLeastReader).Read(0x140000de390, {0x1400083e500?, 0x140000318d8?, 0x104f93ed4?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:816&#xA;        bytes.(*Buffer).ReadFrom(0x140002ad7a8, {0x106dc7de0, 0x140000de390})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bytes/buffer.go:217&#xA;        crypto/tls.(*Conn).readFromUntil(0x140002ad508, {0x11482a200, 0x14000428000}, 0x14000031980?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:838&#xA;        crypto/tls.(*Conn).readRecordOrCCS(0x140002ad508, 0x0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:627&#xA;        crypto/tls.(*Conn).readRecord(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:589&#xA;        crypto/tls.(*Conn).Read(0x140002ad508, {0x140006e7000, 0x1000, 0x1400013a480?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:1392&#xA;        bufio.(*Reader).Read(0x140006e0060, {0x140002a44a0, 0x9, 0x1052e3f40?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:245&#xA;        io.ReadAtLeast({0x106dc63c0, 0x140006e0060}, {0x140002a44a0, 0x9, 0x9}, 0x9)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:335&#xA;        io.ReadFull(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:354&#xA;        golang.org/x/net/http2.readFrameHeader({0x140002a44a0, 0x9, 0x14000031de8?}, {0x106dc63c0?, 0x140006e0060?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:242&#xA;        golang.org/x/net/http2.(*Framer).ReadFrame(0x140002a4460)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:506&#xA;        golang.org/x/net/http2.(*clientConnReadLoop).run(0x14000031f98)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2258&#xA;        golang.org/x/net/http2.(*ClientConn).readLoop(0x14000102a80)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2127&#xA;        golang.org/x/net/http2.(*Transport).newClientConn in goroutine 52&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:912&#xA;&#xA;      goroutine 82 [syscall]&#xA;        os/signal.signal_recv()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sigqueue.go:149&#xA;        os/signal.loop()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal_unix.go:23&#xA;        os/signal.Notify.func1.1 in goroutine 8&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal.go:152&#xA;&#xA;      goroutine 101 [select, 2 minutes]&#xA;        golang.org/x/net/http2.(*clientStream).writeRequest(0x140000dcf00, 0x14000573180, 0x0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;        golang.org/x/net/http2.(*clientStream).doRequest(0x140000dcf00, 0x104cedb64?, 0x14000628780?)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;        golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 71&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;      goroutine 64 [select, 2 minutes]&#xA;        golang.org/x/net/http2.(*clientStream).writeRequest(0x14000764600, 0x1400087e640, 0x0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;        golang.org/x/net/http2.(*clientStream).doRequest(0x14000764600, 0x0?, 0x0?)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;        golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 71&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;      goroutine 240 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fc000, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140007306c0?, 0x14000d10000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140007306c0, {0x14000d10000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000554a58, {0x14000d10000?, 0x14000983da8?, 0x104c7ba18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x106dc6d80, 0x140007545c0}, {0x106dc5ec8, 0x14000d0e000}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x106dc6d80, 0x140007545c0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x108261230?, {0x106dc6d80?, 0x140007545c0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x106dc6d80, 0x140007545c0}, {0x106dc5fc0, 0x14000554a58}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 239&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 241 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fb200, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000730780?, 0x14000a32000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000730780, {0x14000a32000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000554a70, {0x14000a32000?, 0x14000984da8?, 0x104c7ba18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x106dc6d80, 0x14000754600}, {0x106dc5ec8, 0x1400011c3f8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x106dc6d80, 0x14000754600})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x108261230?, {0x106dc6d80?, 0x14000754600?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x106dc6d80, 0x14000754600}, {0x106dc5fc0, 0x14000554a70}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 239&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 290 [select]&#xA;        os/exec.(*Cmd).watchCtx(0x140000dc480, 0x1400057ed20)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 239&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 243 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fbc00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000074d80?, 0x14000a2a000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000074d80, {0x14000a2a000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000428188, {0x14000a2a000?, 0x14001154da8?, 0x104c7ba18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x106dc6d80, 0x1400059c180}, {0x106dc5ec8, 0x1400011c3f0}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x106dc6d80, 0x1400059c180})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x108261230?, {0x106dc6d80?, 0x1400059c180?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x106dc6d80, 0x1400059c180}, {0x106dc5fc0, 0x14000428188}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 238&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 245 [select]&#xA;        os/exec.(*Cmd).watchCtx(0x14000628180, 0x140006c6460)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 238&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;</error>
              <system-err>&gt; Enter [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:25.804&#xA;&lt; Exit [BeforeEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:43 @ 10/11/25 22:28:25.804 (0s)&#xA;&gt; Enter [It] When virtual disks are applied - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102 @ 10/11/25 22:28:25.804&#xA;STEP: VDs should be in Ready phases - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:94 @ 10/11/25 22:28:25.804&#xA;[INTERRUPTED] Interrupted by User&#xA;In [It] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102 @ 10/11/25 22:28:31.47&#xA;&#xA;This is the Progress Report generated when the interrupt was received:&#xA;  ImporterNetworkPolicy When resources are applied When virtual disks are applied (Spec Runtime: 5.665s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102&#xA;    In [It] (Node Runtime: 5.665s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102&#xA;      At [By Step] VDs should be in Ready phases (Step Runtime: 5.665s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:94&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 234 [sync.WaitGroup.Wait]&#xA;        sync.runtime_SemacquireWaitGroup(0x104cb8b30?, 0x10?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x14000a18da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x14001082520, 0x2, 0x106731e58?}, {0x10644a204, 0x28}, {{0x0, 0x0, 0x0}, 0x140005fea80, {0x14000057a10, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x10644a204, 0x28}, {{0x0, 0x0, 0x0}, 0x140005fea80, {0x14000057a10, 0x30}, {0x14000055900, 0x20}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x10644a204, 0x28}, {0x106408eef, 0x5}, {{0x0, 0x0, 0x0}, 0x140005fea80, {0x14000057a10, 0x30}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func7.7({0x10640795c?, 0x0?}, {0x10644a204, 0x28}, {0x106408eef, 0x5})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:95&#xA;            | func(resourceShortName string, resource kc.Resource, phase string) {&#xA;            | &#x9;By(fmt.Sprintf(&#34;%ss should be in %s phases&#34;, resourceShortName, phase))&#xA;            &gt; &#x9;WaitPhaseByLabel(resource, phase, kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        reflect.Value.call({0x1069ae7e0?, 0x14000404e70?, 0x140000b4e18?}, {0x106408530, 0x4}, {0x140002c81e0, 0x3, 0x1050e11b0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/reflect/value.go:581&#xA;        reflect.Value.Call({0x1069ae7e0?, 0x14000404e70?, 0x106e18ca0?}, {0x140002c81e0?, 0x0?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/reflect/value.go:365&#xA;      &gt; github.com/onsi/ginkgo/v2.invokeFunction({0x1069ae7e0, 0x14000404e70}, {0x1400061e800, 0x3, 0x14000771000?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/table_dsl.go:339&#xA;            | &#x9;}&#xA;            | &#xA;            &gt; &#x9;return reflect.ValueOf(function).Call(inValues)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/onsi/ginkgo/v2.generateTable.func2.2()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/table_dsl.go:303&#xA;            | &#x9;&#x9;&#x9;panic(err)&#xA;            | &#x9;&#x9;}&#xA;            &gt; &#x9;&#x9;invokeFunction(internalBody, entry.parameters)&#xA;            | &#x9;})&#xA;            | }&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x14000653c50?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;            | &#xA;            | &#x9;body := arg.(func())&#xA;            &gt; &#x9;return func(SpecContext) { body() }, false&#xA;            | }&#xA;            | &#xA;      &gt; github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;            | &#x9;}()&#xA;            | &#xA;            &gt; &#x9;node.Body(sc)&#xA;            | &#x9;finished = true&#xA;            | }()&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;            | failureC := make(chan types.Failure)&#xA;            | &#xA;            &gt; go func() {&#xA;            | &#x9;finished := false&#xA;            | &#x9;defer func() {&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 28 [select, 2 minutes]&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;            | go func() {&#xA;            | &#x9;for {&#xA;            &gt; &#x9;&#x9;select {&#xA;            | &#x9;&#x9;case &lt;-signalChannel:&#xA;            | &#x9;&#x9;&#x9;handler()&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;            | }&#xA;            | ctx, cancel := context.WithCancel(context.Background())&#xA;            &gt; go func() {&#xA;            | &#x9;for {&#xA;            | &#x9;&#x9;select {&#xA;&#xA;      goroutine 100 [sync.Cond.Wait]&#xA;        sync.runtime_notifyListWait(0x14000764648, 0x1c)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x14000764638)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x14000764630, {0x1400099c000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400099a150?}, {0x1400099c000?, 0x1068a1b40?, 0x140010b9080?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x140000a2ae0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x140000a2ae0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x140007d6008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x140007d6008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x140007d6008, {0x14000b060db, 0xf9f25, 0x104dfdc74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x14000329348, {0x14000b060db, 0xf9f25, 0xf9f25})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000b060db?, 0x1400063d7c8?, 0x14000b05e61?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x140009c9da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x140004323c0, {0x114708798, 0x1400099a030}, {0x106dc75a0, 0x140000753e0})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 71&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 39 [select]&#xA;      &gt; github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x0?)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;            | var interruptCause InterruptCause&#xA;            | for {&#xA;            &gt; &#x9;select {&#xA;            | &#x9;case &lt;-signalChannel:&#xA;            | &#x9;&#x9;interruptCause = InterruptCauseSignal&#xA;      &gt; github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;            | }&#xA;            | &#xA;            &gt; go func(abortChannel chan interface{}) {&#xA;            | &#x9;var interruptCause InterruptCause&#xA;            | &#x9;for {&#xA;&#xA;      goroutine 102 [sync.Cond.Wait]&#xA;        sync.runtime_notifyListWait(0x140000dcf48, 0xa0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x140000dcf38)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x140000dcf30, {0x140005c4000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400099a150?}, {0x140005c4000?, 0x1068a1b40?, 0x1400070d550?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x14000075f20)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x14000075f20)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x14000aa0008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x14000aa0008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x14000aa0008, {0x14000c19a84, 0xe657c, 0x104dfdc74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x1400026c008, {0x14000c19a84, 0xe657c, 0xe657c})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000c19a84?, 0x140004ebdf8?, 0x14000c19963?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x14000033da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x140004323c0, {0x114708798, 0x1400099af60}, {0x106dc75a0, 0x140000753e0})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 71&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 239 [syscall]&#xA;        syscall.syscall6(0x100a18de0?, 0x11465e308?, 0x109028a78?, 0x90?, 0x140004a1808?, 0x1400028e2d0?, 0x14000982a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000982a88?, 0x104d3a6fc?, 0x90?, 0x106d36120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400019d110?, 0x14000982ac4, 0x14000a18de0?, 0x1400019d0a0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000754640)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x140000dbc08?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140000dc480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140000dc480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a3490?, 0x106dcde88?, 0x1400019cfc0?}}, {0x106dee488?, 0x1400019cfc0?}, {0x14000564240?, 0xc232cad5b38f99a8?}, {0x106dc6d80, 0x140007545c0}, {0x106dc6d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a3490?, 0x1082db728?, 0x1082b1fa0?}}, {0x106dee488, 0x1400019cfc0}, {0x14000564240, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x106df2a38?, 0x140004bd350?}, {0x10640bfba?, 0x25?}}, {0x10644a204, 0x28}, {0x14000a05901, 0x14}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 234&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 238 [syscall]&#xA;        syscall.syscall6(0x1009147b0?, 0x11479d048?, 0x109028108?, 0x90?, 0x140000a5008?, 0x140010d21b0?, 0x140000b4a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x140000b4a88?, 0x104d3a6fc?, 0x90?, 0x106d36120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400029c540?, 0x140000b4ac4, 0x140009147b0?, 0x1400029c4d0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x1400059c200)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x140010d5408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x14000628180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x14000628180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a3490?, 0x106dcde88?, 0x1400029c3f0?}}, {0x106dee488?, 0x1400029c3f0?}, {0x140010fe000?, 0xc232cad5b38fd440?}, {0x106dc6d80, 0x1400059c180}, {0x106dc6d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a3490?, 0x1082db728?, 0x1082b1fa0?}}, {0x106dee488, 0x1400029c3f0}, {0x140010fe000, 0xbb})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x106df2a38?, 0x140004bd350?}, {0x10640bfba?, 0x140000b4e88?}}, {0x10644a204, 0x28}, {0x14000a058f0, 0x10}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 234&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      Other Goroutines&#xA;      goroutine 8 [running]&#xA;        github.com/onsi/ginkgo/v2/internal.extractRunningGoroutines()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:181&#xA;        github.com/onsi/ginkgo/v2/internal.NewProgressReport(_, {{0x14001082360, 0x2, 0x2}, {0x1400019ca10, 0x2, 0x2}, {0x14000a139e0, 0x2, 0x2}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:75&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).generateProgressReport(_, _)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:381&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runNode(_, {0x5e, 0x4, {0x106435596, 0x1e}, 0x140002a3560, {{0x1074f578d, 0x5d}, 0x66, {0x0, ...}, ...}, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:980&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).attemptSpec(0x140008077f0, 0x1, {{0x1400051b008?, 0x1400019ca10?, 0x2?}, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:199&#xA;        github.com/onsi/ginkgo/v2/internal.(*group).run(0x140008077f0, {0x140006e2000?, 0x0?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/group.go:349&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).runSpecs(0x1400047f508, {0x106408f2b, 0x5}, {0x1082db728, 0x0, 0x0}, {0x1400005a0f4, 0x3d}, 0x0, {0x14000092c08, ...})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:489&#xA;        github.com/onsi/ginkgo/v2/internal.(*Suite).Run(_, {_, _}, {_, _, _}, {_, _}, _, {_, ...}, ...)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:130&#xA;        github.com/onsi/ginkgo/v2.RunSpecs({0x106dc60a0, 0x14000502e00}, {0x106408f2b, 0x5}, {0x0, 0x0, 0x0})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/core_dsl.go:300&#xA;        github.com/deckhouse/virtualization/tests/e2e.TestE2E(0x14000502e00)&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:76&#xA;        testing.tRunner(0x14000502e00, 0x106db5c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.(*T).Run in goroutine 1&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1997&#xA;&#xA;      goroutine 1 [chan receive, 2 minutes]&#xA;        testing.(*T).Run(0x14000502c40, {0x10640b99a?, 0x14000597b38?}, 0x106db5c50)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2005&#xA;        testing.runTests.func1(0x14000502c40)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2477&#xA;        testing.tRunner(0x14000502c40, 0x14000597c68)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:1934&#xA;        testing.runTests(0x140004bc7b0, {0x108260fd0, 0x1, 0x1}, {0x140004e5780?, 0xf?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2475&#xA;        testing.(*M).Run(0x140005af0e0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/testing/testing.go:2337&#xA;        main.main()&#xA;          _testmain.go:45&#xA;&#xA;      goroutine 244 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fb600, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140000754a0?, 0x140009d8000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140000754a0, {0x140009d8000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x140004281b8, {0x140009d8000?, 0x14001155da8?, 0x104c7ba18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x106dc6d80, 0x1400059c1c0}, {0x106dc5ec8, 0x140004980c8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x106dc6d80, 0x1400059c1c0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x108261230?, {0x106dc6d80?, 0x1400059c1c0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x106dc6d80, 0x1400059c1c0}, {0x106dc5fc0, 0x140004281b8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 238&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 53 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fba00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140005b0f80?, 0x1400083e500?, 0x0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140005b0f80, {0x1400083e500, 0x2500, 0x2500})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        net.(*netFD).Read(0x140005b0f80, {0x1400083e500?, 0x14000031818?, 0x104c7eb28?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/fd_posix.go:68&#xA;        net.(*conn).Read(0x14000428000, {0x1400083e500?, 0x30083e500?, 0x1145aa8e0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/net/net.go:196&#xA;        crypto/tls.(*atLeastReader).Read(0x140000de390, {0x1400083e500?, 0x140000318d8?, 0x104f93ed4?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:816&#xA;        bytes.(*Buffer).ReadFrom(0x140002ad7a8, {0x106dc7de0, 0x140000de390})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bytes/buffer.go:217&#xA;        crypto/tls.(*Conn).readFromUntil(0x140002ad508, {0x11482a200, 0x14000428000}, 0x14000031980?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:838&#xA;        crypto/tls.(*Conn).readRecordOrCCS(0x140002ad508, 0x0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:627&#xA;        crypto/tls.(*Conn).readRecord(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:589&#xA;        crypto/tls.(*Conn).Read(0x140002ad508, {0x140006e7000, 0x1000, 0x1400013a480?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/crypto/tls/conn.go:1392&#xA;        bufio.(*Reader).Read(0x140006e0060, {0x140002a44a0, 0x9, 0x1052e3f40?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:245&#xA;        io.ReadAtLeast({0x106dc63c0, 0x140006e0060}, {0x140002a44a0, 0x9, 0x9}, 0x9)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:335&#xA;        io.ReadFull(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:354&#xA;        golang.org/x/net/http2.readFrameHeader({0x140002a44a0, 0x9, 0x14000031de8?}, {0x106dc63c0?, 0x140006e0060?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:242&#xA;        golang.org/x/net/http2.(*Framer).ReadFrame(0x140002a4460)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/frame.go:506&#xA;        golang.org/x/net/http2.(*clientConnReadLoop).run(0x14000031f98)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2258&#xA;        golang.org/x/net/http2.(*ClientConn).readLoop(0x14000102a80)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2127&#xA;        golang.org/x/net/http2.(*Transport).newClientConn in goroutine 52&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:912&#xA;&#xA;      goroutine 82 [syscall]&#xA;        os/signal.signal_recv()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sigqueue.go:149&#xA;        os/signal.loop()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal_unix.go:23&#xA;        os/signal.Notify.func1.1 in goroutine 8&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/signal/signal.go:152&#xA;&#xA;      goroutine 101 [select, 2 minutes]&#xA;        golang.org/x/net/http2.(*clientStream).writeRequest(0x140000dcf00, 0x14000573180, 0x0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;        golang.org/x/net/http2.(*clientStream).doRequest(0x140000dcf00, 0x104cedb64?, 0x14000628780?)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;        golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 71&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;      goroutine 64 [select, 2 minutes]&#xA;        golang.org/x/net/http2.(*clientStream).writeRequest(0x14000764600, 0x1400087e640, 0x0)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1570&#xA;        golang.org/x/net/http2.(*clientStream).doRequest(0x14000764600, 0x0?, 0x0?)&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1431&#xA;        golang.org/x/net/http2.(*ClientConn).roundTrip in goroutine 71&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:1336&#xA;&#xA;      goroutine 240 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fc000, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x140007306c0?, 0x14000d10000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x140007306c0, {0x14000d10000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000554a58, {0x14000d10000?, 0x14000983da8?, 0x104c7ba18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x106dc6d80, 0x140007545c0}, {0x106dc5ec8, 0x14000d0e000}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x106dc6d80, 0x140007545c0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x108261230?, {0x106dc6d80?, 0x140007545c0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x106dc6d80, 0x140007545c0}, {0x106dc5fc0, 0x14000554a58}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 239&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 241 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fb200, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000730780?, 0x14000a32000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000730780, {0x14000a32000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000554a70, {0x14000a32000?, 0x14000984da8?, 0x104c7ba18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x106dc6d80, 0x14000754600}, {0x106dc5ec8, 0x1400011c3f8}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x106dc6d80, 0x14000754600})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x108261230?, {0x106dc6d80?, 0x14000754600?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x106dc6d80, 0x14000754600}, {0x106dc5fc0, 0x14000554a70}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 239&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 290 [select]&#xA;        os/exec.(*Cmd).watchCtx(0x140000dc480, 0x1400057ed20)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 239&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;&#xA;      goroutine 243 [IO wait]&#xA;        internal/poll.runtime_pollWait(0x1146fbc00, 0x72)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/netpoll.go:351&#xA;        internal/poll.(*pollDesc).wait(0x14000074d80?, 0x14000a2a000?, 0x1)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:84&#xA;        internal/poll.(*pollDesc).waitRead(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_poll_runtime.go:89&#xA;        internal/poll.(*FD).Read(0x14000074d80, {0x14000a2a000, 0x8000, 0x8000})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/internal/poll/fd_unix.go:165&#xA;        os.(*File).read(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:29&#xA;        os.(*File).Read(0x14000428188, {0x14000a2a000?, 0x14001154da8?, 0x104c7ba18?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:144&#xA;        io.copyBuffer({0x106dc6d80, 0x1400059c180}, {0x106dc5ec8, 0x1400011c3f0}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:429&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os.genericWriteTo(0x1?, {0x106dc6d80, 0x1400059c180})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:295&#xA;        os.(*File).WriteTo(0x108261230?, {0x106dc6d80?, 0x1400059c180?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file.go:273&#xA;        io.copyBuffer({0x106dc6d80, 0x1400059c180}, {0x106dc5fc0, 0x14000428188}, {0x0, 0x0, 0x0})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:411&#xA;        io.Copy(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/io/io.go:388&#xA;        os/exec.(*Cmd).writerDescriptor.func1()&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:596&#xA;        os/exec.(*Cmd).Start.func2(0x0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:749&#xA;        os/exec.(*Cmd).Start in goroutine 238&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:748&#xA;&#xA;      goroutine 245 [select]&#xA;        os/exec.(*Cmd).watchCtx(0x14000628180, 0x140006c6460)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:789&#xA;        os/exec.(*Cmd).Start in goroutine 238&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:775&#xA;Interrupted by User&#xA;First interrupt received; Ginkgo will run any cleanup and reporting nodes but will skip all remaining specs.  Interrupt again to skip cleanup.&#xA;Here&#39;s a current progress report:&#xA;  ImporterNetworkPolicy When resources are applied When virtual disks are applied (Spec Runtime: 5.665s)&#xA;    /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102&#xA;    In [It] (Node Runtime: 5.665s)&#xA;      /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102&#xA;      At [By Step] VDs should be in Ready phases (Step Runtime: 5.665s)&#xA;        /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:94&#xA;&#xA;      Spec Goroutine&#xA;      goroutine 234 [sync.WaitGroup.Wait]&#xA;        sync.runtime_SemacquireWaitGroup(0x104cb8b30?, 0x10?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:114&#xA;        sync.(*WaitGroup).Wait(0x14000a18da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/waitgroup.go:206&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources({0x14001082520, 0x2, 0x106731e58?}, {0x10644a204, 0x28}, {{0x0, 0x0, 0x0}, 0x140005fea80, {0x14000057a10, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:349&#xA;            | &#x9;&#x9;}()&#xA;            | &#x9;}&#xA;            &gt; &#x9;wg.Wait()&#xA;            | &#x9;Expect(waitErr).To(BeEmpty(), &#34;should observe resources in &#39;%s&#39; state before %s timeout&#34;, opts.For, opts.Timeout.String())&#xA;            | }&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitByLabel({0x10644a204, 0x28}, {{0x0, 0x0, 0x0}, 0x140005fea80, {0x14000057a10, 0x30}, {0x14000055900, 0x20}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:308&#xA;            | &#x9;&#x9;resources = strings.Split(res.StdOut(), &#34; &#34;)&#xA;            | &#x9;}&#xA;            &gt; &#x9;WaitResources(resources, resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitPhaseByLabel({0x10644a204, 0x28}, {0x106408eef, 0x5}, {{0x0, 0x0, 0x0}, 0x140005fea80, {0x14000057a10, 0x30}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:290&#xA;            | &#x9;GinkgoHelper()&#xA;            | &#x9;opts.For = fmt.Sprintf(&#34;&#39;jsonpath={.status.phase}=%s&#39;&#34;, phase)&#xA;            &gt; &#x9;WaitByLabel(resource, opts)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.init.func7.7({0x10640795c?, 0x0?}, {0x10644a204, 0x28}, {0x106408eef, 0x5})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:95&#xA;            | func(resourceShortName string, resource kc.Resource, phase string) {&#xA;            | &#x9;By(fmt.Sprintf(&#34;%ss should be in %s phases&#34;, resourceShortName, phase))&#xA;            &gt; &#x9;WaitPhaseByLabel(resource, phase, kc.WaitOptions{&#xA;            | &#x9;&#x9;Labels:    testCaseLabel,&#xA;            | &#x9;&#x9;Namespace: ns,&#xA;        reflect.Value.call({0x1069ae7e0?, 0x14000404e70?, 0x140000b4e18?}, {0x106408530, 0x4}, {0x140002c81e0, 0x3, 0x1050e11b0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/reflect/value.go:581&#xA;        reflect.Value.Call({0x1069ae7e0?, 0x14000404e70?, 0x106e18ca0?}, {0x140002c81e0?, 0x0?, 0x0?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/reflect/value.go:365&#xA;      &gt; github.com/onsi/ginkgo/v2.invokeFunction({0x1069ae7e0, 0x14000404e70}, {0x1400061e800, 0x3, 0x14000771000?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/table_dsl.go:339&#xA;            | &#x9;}&#xA;            | &#xA;            &gt; &#x9;return reflect.ValueOf(function).Call(inValues)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/onsi/ginkgo/v2.generateTable.func2.2()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/table_dsl.go:303&#xA;            | &#x9;&#x9;&#x9;panic(err)&#xA;            | &#x9;&#x9;}&#xA;            &gt; &#x9;&#x9;invokeFunction(internalBody, entry.parameters)&#xA;            | &#x9;})&#xA;            | }&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0x14000653c50?, 0x0?})&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/node.go:475&#xA;            | &#xA;            | &#x9;body := arg.(func())&#xA;            &gt; &#x9;return func(SpecContext) { body() }, false&#xA;            | }&#xA;            | &#xA;      &gt; github.com/onsi/ginkgo/v2/internal.(*Suite).runNode.func3()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:894&#xA;            | &#x9;}()&#xA;            | &#xA;            &gt; &#x9;node.Body(sc)&#xA;            | &#x9;finished = true&#xA;            | }()&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.(*Suite).runNode in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/suite.go:881&#xA;            | failureC := make(chan types.Failure)&#xA;            | &#xA;            &gt; go func() {&#xA;            | &#x9;finished := false&#xA;            | &#x9;defer func() {&#xA;&#xA;      Goroutines of Interest&#xA;      goroutine 28 [select, 2 minutes]&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal.func1()&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:32&#xA;            | go func() {&#xA;            | &#x9;for {&#xA;            &gt; &#x9;&#x9;select {&#xA;            | &#x9;&#x9;case &lt;-signalChannel:&#xA;            | &#x9;&#x9;&#x9;handler()&#xA;      &gt; github.com/onsi/ginkgo/v2/internal.RegisterForProgressSignal in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/progress_report.go:30&#xA;            | }&#xA;            | ctx, cancel := context.WithCancel(context.Background())&#xA;            &gt; go func() {&#xA;            | &#x9;for {&#xA;            | &#x9;&#x9;select {&#xA;&#xA;      goroutine 100 [sync.Cond.Wait]&#xA;        sync.runtime_notifyListWait(0x14000764648, 0x1c)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x14000764638)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x14000764630, {0x1400099c000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400099a150?}, {0x1400099c000?, 0x1068a1b40?, 0x140010b9080?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x140000a2ae0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x140000a2ae0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x140007d6008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x140007d6008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x140007d6008, {0x14000b060db, 0xf9f25, 0x104dfdc74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x14000329348, {0x14000b060db, 0xf9f25, 0xf9f25})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000b060db?, 0x1400063d7c8?, 0x14000b05e61?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x140009c9da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x140004323c0, {0x114708798, 0x1400099a030}, {0x106dc75a0, 0x140000753e0})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 71&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 39 [select]&#xA;      &gt; github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts.func2(0x0?)&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:131&#xA;            | var interruptCause InterruptCause&#xA;            | for {&#xA;            &gt; &#x9;select {&#xA;            | &#x9;case &lt;-signalChannel:&#xA;            | &#x9;&#x9;interruptCause = InterruptCauseSignal&#xA;      &gt; github.com/onsi/ginkgo/v2/internal/interrupt_handler.(*InterruptHandler).registerForInterrupts in goroutine 8&#xA;          /Users/antont/go/pkg/mod/github.com/onsi/ginkgo/v2@v2.22.0/internal/interrupt_handler/interrupt_handler.go:128&#xA;            | }&#xA;            | &#xA;            &gt; go func(abortChannel chan interface{}) {&#xA;            | &#x9;var interruptCause InterruptCause&#xA;            | &#x9;for {&#xA;&#xA;      goroutine 102 [sync.Cond.Wait]&#xA;        sync.runtime_notifyListWait(0x140000dcf48, 0xa0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sema.go:606&#xA;        sync.(*Cond).Wait(0x140000dcf38)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/sync/cond.go:71&#xA;        golang.org/x/net/http2.(*pipe).Read(0x140000dcf30, {0x140005c4000, 0x1000, 0x1000})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/pipe.go:76&#xA;        golang.org/x/net/http2.transportResponseBody.Read({0x1400099a150?}, {0x140005c4000?, 0x1068a1b40?, 0x1400070d550?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:2560&#xA;        bufio.(*Reader).fill(0x14000075f20)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:113&#xA;        bufio.(*Reader).ReadByte(0x14000075f20)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/bufio.go:273&#xA;        compress/flate.(*decompressor).moreBits(0x14000aa0008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:697&#xA;        compress/flate.(*decompressor).nextBlock(0x14000aa0008)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:304&#xA;        compress/flate.(*decompressor).Read(0x14000aa0008, {0x14000c19a84, 0xe657c, 0x104dfdc74?})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/flate/inflate.go:348&#xA;        compress/gzip.(*Reader).Read(0x1400026c008, {0x14000c19a84, 0xe657c, 0xe657c})&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/compress/gzip/gunzip.go:252&#xA;        golang.org/x/net/http2.(*gzipReader).Read(0x0?, {0x14000c19a84?, 0x140004ebdf8?, 0x14000c19963?})&#xA;          /Users/antont/go/pkg/mod/golang.org/x/net@v0.39.0/http2/transport.go:3151&#xA;        bufio.(*Scanner).Scan(0x14000033da0)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/errlogger.(*LogStreamer).Stream(0x140004323c0, {0x114708798, 0x1400099af60}, {0x106dc75a0, 0x140000753e0})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/errlogger/errlogger.go:78&#xA;            | num := 0&#xA;            | &#xA;            &gt; for scanner.Scan() {&#xA;            | &#x9;rawEntry := scanner.Bytes()&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:248&#xA;            | defer l.wg.Done()&#xA;            | &#xA;            &gt; n, err := logStreamer.Stream(readCloser, GinkgoWriter)&#xA;            | l.mu.Lock()&#xA;            | defer l.mu.Unlock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.(*logStreamer).Start in goroutine 71&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:245&#xA;            | &#xA;            | l.wg.Add(1)&#xA;            &gt; go func() {&#xA;            | &#x9;defer l.wg.Done()&#xA;            | &#xA;&#xA;      goroutine 239 [syscall]&#xA;        syscall.syscall6(0x100a18de0?, 0x11465e308?, 0x109028a78?, 0x90?, 0x140004a1808?, 0x1400028e2d0?, 0x14000982a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x14000982a88?, 0x104d3a6fc?, 0x90?, 0x106d36120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400019d110?, 0x14000982ac4, 0x14000a18de0?, 0x1400019d0a0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x14000754640)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x140000dbc08?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x140000dc480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x140000dc480)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a3490?, 0x106dcde88?, 0x1400019cfc0?}}, {0x106dee488?, 0x1400019cfc0?}, {0x14000564240?, 0xc232cad5b38f99a8?}, {0x106dc6d80, 0x140007545c0}, {0x106dc6d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a3490?, 0x1082db728?, 0x1082b1fa0?}}, {0x106dee488, 0x1400019cfc0}, {0x14000564240, 0xbf})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x106df2a38?, 0x140004bd350?}, {0x10640bfba?, 0x25?}}, {0x10644a204, 0x28}, {0x14000a05901, 0x14}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 234&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&#xA;      goroutine 238 [syscall]&#xA;        syscall.syscall6(0x1009147b0?, 0x11479d048?, 0x109028108?, 0x90?, 0x140000a5008?, 0x140010d21b0?, 0x140000b4a58?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/runtime/sys_darwin.go:60&#xA;        syscall.wait4(0x140000b4a88?, 0x104d3a6fc?, 0x90?, 0x106d36120?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/zsyscall_darwin_arm64.go:44&#xA;        syscall.Wait4(0x1400029c540?, 0x140000b4ac4, 0x140009147b0?, 0x1400029c4d0?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/syscall/syscall_bsd.go:144&#xA;        os.(*Process).pidWait.func1(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:64&#xA;        os.ignoringEINTR2[...](...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/file_posix.go:266&#xA;        os.(*Process).pidWait(0x1400059c200)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:63&#xA;        os.(*Process).wait(0x140010d5408?)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec_unix.go:28&#xA;        os.(*Process).Wait(...)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec.go:340&#xA;        os/exec.(*Cmd).Wait(0x14000628180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:922&#xA;        os/exec.(*Cmd).Run(0x14000628180)&#xA;          /opt/homebrew/Cellar/go/1.25.1/libexec/src/os/exec/exec.go:626&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecuteContext({{0x140002a3490?, 0x106dcde88?, 0x1400029c3f0?}}, {0x106dee488?, 0x1400029c3f0?}, {0x140010fe000?, 0xc232cad5b38fd440?}, {0x106dc6d80, 0x1400059c180}, {0x106dc6d80, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:76&#xA;            | &#x9;cmd.Stderr = stderr&#xA;            | &#x9;cmd.Stdout = stdout&#xA;            &gt; &#x9;return cmd.Run()&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/executor.CMDExecutor.ExecContext({{0x140002a3490?, 0x1082db728?, 0x1082b1fa0?}}, {0x106dee488, 0x1400029c3f0}, {0x140010fe000, 0xbb})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/executor/executor.go:49&#xA;            | stdout := new(Buffer)&#xA;            | stderr := new(Buffer)&#xA;            &gt; err := e.ExecuteContext(ctx, command, stdout, stderr)&#xA;            | cmdResult := &amp;CMDResult{&#xA;            | &#x9;stdOut:  stdout,&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e/kubectl.KubectlCMD.WaitResource({{0x106df2a38?, 0x140004bd350?}, {0x10640bfba?, 0x140000b4e88?}}, {0x10644a204, 0x28}, {0x14000a058f0, 0x10}, {{0x0, 0x0, ...}, ...})&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/kubectl/kubectl.go:260&#xA;            | &#x9;ctx, cancel := context.WithTimeout(context.Background(), timeout)&#xA;            | &#x9;defer cancel()&#xA;            &gt; &#x9;return k.ExecContext(ctx, cmd)&#xA;            | }&#xA;            | &#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources.func1()&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:341&#xA;            | go func() {&#xA;            | &#x9;defer wg.Done()&#xA;            &gt; &#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;            | &#x9;if res.Error() != nil {&#xA;            | &#x9;&#x9;mu.Lock()&#xA;      &gt; github.com/deckhouse/virtualization/tests/e2e.WaitResources in goroutine 234&#xA;          /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:339&#xA;            | for _, name := range resources {&#xA;            | &#x9;wg.Add(1)&#xA;            &gt; &#x9;go func() {&#xA;            | &#x9;&#x9;defer wg.Done()&#xA;            | &#x9;&#x9;res := kubectl.WaitResource(resource, name, waitOpts)&#xA;&lt; Exit [It] When virtual disks are applied - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:102 @ 10/11/25 22:28:31.476 (5.672s)&#xA;&gt; Enter [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:31.476&#xA;The list of pods is empty; nothing to dump.&#xA;&lt; Exit [AfterEach] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:54 @ 10/11/25 22:28:37.775 (6.299s)&#xA;&gt; Enter [AfterAll] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:49 @ 10/11/25 22:28:37.775&#xA;STEP: Delete manifests - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:50 @ 10/11/25 22:28:37.775&#xA;STEP: Response on deletion request should be successful - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:604 @ 10/11/25 22:28:37.776&#xA;END STEP: Response on deletion request should be successful - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/util_test.go:604 @ 10/11/25 22:28:40.173 (2.398s)&#xA;&lt; Exit [AfterAll] ImporterNetworkPolicy - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/importer_network_policy_test.go:49 @ 10/11/25 22:28:40.173 (2.398s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] ImporterNetworkPolicy When resources are applied When virtual machines are applied" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtualization resources are applied result should be succeeded [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtualization resources are applied should fill empty virtualMachineClassName with the default class name [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual images are applied checks VIs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When cluster virtual images are applied checks CVIs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machine classes are applied checks VMClasses phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines IP addresses are applied patches custom VMIP with unassigned address [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines IP addresses are applied checks VMIPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual disks are applied checks VDs phases with consumers [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual disks are applied checks VDs phases with no consumers [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machines are applied checks VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When virtual machine block device attachments are applied checks VMBDAs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest External connection When Virtual machine agents are ready checks VMs external connectivity [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs stops VMs by VMOPs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs checks VMOPs and VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by VMOPs cleanup AlwaysOn VM VMOPs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are starting starts VMs by VMOP [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are starting checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh stops VMs by ssh [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh checks VMs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh start not AlwaysOn VMs [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are stopping by ssh checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by VMOP reboot VMs by VMOP [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by VMOP checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting by ssh reboot VMs by ssh [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting after deleting their pods reboots the VMs by deleting their pods [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Power state checks Verify that the virtual machines are restarting after deleting their pods checks VMs external connection after reboot [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When Virtual machine agents are ready starts migrations [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When VMs migrations are applied checks VMs and VMOPs phases [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest Migrations When VMs migrations are applied checks VMs external connection after migrations [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ComplexTest When test is completed deletes test case resources [Serial]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready get disk count before attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready attaches virtual disk" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready checks VM and VMBDA phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Attachment When virtual machine agents are ready compares disk count before and after attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases get disk count before detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases detaches virtual disk" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases checks VM phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment Detachment When virtual machines are in Running phases compares disk count before and after detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskAttachment When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineEvacuation Evacuation [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the virtualization resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the virtualization resources are applied checks the resources phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use retrieves the test objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use retrieves the disk count before the images attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use attaches the images into the `VirtualMachine`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use checks the `VirtualMachine` and the `VirtualMachineBlockDeviceAttachments` phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use compares the disk count before and after attachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use checks that the `ISO` image is attached as `CD-ROM`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use check that the images are attached as the `ReadOnly` devices" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use detaches the images" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When the resources are ready to use compares the disk count after detachment" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] ImageHotplug When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when only root disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when root disk changed storage class and one local additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when root disk changed storage class and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful when only additional disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when only root disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when root disk changed storage class and one local additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when root disk changed storage class and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be reverted when only additional disk changed storage class [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] StorageClassMigration should be successful two migrations in a row [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When resources are applied result should be succeeded [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machines are applied checks VMs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machines are applied checks network availability [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When virtual machine agents and network are ready starts migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks VMs and VMOPs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks VMs external connection after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When VMs migrations are applied checks network availability after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAdditionalNetworkInterfaces When test is completed deletes test case resources [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLiveMigrationTCPSession checks TCP connection [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineCancelMigration Cancel migrate [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When run curl-helper status should be in Running phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets VMs and SVCs objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready check ssh connection via `d8 v` to VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks VMs connection to external network" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready check nginx status via `d8 v` on VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-b" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready changes selector in service head-5073ae15-vm-connectivity-a with selector from service head-5073ae15-vm-connectivity-b" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready gets page from service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready changes back selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When virtual machine agents are ready checks selector in service head-5073ae15-vm-connectivity-a" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConnectivity When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When resources are applied result should be succeeded [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When virtual machines are applied checks VMs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When virtual machine agents are ready starts migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When VMs migrations are applied checks VMs and VMOPs phases [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When VMs migrations are applied checks VMs external connection after migrations [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineMigration When test is completed deletes test case resources [SIG-Migration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied result should be succeeded [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied checks the resources phase [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the virtualization resources are applied add additional interface to virtual machines [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the resources are ready to use restore the `VirtualMachines` with `Safe` mode [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When the resources are ready to use check the .status.networks of each VM after restore [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreSafe When test is completed deletes test case resources [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual images are applied: checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual disks are applied: checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines are applied: checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machine block device attachments are applied: checks VMBDAs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When unattached VDs in phase Ready: creates VDs snapshots with `requiredConsistency`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When unattached VDs in phase Ready: checks snapshots of unattached VDs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase creates snapshots with `requiredConsistency` of attached VDs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase creates `vdSnapshots` concurrently" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase checks snapshots" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When virtual machines in Running phase checks `FileSystemFrozen` status of VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskSnapshots When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtualization resources are applied: result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtualization resources are applied: checks the resources phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machines agents are ready checks the `status.nodeName` field of the `VirtualMachines`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machine `node-selector` agent is ready sets the `spec.nodeSelector` field" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When the virtual machine `node-affinity` agent is ready sets the `spec.affinity.nodeAffinity` field" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineAffinityAndToleration When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual disks are applied checks VDs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machines are applied checks VMs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running marks VMs with label map[&#34;specialKey&#34;:&#34;specialValue&#34;]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running checks VMs and pods labels after VMs labeling" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running removes label map[specialKey:specialValue] from VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When virtual machine is running checks VMs and pods labels after VMs unlabeling" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase marks VMs with annotation map[&#34;specialKey&#34;:&#34;specialValue&#34;]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase checks VMs and pods annotations after VMs annotating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase removes annotation map[specialKey:specialValue] from VMs" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation Annotate `VirtualMachines` in Running phase checks VMs and pods annotations after VMs unannotating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineLabelAndAnnotation When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When base virtual resources are ready checks VD phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When base virtual resources are ready checks VDSnapshot phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When virtual images are applied checks CVIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualImageCreation When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual disks are applied checks VDs phases with map[vm:not-existing-vmclass-with-changing] and map[vm:not-existing-vmclass-with-creating] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual disks are applied checks VDs phases with map[vm:existing-vmclass] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines are applied checks VMs phases with map[vm:not-existing-vmclass-with-changing] and map[vm:not-existing-vmclass-with-creating] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines are applied checks VMs phases with map[vm:existing-vmclass] label" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending checks condition status before changing &#39;virtulaMachineCLass` field with existing class" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending changes VMClassName in VM specification with existing VMClass" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-changing] in phase Pending checks VM phase and condition status after changing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending checks condition status before creating `VirtualMachineClass`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending changes VMClassName in VM specification with not existing VMClass which have correct prefix for creating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending creates new `VirtualMachineClass`" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy Not existing virtual machine class When virtual machine with label map[vm:not-existing-vmclass-with-creating] in phase Pending checks VM phase and condition after creating" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When virtual machines in phase Running checks sizing policy match" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] SizingPolicy When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual images are applied checks `VirtualImages` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual disks are applied checks `VirtualDisks` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine are applied checks `VirtualMachine` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine are applied retrieves the test objects" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When the virtual machine block device attachment is applied checks `VirtualMachineBlockDeviceAttachment` phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready obtains the disks metadata before resizing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready resizes the disks" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready checks `VirtualDisks`, `VirtualMachine` and `VirtualMachineBlockDeviceAttachment` phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing Resizing When the virtual machine is ready obtains and compares the disks metadata after resizing" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualDiskResizing When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when only root disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when root disk on local storage and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful when only additional disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when only root disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when root disk on local storage and one additional disk [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted when only additional disk on local storage [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be successful two migrations in a row [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted first and completed second [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted because virtual machine stopped when virtual machine deleting [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be reverted because virtual machine stopped when virtual machine stopped from OS [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration Migrate to not matched node should reverted because migration canceled when pod pending [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] [sig-storage] LocalVirtualDiskMigration should be failed with RWO VMBDA [SIG-Storage]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When resources are applied result should be succeeded" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual images are applied checks VIs phases" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual disks are applied should be in Ready phase" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When virtual machines are applied should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine agents are ready changes the number of processor cores" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine is patched checks the number of processor cores in specification" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine is restarted should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Manual restart approval mode 1 When virtual machine agents are ready checks that the number of processor cores was changed" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is in Running phase changes the number of processor cores" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is patched checks the number of processor cores in specification" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine is restarted should be ready" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 Automatic restart approval mode 1 When virtual machine agents are ready checks that the number of processor cores was changed" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineConfiguration 1 When test is completed deletes test case resources" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied result should be succeeded [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied checks the resources phase [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the virtualization resources are applied add additional interface to virtual machines [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the resources are ready to use restore the `VirtualMachines` with `forced` mode [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When the resources are ready to use check the .status.networks of each VM after restore [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[It] VirtualMachineRestoreForce When test is completed deletes test case resources [SIG-Restoration]" classname="Tests" status="skipped" time="0">
              <skipped message="skipped"></skipped>
          </testcase>
          <testcase name="[SynchronizedAfterSuite]" classname="Tests" status="failed" time="0.4013215">
              <failure message="Expected success, but got an error:&#xA;    &lt;*errors.joinError | 0x140000de828&gt;: &#xA;    the container &#34;virtualization-controller&#34; was not found: virtualization-controller-6b445c5fbd-wckkk&#xA;    {&#xA;        errs: [&#xA;            &lt;*errors.errorString | 0x14000651570&gt;{&#xA;                s: &#34;the container \&#34;virtualization-controller\&#34; was not found: virtualization-controller-6b445c5fbd-wckkk&#34;,&#xA;            },&#xA;        ],&#xA;    }" type="failed">[FAILED] Expected success, but got an error:&#xA;    &lt;*errors.joinError | 0x140000de828&gt;: &#xA;    the container &#34;virtualization-controller&#34; was not found: virtualization-controller-6b445c5fbd-wckkk&#xA;    {&#xA;        errs: [&#xA;            &lt;*errors.errorString | 0x14000651570&gt;{&#xA;                s: &#34;the container \&#34;virtualization-controller\&#34; was not found: virtualization-controller-6b445c5fbd-wckkk&#34;,&#xA;            },&#xA;        ],&#xA;    }&#xA;In [SynchronizedAfterSuite] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:183 @ 10/11/25 22:28:40.586&#xA;</failure>
              <system-err>&gt; Enter [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 22:28:40.185&#xA;&lt; Exit [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 22:28:40.185 (0s)&#xA;&gt; Enter [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 22:28:40.185&#xA;[FAILED] Expected success, but got an error:&#xA;    &lt;*errors.joinError | 0x140000de828&gt;: &#xA;    the container &#34;virtualization-controller&#34; was not found: virtualization-controller-6b445c5fbd-wckkk&#xA;    {&#xA;        errs: [&#xA;            &lt;*errors.errorString | 0x14000651570&gt;{&#xA;                s: &#34;the container \&#34;virtualization-controller\&#34; was not found: virtualization-controller-6b445c5fbd-wckkk&#34;,&#xA;            },&#xA;        ],&#xA;    }&#xA;In [SynchronizedAfterSuite] at: /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:183 @ 10/11/25 22:28:40.586&#xA;&lt; Exit [SynchronizedAfterSuite] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:182 @ 10/11/25 22:28:40.586 (401ms)&#xA;</system-err>
          </testcase>
          <testcase name="[DeferCleanup (Suite)]" classname="Tests" status="passed" time="3.901920167">
              <system-err>&gt; Enter [DeferCleanup (Suite)] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:175 @ 10/11/25 22:28:40.586&#xA;&lt; Exit [DeferCleanup (Suite)] TOP-LEVEL - /Users/antont/ansible_deckhouse/virtualization-full/tests/e2e/e2e_test.go:175 @ 10/11/25 22:28:44.488 (3.902s)&#xA;</system-err>
          </testcase>
      </testsuite>
  </testsuites>