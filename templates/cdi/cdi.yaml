{{- $nodeSelectorSystem := index (include "helm_lib_node_selector" (tuple . "system") | fromYaml) "nodeSelector" | default (dict) | toJson }}
{{- $nodeSelectorMaster := index (include "helm_lib_node_selector" (tuple . "master") | fromYaml) "nodeSelector" | default (dict) | toJson }}
{{- $tolerationsSystem := index (include "helm_lib_tolerations" (tuple . "system") | fromYaml) "tolerations" | default (list) | toJson }}
{{- $tolerationsAnyNode := index (include "helm_lib_tolerations" (tuple . "any-node") | fromYaml) "tolerations" | default (list) | toJson }}
{{- $proxyImage := include "helm_lib_module_image" (list . "kubeApiProxy") | toJson }}
{{- $kubeAPIProxyRewriter := true }}
---
apiVersion: internal.virtualization.deckhouse.io/v1beta1
kind: DVPInternalCDI
metadata:
  name: cdi
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list .) | nindent 2 }}
spec:
  imagePullPolicy: IfNotPresent
  infra:
    {{- include "helm_lib_node_selector" (tuple . "system") | nindent 4 }}
    {{- include "helm_lib_tolerations" (tuple . "system") | nindent 4 }}
  config:
    imagePullSecrets:
    - name: virtualization-module-registry
  {{- if .Values.global.modules.publicDomainTemplate }}
    uploadProxyURLOverride: {{ include "helm_lib_module_public_domain" (list . "cdi-uploadproxy") }}
    featureGates:
    - HonorWaitForFirstConsumer
  {{- end }}
  customizeComponents:
    patches:
      - resourceType: Deployment
        resourceName: cdi-apiserver
        patch: '[{"op":"replace","path":"/spec/template/spec/nodeSelector","value":{{ $nodeSelectorMaster }}}]'
        type: json
      - resourceType: Deployment
        resourceName: cdi-apiserver
        patch: '[{"op":"replace","path":"/spec/template/spec/tolerations","value":{{ $tolerationsAnyNode }}}]'
        type: json
      - resourceType: Deployment
        resourceName: cdi-uploadproxy
        patch: '[{"op":"replace","path":"/spec/replicas","value":0}]'
        type: json

    {{- if (include "helm_lib_ha_enabled" .) }}
      - resourceType: Deployment
        resourceName: cdi-apiserver
        patch: '[{"op":"replace","path":"/spec/replicas","value":2}]'
        type: json
      - resourceType: Deployment
        resourceName: cdi-apiserver
        patch: {{ include "cdi.strategic_affinity_patch" (list "cdi-apiserver") }}
        type: strategic

      - resourceType: Deployment
        resourceName: cdi-deployment
        patch: '[{"op":"replace","path":"/spec/replicas","value":2}]'
        type: json
      - resourceType: Deployment
        resourceName: cdi-deployment
        patch: {{ include "cdi.strategic_affinity_patch" (list "containerized-data-importer") }}
        type: strategic
    {{- end }}

    {{- if $kubeAPIProxyRewriter }}
      - resourceType: Deployment
        resourceName: cdi-apiserver
        patch: {{ include "cdi.strategic_kubeproxy_patch" (list . "cdi-apiserver" "yes") }}
        type: strategic

      - resourceType: Deployment
        resourceName: cdi-deployment
        patch: {{ include "cdi.strategic_kubeproxy_patch" (list . "cdi-controller" "no") }}
        type: strategic

      # Change service in webhook configurations to point to the rewriter proxy.
      # cdi-api-webhook-proxy service is created separately.
      - resourceName: cdi-api-datavolume-mutate
        resourceType: MutatingWebhookConfiguration
        patch: |
          {"webhook":[
            { "name":"datavolume-mutate.cdi.kubevirt.io",
              "clientConfig":{"service":{"name":"cdi-api-webhook-proxy"}}}
          ]}
        type: strategic
      - resourceName: cdi-api-dataimportcron-validate
        resourceType: ValidatingWebhookConfiguration
        patch: |
          {"webhook":[
            { "name":"dataimportcron-validate.cdi.kubevirt.io",
              "clientConfig":{"service":{"name":"cdi-api-webhook-proxy"}}}
          ]}
        type: strategic
      - resourceName: cdi-api-datavolume-validate
        resourceType: ValidatingWebhookConfiguration
        patch: |
          {"webhook":[
            { "name":"datavolume-validate.cdi.kubevirt.io",
              "clientConfig":{"service":{"name":"cdi-api-webhook-proxy"}}}
          ]}
        type: strategic
      - resourceName: cdi-api-populator-validate
        resourceType: ValidatingWebhookConfiguration
        patch: |
          {"webhook":[
            { "name":"populator-validate.cdi.kubevirt.io",
              "clientConfig":{"service":{"name":"cdi-api-webhook-proxy"}}}
          ]}
        type: strategic
      - resourceName: cdi-api-validate
        resourceType: ValidatingWebhookConfiguration
        patch: |
          {"webhook":[
            { "name":"cdi-validate.cdi.kubevirt.io",
              "clientConfig":{"service":{"name":"cdi-api-webhook-proxy"}}}
          ]}
        type: strategic
      - resourceName: objecttransfer-api-validate
        resourceType: ValidatingWebhookConfiguration
        patch: |
          {"webhook":[
            { "name":"objecttransfer-validate.cdi.kubevirt.io",
              "clientConfig":{"service":{"name":"cdi-api-webhook-proxy"}}}
          ]}
        type: strategic

    {{- end }}

  workload:
    nodeSelector:
      kubernetes.io/os: linux
