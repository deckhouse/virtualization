{{- define "virtualization_controller_resources" }}
cpu: 10m
memory: 150Mi
{{- end }}
{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: virtualization-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "virtualization-controller" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: virtualization-controller
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: virtualization-controller
      minAllowed:
        {{- include "virtualization_controller_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 250Mi
{{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: virtualization-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "virtualization-controller" )) | nindent 2 }}
spec:
  minAvailable: {{ include "helm_lib_is_ha_to_value" (list . 1 0) }}
  selector:
    matchLabels:
      app: virtualization-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtualization-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "virtualization-controller")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_strategy_and_replicas_for_ha" . | nindent 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: virtualization-controller
  template:
    metadata:
      labels:
        app: virtualization-controller
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/virtualization-controller/secret-tls.yaml") . | sha256sum }}
    spec:
      {{ include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "virtualization-controller")) | nindent 6 }}
      containers:
        - name: virtualization-controller
          image: {{ include "helm_lib_module_image" (list . "virtualizationController") }}
          imagePullPolicy: Always
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: admission-webhook-secret
          - mountPath: /kubeconfig.local
            name: kube-api-proxy-kubeconfig
          ports:
            - containerPort: 9443
              name: controller
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
              {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "virtualization_controller_resources" . | nindent 12 }}
              {{- end }}
          env: {{ include "virtualization-controller.envs" . | nindent 12 }}
        - name: proxy
          #image: {{ include "helm_lib_module_image" (list . "kubeApiProxy") }}
          image: "dev-registry.deckhouse.io/virt/dev/diafour/kube-api-proxy:latest"
          imagePullPolicy: Always
          command:
            - /proxy
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: "WEBHOOK_PROXY"
              value: "no"

      dnsPolicy: ClusterFirst
      serviceAccountName: virtualization-controller
      {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      volumes:
        - name: admission-webhook-secret
          secret:
            secretName: virtualization-controller-tls
        - name: kube-api-proxy-kubeconfig
          configMap:
            name: kube-api-proxy-kubeconfig
