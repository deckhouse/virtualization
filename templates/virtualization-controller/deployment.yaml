{{- $priorityClassName := include "priorityClassName" . }}

{{- define "virtualization_controller_resources" }}
cpu: 10m
memory: 150Mi
{{- end }}

{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: virtualization-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "virtualization-controller" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: virtualization-controller
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    {{- include "kube_api_rewriter.vpa_container_policy" . | nindent 4 }}
    - containerName: virtualization-controller
      minAllowed:
        {{- include "virtualization_controller_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 250Mi
{{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: virtualization-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "virtualization-controller" )) | nindent 2 }}
spec:
  minAvailable: {{ include "helm_lib_is_ha_to_value" (list . 1 0) }}
  selector:
    matchLabels:
      app: virtualization-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtualization-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "virtualization-controller")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_strategy_and_replicas_for_ha" . | nindent 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: virtualization-controller
  template:
    metadata:
      labels:
        app: virtualization-controller
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/virtualization-controller/secret-tls.yaml") . | sha256sum }}
        kubectl.kubernetes.io/default-container: virtualization-controller
    spec:
      {{ include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "virtualization-controller")) | nindent 6 }}
      containers:
        {{- include "kube_api_rewriter.sidecar_container" . | nindent 8 }}
        - name: virtualization-controller
          image: {{ include "helm_lib_module_image" (list . "virtualizationController") }}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: admission-webhook-secret
            {{- include "kube_api_rewriter.kubeconfig_volume_mount" . | nindent 12 }}
          ports:
            - containerPort: 9443
              name: controller
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 8081
              name: pprof
              protocol: TCP
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
              {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "virtualization_controller_resources" . | nindent 14 }}
              {{- end }}
          env:
            {{- include "kube_api_rewriter.kubeconfig_env" . | nindent 12 }}
            {{- include "virtualization-controller.envs" . | nindent 12 }}
        - name: kube-rbac-proxy
          {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 10 }}
          image: {{ include "helm_lib_module_common_image" (list . "kubeRbacProxy") }}
          args:
          - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):8443"
          - "--client-ca-file=/etc/kube-rbac-proxy/ca.crt"
          - "--v=2"
          - "--logtostderr=true"
          - "--stale-cache-interval=1h30m"
          - "--livez-path=/livez"
          env:
          - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KUBE_RBAC_PROXY_CONFIG
            value: |
              excludePaths:
              - /config
              upstreams:
              - upstream: http://127.0.0.1:8080/
                path: /
                authorization:
                  resourceAttributes:
                    namespace: d8-virtualization
                    apiGroup: apps
                    apiVersion: v1
                    resource: deployments
                    subresource: http
                    name: virtualization-controller
          ports:
          - containerPort: 8443
            name: https
          livenessProbe:
            httpGet:
              path: /livez
              port: 8443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /livez
              port: 8443
              scheme: HTTPS
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
  {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler") }}
              {{- include "helm_lib_container_kube_rbac_proxy_resources" . | nindent 14 }}
  {{- end }}
          volumeMounts:
          - name: kube-rbac-proxy-ca
            mountPath: /etc/kube-rbac-proxy

      dnsPolicy: ClusterFirst
      serviceAccountName: virtualization-controller
      {{- include "helm_lib_priority_class" (tuple . $priorityClassName) | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      volumes:
        - name: admission-webhook-secret
          secret:
            secretName: virtualization-controller-tls
      - name: kube-rbac-proxy-ca
        configMap:
          defaultMode: 420
          name: kube-rbac-proxy-ca.crt
        {{- include "kube_api_rewriter.kubeconfig_volume" . | nindent 8 }}

