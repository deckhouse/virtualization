{{- $priorityClassName := include "priorityClassName" . }}
{{- $delve := (include "delve" . | fromYaml) -}}
{{- define "vm-route-forge_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}


{{- if eq (include "vm-route-forge.isEnabled" .) "true"}}

{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: vm-route-forge
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "vm-route-forge" "workload-resource-policy.deckhouse.io" "every-node")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: vm-route-forge
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: vm-route-forge
      minAllowed:
        {{- include "vm-route-forge_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 20m
        memory: 25Mi
{{- end }}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vm-route-forge
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "vm-route-forge")) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: vm-route-forge
  template:
    metadata:
      labels:
        app: vm-route-forge
    spec:
      {{- include "helm_lib_priority_class" (tuple . $priorityClassName) | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      imagePullSecrets:
        - name: virtualization-module-registry
      serviceAccountName: vm-route-forge
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: vm-route-forge
          args:
          {{- range .Values.virtualization.internal.moduleConfig.virtualMachineCIDRs }}
          - --cidr={{ . }}
          {{- end }}
          {{- include "helm_lib_module_container_security_context_privileged_read_only_root_filesystem" . | nindent 10 }}
          image: {{ include "helm_lib_module_image" (list . "vmRouteForge") }}
          imagePullPolicy: "IfNotPresent"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if eq (include "moduleLogLevel" .) "debug" }}
            - name: VERBOSITY
              value: "10"
            {{- end }}
            {{- if eq (include "moduleLogLevel" .) "debug" }}
            - name: PPROF_BIND_ADDRESS
              value: ":8119"
            {{- end }}
            - name: HEALTH_PROBE_BIND_ADDRESS
              value: "127.0.0.1:8118"
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
              {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "vm-route-forge_resources" . | nindent 14 }}
              {{- end }}
          ports:
            - containerPort: 8119
              name: pprof
              protocol: TCP
            - containerPort: 8118
              name: health
              protocol: TCP
            {{- include "delvePorts" (list $delve "delve/vm-route-forge") | nindent 12 }}
          {{- if ne "delve/vm-route-forge" ($delve | dig "debug" "component" "<missing>") }}
          readinessProbe:
            httpGet:
              host: localhost
              path: /readyz
              port: 8118
              scheme: HTTP
            initialDelaySeconds: 5
            failureThreshold: 2
            periodSeconds: 1
          livenessProbe:
            httpGet:
              host: localhost
              path: /healthz
              port: 8118
              scheme: HTTP
            periodSeconds: 1
            failureThreshold: 3
          {{- end }}

{{- end }}
