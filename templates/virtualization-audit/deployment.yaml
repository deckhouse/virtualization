{{- $priorityClassName := include "priorityClassName" . }}

{{- define "virtualization_audit_resources" }}
cpu: 10m
memory: 150Mi
{{- end }}

{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: virtualization-audit
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "virtualization-audit" "workload-resource-policy.deckhouse.io" "master")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: virtualization-audit
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: virtualization-audit
        minAllowed:
          {{- include "virtualization_api_resources" . | nindent 10 }}
        maxAllowed:
          cpu: 20m
          memory: 250Mi
{{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: virtualization-audit
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "virtualization-audit" )) | nindent 2 }}
spec:
  minAvailable: {{ include "helm_lib_is_ha_to_value" (list . 1 0) }}
  selector:
    matchLabels:
      app: virtualization-audit
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtualization-audit
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "virtualization-audit")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_strategy_and_replicas_for_ha" . | nindent 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: virtualization-audit
  template:
    metadata:
      labels:
        app: virtualization-audit
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/virtualization-audit/cert-secret.yaml") . | sha256sum }}
        kubectl.kubernetes.io/default-container: virtualization-audit
    spec:
      {{ include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "virtualization-audit")) | nindent 6 }}
      containers:
        - name: virtualization-audit
          args:
            - --secure-port=8443
            {{- if eq .Values.virtualization.logLevel "debug" }}
            - --verbose=10
            {{- else }}
            - --verbose=3
            {{- end }}
            - --tls-ca-file=/etc/virtualization-audit/certificates/ca.crt
            - --tls-cert-file=/etc/virtualization-audit/certificates/tls.crt
            - --tls-private-key-file=/etc/virtualization-audit/certificates/tls.key
          image: {{ include "helm_lib_module_image" (list . "virtualizationAudit") }}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /etc/virtualization-audit/certificates
              name:  virtualization-audit-tls
              readOnly: true
          ports:
            - containerPort: 8443
              name: audit
              protocol: TCP
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
              {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "virtualization_api_resources" . | nindent 14 }}
              {{- end }}
      dnsPolicy: ClusterFirst
      serviceAccountName: virtualization-audit
      {{- include "helm_lib_priority_class" (tuple . $priorityClassName) | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_deckhouse" . | nindent 6 }}
      volumes:
        - name: virtualization-audit-tls
          secret:
            defaultMode: 420
            optional: true
            secretName: virtualization-audit-tls
